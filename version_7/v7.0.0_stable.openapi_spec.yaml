openapi: 3.0.3
info:
  version: 7.0.0
  title: Blend API
servers:
  - url: https://api.beta.blendlabs.com
    description: Beta Environment. Cannot access Production data or Blend instances.
  - url: https://api.blendlabs.com
    description: >-
      Production Environment. Write calls will affect live, Production Blend
      instances.
security:
  - BasicAuth: []
    TargetInstance: []
  - BearerAuth: []
    TargetInstance: []
paths:
  /home-lending/applications/{id}/file-export:
    get:
      operationId: Export Application Data
      summary: Export Application Data
      description: Return the entire MISMO 3.3.1 or Fannie 3.2 file for this application.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: format
          required: true
          description: The requested data format for the response
          example: fannie
          schema:
            type: string
            enum:
              - fannie
              - mismo
      responses:
        '200':
          description: Data Exported Successfully
          content:
            text/plain; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RawApplicationExportData'
            application/xml; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RawApplicationExportData'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications:
    post:
      operationId: Post Home Lending Application
      summary: Post a Home Lending Application
      description: >-
        Create a new application in Blend with minimal borrower and application
        data. This endpoint is usually used to create applications in Blend from
        CRMs or other central borrower databases.
      tags:
        - Home Lending - Applications
      requestBody:
        description: Application Creation Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequestSchema'
            example:
              solutionSubType: MORTGAGE
              applicationExperienceType: FULL_APPLICATION
              loanPurposeType: PURCHASE
              property:
                type: SINGLE_FAMILY
                searchType: NOT_STARTED
                usageType: PRIMARY_RESIDENCE
                value: 120000
                address:
                  streetAddressLine1: 101 main st
                  streetAddressLine2: '132'
                  city: Chicago
                  state: IL
                  zipCode: '70007'
                  zipCodePlusFour: '1000'
                  countyName: Cook County
                otherMortgages:
                  - monthlyPayment: 2500
                    lienAmount: 150000
                    willPayOff: false
                    type: CONVENTIONAL
              loanAmount: 100000
              communityId: '12345'
              leadId: lead1
              crmId: crm1
              losId: los1
              referenceNumber: '12000'
              applicationSource:
                type: LOS
                name: LOS
              sendEmailInvite: true
              interestRate: 4.25
              mortgageType: CONVENTIONAL
              party:
                name:
                  firstName: Tanya
                  middleName: M
                  lastName: Williams
                  suffixName: III
                email: twilliams@email.com
                dateOfBirth: '2000-10-03T20:07:27+00:00'
                taxpayerIdentifier:
                  value: '000113933'
                  type: SOCIAL_SECURITY_NUMBER
                homePhone: '11122223333'
                currentAddress:
                  streetAddressLine1: 100 main st
                  streetAddressLine2: '132'
                  city: Chicago
                  state: IL
                  zipCode: '70007'
                  zipCodePlusFour: '1000'
                mailingAddress:
                  streetAddressLine1: 100 main st
                  streetAddressLine2: '132'
                  city: Chicago
                  state: IL
                  zipCode: '70007'
                  zipCodePlusFour: '1000'
                customFields:
                  fieldName: fldValue
                customMetadata:
                  fieldName: fldValue
                username: testUsername123
                noEmailYet: false
      responses:
        '200':
          description: New Application
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/ApplicationId'
                  solutionSubType:
                    type: string
                    example: MORTGAGE
                  parties:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: UUID of the party
                          type: string
                          example: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                        name:
                          description: Object representation of the party's name
                          $ref: '#/components/schemas/NameSchema'
                        type:
                          description: >-
                            ENUM describing whether this party is the primary
                            borrower or a coborrower
                          type: string
                          enum:
                            - BORROWER
                            - COBORROWER
                        username:
                          $ref: '#/components/schemas/UsernameSchema'
                  redirectUrl:
                    type: string
                    description: >-
                      redirected URL that allows consumers to be automatically
                      redirected to the application that was just created for
                      them
                    example: apply.lender.com/signup?=abc123&activationKey=321abc
                  customFields:
                    $ref: '#/components/schemas/CustomFieldsObject'
                    example: {}
                  customMetadata:
                    $ref: '#/components/schemas/CustomFieldsObject'
                    example: {}
              example:
                id: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
                solutionSubType: MORTGAGE
                parties:
                  - id: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                    name:
                      firstName: Tanya
                      middleName: M
                      lastName: Williams
                      suffixName: III
                    type: BORROWER
                    username: testUsername123
                    customFields: {}
                    customMetadata: {}
                customFields: {}
                customMetadata: {}
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '422':
          description: Invalid Update
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidUpdateErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    get:
      operationId: Get Home Lending Applications
      summary: Get Applications
      description: >-
        Get a paginated list of active applications sorted by creation date
        descending. This endpoint also supports a few filtering parameters.
      tags:
        - Home Lending - Applications
      parameters:
        - name: limit
          in: query
          required: false
          description: >-
            The number of applications to be returned for this call. Minimum is
            1, maximum is 100, default is 50.
          schema:
            type: integer
          example: 50
        - name: cursor
          in: query
          required: false
          description: >-
            An opaque string used for pagination, pass the cursor back to start
            at this position
          schema:
            type: string
          example: >-
            biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
        - name: losId-exists
          in: query
          required: false
          description: >-
            If losId-exists is true, then the response only contains
            applications that have losId set. If losId-exists is false, then the
            response only contains applications that do not have losId set.
            Otherwise, the response returns applications independent of the
            losId field.
          schema:
            type: string
          example: true
        - name: crmId-eq
          in: query
          required: false
          description: >-
            Filters the list of applications to applications that have the same
            crmId.
          schema:
            type: string
          example: crmId1
        - name: party-email-eq
          in: query
          required: false
          description: >-
            Filters the list of applications to applications that have a party
            with the same email.
          schema:
            type: string
          example: borrower@email.com
        - name: losId-eq
          in: query
          required: false
          description: >-
            Filters the list of applications to applications that have the same
            losId.
          schema:
            type: string
          example: losId1
        - name: exportable
          in: query
          required: false
          description: >-
            If exportable is true, then the response contains the list of
            applications that can be exported (e.g. borrower submitted, lender
            clicks export, or trid is triggered). If exportable is false, then
            the response contains the list of applications that cannot be
            exported. If omitted, the response returns applications independent
            of exportable field.
          schema:
            type: boolean
          example: true
        - name: assigneeIds-eq
          in: query
          required: false
          description: >-
            Filters the list of loans to loans that have at least one matching
            assignee. The assignee Ids are UUIDs of the lender users in Blend's
            system.
          schema:
            type: array
            items:
              type: string
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
          example:
            - 9250f84b-c2a1-4cab-b265-bd720685c361
        - name: solution-sub-type
          in: query
          required: false
          description: Filters the list of loans to loans with a matching solution subtype.
          schema:
            $ref: '#/components/schemas/HomeLendingSolutionSubType'
        - name: archivedStatus
          in: query
          required: false
          description: >-
            Filters the list of loans to loans with a matching archivedStatus.
            Defaults to false.
          schema:
            type: boolean
          example: false
        - name: ignoreArchivedStatus
          in: query
          required: false
          description: >-
            Will return loans regardless of their archived status. If true, this
            overrides the value of archivedStatus query.
          schema:
            type: boolean
          example: false
      responses:
        '200':
          description: >-
            List of paginated applications, with cursors to go the next or
            previous pages.s
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of applications
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of applications
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '422':
          description: Invalid Update
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidUpdateErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/los-milestones:
    post:
      operationId: Post LOS Milestones
      summary: Post LOS Milestones
      description: >-
        Bulk update a list of applications to specific LOS milestones. Will not
        accept LOS milestones that have not been added to customer configuration
        or allow applications to transition to previous milestones (e.g.
        APPROVED --> UNDERWRITING), unless parameter 'override' is set to true.
      tags:
        - Home Lending - Applications
      requestBody:
        description: List of application ids and the milestones to update them to
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                losMilestones:
                  type: array
                  items:
                    $ref: '#/components/schemas/LosMilestoneSchema'
                override:
                  type: boolean
      responses:
        '200':
          description: All Milestones Updated Successfully
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - success
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LosMilestoneSchema'
        '207':
          description: Some Milestones Not Successfully Updated
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LosMilestoneSchema'
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/LosMilestoneErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/export-statuses:
    get:
      operationId: Get Export Statuses
      summary: List Application Export Statuses
      description: A bulk endpoint to get the export statuses for a list of applications
      tags:
        - Home Lending - Applications
      parameters:
        - name: ids
          in: query
          required: true
          description: Application IDs to query for
          schema:
            type: array
            items:
              type: string
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
          example:
            - 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: All Export Statuses Retrieved Successfully
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExportStatusSchema'
                  error:
                    type: string
                    nullable: true
        '207':
          description: Some Export Statuses Not Successfully Retrieved
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExportStatusSchema'
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/BulkRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
  /home-lending/applications/{id}/export-status:
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      operationId: Post Export Status
      summary: Post Export Status
      description: Update export status on an application
      tags:
        - Home Lending - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExportStatusSchema'
            example:
              status: IN_PROGRESS
              reason: The application export started
      responses:
        '200':
          description: Export Status Updated Successfully
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PostExportStatusSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}:
    get:
      operationId: Get Application Data
      summary: Get Application Data
      description: Get application summary in JSON.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Data Exported Successfully
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationSchema'
                discriminator:
                  propertyName: id
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    delete:
      operationId: Delete Application Data
      summary: Delete Application
      description: Delete an application
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Application Deleted Successfully
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch Application
      summary: Patch Application Data
      description: Update some properties on a specific application.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Application Update Body
        content:
          application/json:
            schema:
              type: object
              properties:
                losId:
                  $ref: '#/components/schemas/LosId'
                tridTriggeredDate:
                  type: string
                  format: date-time
                  description: >-
                    ISO 8601 timestamp when all six elements required to trigger
                    TRID were deemed to exist in the application on the LOS
                    side.
                  example: '2018-10-03T20:07:27+00:00'
                crmId:
                  $ref: '#/components/schemas/CrmId'
                referenceNumber:
                  $ref: '#/components/schemas/ReferenceNumber'
                property:
                  type: object
                  properties:
                    address:
                      $ref: '#/components/schemas/PartialAddressSchema'
                    usageType:
                      $ref: '#/components/schemas/PropertyUsageType'
                    otherMortgages:
                      type: array
                      description: >-
                        Other mortgages on the subject property (only relevant
                        for refinances)
                      items:
                        $ref: '#/components/schemas/OtherMortgageSchema'
                    value:
                      type: number
                      description: The property's value in dollars and cents
                      example: 100000.55
                loanAmount:
                  allOf:
                    - $ref: '#/components/schemas/LoanAmount'
                    - description: >-
                        The amount of money (dollars and cents) for which the
                        applicant is applying. This field is only supported for
                        new URLA applications.
                purchasePrice:
                  type: number
                  description: >-
                    The purchase price for the subject property of the loan.
                    This field is only supported for new URLA mortgage
                    applications.
                  example: 120000
                estimatedClosingDate:
                  $ref: '#/components/schemas/EstimatedClosingDate'
                communityId:
                  type: string
                  description: >-
                    Unique identifier to determine assignment in construction or
                    branch banking scenarios
                archivedStatus:
                  $ref: '#/components/schemas/ArchivedStatusSchema'
                realEstateAgentNotificationConsentGiven:
                  type: boolean
                  description: >-
                    If set to true, real estate agents assigned to the
                    application will receive application update notifications
                  example: false
                interestRate:
                  type: number
                  description: The interest rate in percentage points
                  example: 4.25
                mortgageType:
                  type: string
                  description: ENUM describing the type of the mortgage
                  enum:
                    - CONVENTIONAL
                    - FHA
                    - LOCAL_AGENCY
                    - OTHER
                    - PUBLIC_AND_INDIAN_HOUSING
                    - STATE_AGENCY
                    - USDARURAL_DEVELOPMENT
                    - VA
                appSource:
                  type: string
                  description: >-
                    The tag corresponding to a marketing campaign. This
                    identifier can be used to gauge which links are most
                    effective within certain campaigns.
                  example: ORGANIC_LEAD
                customFields:
                  $ref: '#/components/schemas/CustomFields'
                customMetadata:
                  $ref: '#/components/schemas/CustomMetadata'
            example:
              losId: losId1
              crmId: crmId1
              referenceNumber: refNumber1
              property:
                value: 1200000
                address:
                  streetAddressLine1: 415 Kearny St
                  city: San Francisco
                  state: CA
                  zipCode: '94108'
                  countyName: San Francisco
                otherMortgages:
                  - monthlyPayment: 2500
                    lienAmount: 150000
                    willPayOff: false
                    type: CONVENTIONAL
              tridTriggeredDate: '2018-10-03T20:07:27+00:00'
              estimatedClosingDate: '2019-06-02T00:00:00.000Z'
              communityId: '12345'
              interestRate: 4.25
              mortgageType: CONVENTIONAL
              appSource: ORGANIC_LEAD
              realEstateAgentNotificationConsentGiven: true
              customFields:
                fieldName: fldValue
              customMetadata:
                fieldName: fldValue
      responses:
        '200':
          description: Application Updated Successfully
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/documents:
    get:
      operationId: Get Application Documents
      summary: List Documents for an Application
      description: >-
        Get a list of all the uploaded and signature complete documents on a
        specific application, ordered by document creation date.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: includeAllDocuments
          description: >-
            If true, returns a list of all the documents on the application,
            including signature pending documents.
          schema:
            type: boolean
          example: false
      responses:
        '200':
          description: List of documents
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentSchema'
              example:
                documents:
                  - id: 89968249-7cb8-42e3-b847-85bae7027281
                    losLoanId: losId1
                    type: COMPLIANCE_REPORT
                    name: Williams - Compliance Report - 011421 81718pm
                    downloadUrl: >-
                      https://blend-borrower-staging.sandbox.centrio.com/v1/documents/89968249-7cb8-42e3-b847-85bae7027281
                    created: '2021-01-14T20:17:20.127Z'
                    customFields: {}
                    customMetadata: {}
                    lastExportedAt: null
                    applicationId: 70e7df4a-29d8-4f0d-90cd-f4604e45e0b5
                    partyIds:
                      - cc730ed3-0d46-493d-bd85-8cddc60e45d1
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/parties:
    get:
      operationId: Get Application Parties
      summary: List Parties for an Application
      description: >-
        Get a list of all parties on the application (with their econsent
        status)
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: List of Parties
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  parties:
                    type: array
                    items:
                      $ref: '#/components/schemas/PartySchema'
              example:
                parties:
                  - id: cc730ed3-0d46-493d-bd85-8cddc60e45d1
                    applicationId: 70e7df4a-29d8-4f0d-90cd-f4604e45e0b5
                    email: twilliams@email.com
                    type: BORROWER
                    name:
                      firstName: Tanya
                      middleName: M
                      lastName: Williams
                      suffixName: III
                    status: INVITED
                    econsent:
                      status: Pending
                    phoneNumbers:
                      - phoneNumber: '11122223333'
                        type: HOME
                    addresses:
                      - type: CURRENT
                        address:
                          streetAddressLine1: 100 main st
                          streetAddressLine2: '132'
                          city: Chicago
                          state: IL
                          zipCode: '70007'
                          zipCodePlusFour: '1000'
                    relationship: {}
                    loginMethod: EMAIL
                    dateOfBirth: '2000-10-03T20:07:27.000Z'
                    taxpayerIdentifier:
                      type: SOCIAL_SECURITY_NUMBER
                      value: '000113933'
                    customFields: {}
                    customMetadata: {}
                  - id: 7ee059cc-1815-4c6b-92d8-a650579102a6
                    applicationId: 70e7df4a-29d8-4f0d-90cd-f4604e45e0b5
                    losPartyId: losParty2
                    username: testUsername123
                    email: james@email.com
                    type: SPOUSE
                    name:
                      firstName: James
                      middleName: William
                      lastName: Horton
                      suffixName: 3rd
                    econsent:
                      status: Pending
                    phoneNumbers: []
                    relationship: {}
                    customFields: {}
                    customMetadata: {}
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/underwriting-results:
    get:
      operationId: Get Application Underwriting Results
      summary: List Underwriting Results for an Application
      description: Get a list of all underwriting results on the application
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: List of Underwriting Results
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnderwritingResultSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/borrower-positions:
    get:
      operationId: Get Borrower Positions
      summary: List Borrower Positions on an Application
      description: Get the list of borrower pairs on the application
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Application Borrower Positions
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Application UUID
                    example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
                  applicationId:
                    $ref: '#/components/schemas/ApplicationId'
                  borrowerPairs:
                    type: array
                    items:
                      $ref: '#/components/schemas/BorrowerPairSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    put:
      operationId: Put Borrower Positions
      summary: Put Borrower Positions on an Application
      description: >-
        Update the location of borrowers on the application (by 1003/borrower
        pairing and location in the borrower pair)
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: New Borrower Pair
        content:
          application/json:
            schema:
              type: object
              properties:
                borrowerPairs:
                  type: array
                  items:
                    $ref: '#/components/schemas/BorrowerPairSchema'
            example:
              borrowerPairs:
                - primaryBorrowerId: 9250f84b-c2a1-4cab-b265-bd720685c361
                  secondaryBorrowerId: ba02d4f4-9f4d-4be1-ab62-d1af76d21b1c
      responses:
        '200':
          description: Successfully Upserted Borrower Positions
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/assignees:
    get:
      tags:
        - Home Lending - Applications
      summary: List the Assigned Users on an Application
      description: Gets the array of users currently assigned to the application
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Assignees Successfully Retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserAssignmentResponseSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      tags:
        - Home Lending - Applications
      summary: Patch the Assigned Users on an Application
      description: Adds assignees to the specified application.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignmentRequestSchema'
      responses:
        '200':
          description: Successfully Added Users to Application Assignees
        '400':
          description: >-
            Assignee users must exist and have permissions to be assigned to the
            application
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application or User Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    put:
      tags:
        - Home Lending - Applications
      summary: Override All Current Assignees on an Application
      description: Completely overwrites current set of assigned users with provided users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: autoAssignLoanTeam
          description: >-
            Automatically assign the primary assignee's loan team to the
            application. Defaults to true.
          schema:
            type: boolean
            default: true
          example: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignmentRequestSchema'
      responses:
        '200':
          description: Successful Overwrite of Application Assignees
        '400':
          description: >-
            Assignee users must exist and have permissions to be assigned to the
            application
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application or User Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/{id}/itp:
    get:
      operationId: Get Intent to Proceed
      summary: Get Intent to Proceed
      description: >-
        Get Intent to Proceed (ITP) data. This endpoint will return information
        about the state of ITP on an application once the ITP workflow has been
        added or ITP has been given.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: guid
          description: The ID of the Blend Application that ITP data is being retrieved for
          example: bf88d29e-2b69-44d3-8953-59d720ce996a
      responses:
        '200':
          description: Intent to Proceed data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetITPResponse'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Intent to Proceed Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ITPNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      operationId: Post Intent to Proceed
      summary: Post Intent to Proceed
      description: >-
        Post Intent to Proceed (ITP). This endpoint will add an ITP workflow to
        the specified borrower on an application, or mark ITP as complete if
        `givenAt` is supplied. Returns 409 Conflict if ITP workflow already
        exists for the specified `borrowerId`, or if ITP has already been given
        on the application `borrowerId` belongs to.
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: guid
          description: The ID of the Blend application `borrowerId` belongs to.
          example: 46a1f64d-286e-4fb3-b0ca-79606cba9145
      requestBody:
        description: Post Intent to Proceed Body
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - borrowerId
              properties:
                borrowerId:
                  type: string
                  format: guid
                  description: >-
                    Party ID of borrower to either add ITP workflow for, or if
                    `givenAt` is supplied, mark ITP as given by.
                  example: 52843951-c41f-44b7-a33c-2e499ce75029
                givenAt:
                  type: string
                  format: date-time
                  description: >-
                    The ISO 8601 datetime when the specified `borrowerId`
                    confirmed their Intent to Proceed.
                  example: '2020-05-03T12:06:21.789Z'
      responses:
        '200':
          description: Intent to Proceed data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetITPResponse'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '409':
          description: >-
            Conflict. Returned if ITP workflow already exists for a borrower, or
            ITP has already been given on the application the borrower belongs
            to.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConflictErrorSchema'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/employers/verified:
    get:
      parameters:
        - name: applicationId
          in: query
          required: true
          description: The application to retrieve verified employers for.
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
      operationId: Get verified employers
      summary: Get verified employers from an Application
      description: Gets a summary of verified employers data for an Application
      tags:
        - Home Lending - Applications
      responses:
        '200':
          description: Verified EmployersSummary for Application was successfully retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/VerifiedEmployersSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /home-lending/applications/employers/reverify:
    post:
      operationId: Post Employers Reverify
      summary: Initiate Reverification of Employers
      description: >-
        Initiates an asynchronous attempt to reverify employers for the
        specified application and employers.
      tags:
        - Home Lending - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployersReverifyRequestSchema'
      responses:
        '200':
          description: >-
            An attempt to reverify employers for a partyId on the application
            has been initiated.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /documents:
    get:
      operationId: Get Documents
      summary: List Documents
      description: Get a paginated list of documents
      tags:
        - Documents
      parameters:
        - in: query
          name: cursor
          description: >-
            An opaque string used for pagination, pass the cursor back to start
            at this position. Note that if you change any of the query
            parameters you used in the initial request, the cursor will be
            invalid and will not return the next page of results.
          schema:
            type: string
            example: >-
              biwxNTI0MTcwNDEwMTAwLDI2OTU0N2ZmLWY2NDMtNDA0ZC1hYTQzLTEzOGI2NTA2OTdjMg
        - in: query
          name: limit
          description: >-
            The number of documents to be returned for this call. Minimum is 1,
            maximum is 100, default is 50.
          schema:
            type: number
            example: 25
        - in: query
          name: exported
          description: >-
            If exported is true, then the response only contains documents that
            have already been exported. If exported is false, then the response
            only contains documents that have not already been exported.
            Otherwise, the response returns documents independent of the
            exported field.
          schema:
            type: boolean
            example: false
        - in: query
          name: uploadedAfter
          description: Returns only documents uploaded after this time (UTC ISO Timestamp)
          schema:
            type: string
            format: date-time
            example: '2018-10-03T20:07:27+00:00'
        - in: query
          name: uploadedBefore
          description: Returns only documents uploaded before this time (UTC ISO Timestamp)
          schema:
            type: string
            format: date-time
            example: '2018-10-03T20:07:27+00:00'
        - in: query
          name: statusIncludes
          required: false
          description: Comma delimited string of document statuses to filter for
          schema:
            type: string
            enum:
              - READY
              - SIGNATURE_REQUESTED
              - VOIDED
          example: READY
      responses:
        '200':
          description: >-
            List of paginated documents, with cursors to go the next or previous
            pages.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentSchema'
                  prevCursor:
                    type: string
                    description: Cursor to use to get to the previous set of documents
                  nextCursor:
                    type: string
                    description: Cursor to use to get to the next set of documents
              example:
                documents:
                  - id: 89968249-7cb8-42e3-b847-85bae7027281
                    losLoanId: losId1
                    type: COMPLIANCE_REPORT
                    name: Williams - Compliance Report - 011421 81718pm
                    downloadUrl: >-
                      https://blend-borrower-staging.sandbox.centrio.com/v1/documents/89968249-7cb8-42e3-b847-85bae7027281
                    created: '2021-01-14T20:17:20.127Z'
                    customFields: {}
                    customMetadata: {}
                    lastExportedAt: null
                    applicationId: 70e7df4a-29d8-4f0d-90cd-f4604e45e0b5
                    partyIds:
                      - cc730ed3-0d46-493d-bd85-8cddc60e45d1
                prevCursor: >-
                  biwxNjEwNTcxMDQyMDAwLGM5ZGM2ZDg0LTg4ZjktNGI0Ny04ODhiLWIwZGQyMmQ4NzRiNQ
                nextCursor: >-
                  cCwxNjEwNTcxMDQyMDAwLGM5ZGM2ZDg0LTg4ZjktNGI0Ny04ODhiLWIwZGQyMmQ4NzRiNQ
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      operationId: Post Document
      summary: Attach a Document to an Application
      description: >-
        Create a document on a specific application with a file and related
        metadata.
      tags:
        - Documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequestSchema'
      responses:
        '200':
          description: Successfully Uploaded Document File and Metadata
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DocumentSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /documents/{id}:
    get:
      operationId: Get Document Data
      summary: Get Document Data
      description: Download the file associated with a document
      tags:
        - Documents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the Document in Blend's system. The static identifier
            that should be used to connect the document's identity across Blend
            and external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Successfully Exported Document Binary
          content:
            application/pdf:
              schema:
                type: string
                format: binary
                description: Base64 Encoded File Binary
                example: >-
                  JVBERi0xLjcKJfbk/N8KMSAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMiAwIFIKL0Fj
                  cm9Gb3JtIDMgMCBSCi9NZXRhZGF0YSA0IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovUHJvZHVj
                  ZXIgKFJBRCBQREYgMy43LjEuMSAtIGh0dHA6Ly93d3cucmFkcGRmLmNvbSkKL0FjY2Vzc2liaWxp
                  dHkgKHN0cnVjdHVyZWQ7IHRhZ2dlZCkKL0F1dGhvciAoU0U6VzpDQVM6U1A6U1BCOlQpCi9DcmVh
                  dG9yIChSQUQgUERGKQovRm9ybSMyMGZpZWxkcyAoZmlsbGFibGUpCi9LZXl3b3JkcyAoRmlsbGFi
                  bGUpCi9TUERGICgxMTEyKQovU3ViamVjdCAoUmVxdWVzdCBmb3IgVHJhbnNjcmlwdCBvZiBUYXgg
                  UmV0dXJuKQovVGl0bGUgKEZvcm0gNDUwNi1UIFwoUmV2LiA5LTIwMThcKSkKL0NyZWF0aW9uRGF0
                  ZSAoRDoyMDE4MDkyNTExMDgxNS0wNCcwMCcpCi9Nb2REYXRlIChEOjIwMTgxMjA1MjEwODM0WikK
                  Pj4KZW5kb2JqCjIgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9Db3VudCAyCi9LaWRzIFs2IDAgUiA3
                  IDAgUl0KPj4KZW5kb2JqCjMgMCBvYmoKPDwKL0RBICgvSGVsdiAwIFRmIDAgZykKL0ZpZWxkcyBb
                  OCAwIFIgOSAwIFIgMTAgMCBSIDExIDAgUiAxMiAwIFIgMTMgMCBSIDE0IDAgUiAxNSAwIFIgMTYg
                  MCBSIDE3IDAgUgoxOCAwIFIgMTkgMCBSIDIwIDAgUiAyMSAwIFIgMjIgMCBSIDIzIDAgUiAyNCAw
                  IFIgMjUgMCBSIDI2IDAgUiAyNyAwIFIKMjggMCBSIDI5IDAgUiAzMCAwIFIgMzEgMCBSIDMyIDAg
                  UiAzMyAwIFIgMzQgMCBSIDM1IDAgUiAzNiAwIFJdCi9EUiA8PAovRm9udCAzNyAwIFIKPj4KL05l
                  ZWRBcHBlYXJhbmNlcyB0cnVlCj4+CmVuZG9iago0IDAgb2JqCjw8Ci9UeXBlIC9NZXRhZGF0YQov
                  U3VidHlwZSAvWE1MCi9MZW5ndGggMTMwMQo+PgpzdHJlYW0NCjw/eHBhY2tldCBiZWdpbj0i77u/
                  IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRv
                  YmU6bnM6bWV0YS8iIHg6eG1wdGs9IkR5bmFQREYgNC4wLjI1LjY2LCBodHRwOi8vd3d3LmR5bmFm
                  b3Jtcy5jb20iPgo8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
                  MjItcmRmLXN5bnRheC1ucyMiPgo8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgoJeG1sbnM6
                  cGRmPSJodHRwOi8vbnMuYWRvYmUuY29tL3BkZi8xLjMvIgoJeG1sbnM6ZGM9Imh0dHA6Ly9wdXJs
                  Lm9yZy9kYy9lbGVtZW50cy8xLjEvIgoJeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hh
                  cC8xLjAvIgoJeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iPgo8
                  cGRmOktleXdvcmRzPkZpbGxhYmxlPC9wZGY6S2V5d29yZHM+CjxwZGY6UHJvZHVjZXI+UkFEIFBE
                  RiAzLjcuMS4xIC0gaHR0cDovL3d3dy5yYWRwZGYuY29tPC9wZGY6UHJvZHVjZXI+Cjx4bXA6Q3Jl
                  YXRlRGF0ZT4yMDE4LTA5LTI1VDExOjA4OjE1LTA0OjAwPC94bXA6Q3JlYXRlRGF0ZT4KPHhtcDpD
                  cmVhdG9yVG9vbD5SQUQgUERGPC94bXA6Q3JlYXRvclRvb2w+Cjx4bXA6TWV0YWRhdGFEYXRlPjIw
                  MTgtMTItMDVUMjE6MDg6MzRaPC94bXA6TWV0YWRhdGFEYXRlPgo8eG1wOk1vZGlmeURhdGU+MjAx
                  OC0xMi0wNVQyMTowODozNFo8L3htcDpNb2RpZnlEYXRlPgo8ZGM6Y3JlYXRvcj48cmRmOlNlcT48
                  cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPlNFOlc6Q0FTOlNQOlNQQjpUPC9yZGY6bGk+PC9y
                  ZGY6U2VxPjwvZGM6Y3JlYXRvcj4KPGRjOmRlc2NyaXB0aW9uPjxyZGY6QWx0PjxyZGY6bGkgeG1s
                  Omxhbmc9IngtZGVmYXVsdCI+UmVxdWVzdCBmb3IgVHJhbnNjcmlwdCBvZiBUYXggUmV0dXJuPC9y
                  ZGY6bGk+PC9yZGY6QWx0PjwvZGM6ZGVzY3JpcHRpb24+CjxkYzp0aXRsZT48cmRmOkFsdD48cmRm
                  OmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPkZvcm0gNDUwNi1UIChSZXYuIDktMjAxOCk8L3JkZjps
                  aT48L3JkZjpBbHQ+PC9kYzp0aXRsZT4KPHhtcE1NOkRvY3VtZW50SUQ+dXVpZDoxODk0OWNlMy1h
                  YzE2LTM4ZmItYmE5ZC1iZTk1MzNmMzFjNTc8L3htcE1NOkRvY3VtZW50SUQ+Cjx4bXBNTTpWZXJz
                  aW9uSUQ+MTwveG1wTU06VmVyc2lvbklEPgo8eG1wTU06UmVuZGl0aW9uQ2xhc3M+ZGVmYXVsdDwv
                  eG1wTU06UmVuZGl0aW9uQ2xhc3M+CjwvcmRmOkRlc2NyaXB0aW9uPgo8L3JkZjpSREY+CjwveDp4
                  bXBtZXRhPgo8P3hwYWNrZXQgZW5kPSJ3Ij8+DQplbmRzdHJlYW0KZW5kb2JqCjYgMCBvYmoKPDwK
                  L1R5cGUgL1BhZ2UKL1BhcmVudCAyIDAgUgovQ29udGVudHMgMzggMCBSCi9NZWRpYUJveCBbMCAw
                  IDYxMS45NzYwMSA3OTEuOTY4MDJdCi9Dcm9wQm94IFswIDAgNjExLjk3NjAxIDc5MS45NjgwMl0K
                  L0Fubm90cyBbOCAwIFIgOSAwIFIgMTAgMCBSIDExIDAgUiAxMiAwIFIgMTMgMCBSIDE0IDAgUiAx
                  NSAwIFIgMTYgMCBSIDE3IDAgUgoxOCAwIFIgMTkgMCBSIDIwIDAgUiAyMSAwIFIgMjIgMCBSIDIz
                  IDAgUiAyNCAwIFIgMjUgMCBSIDI2IDAgUiAyNyAwIFIKMjggMCBSIDI5IDAgUiAzMCAwIFIgMzEg
                  MCBSIDMyIDAgUiAzMyAwIFIgMzQgMCBSIDM1IDAgUiAzNiAwIFJdCi9UYWJzIC9TCi9SZXNvdXJj
                  ZXMgPDwKL0ZvbnQgPDwKL0MwXzAgMzkgMCBSCi9DMF8xIDQwIDAgUgovVDFfMCA0MSAwIFIKL1Qx
                  XzEgNDIgMCBSCi9UMV8yIDQzIDAgUgovVDFfMyA0NCAwIFIKL1QxXzQgNDUgMCBSCj4+Cj4+Cj4+
                  CmVuZG9iago3IDAgb2JqCjw8Ci9UeXBlIC9QYWdlCi9QYXJlbnQgMiAwIFIKL0NvbnRlbnRzIDQ2
                  IDAgUgovTWVkaWFCb3ggWzAgMCA2MTEuOTc2MDEgNzkxLjk2ODAyXQovQ3JvcEJveCBbMCAwIDYx
                  MS45NzYwMSA3OTEuOTY4MDJdCi9UYWJzIC9TCi9SZXNvdXJjZXMgPDwKL0ZvbnQgPDwKL0MwXzAg
                  NDAgMCBSCi9UMV8wIDQxIDAgUgovVDFfMSA0NCAwIFIKL1QxXzIgNDcgMCBSCi9UMV8zIDQzIDAg
                  UgovVDFfNCA0OCAwIFIKL1QxXzUgNDUgMCBSCj4+Cj4+Cj4+CmVuZG9iago4IDAgb2JqCjw8Ci9T
                  dWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzM2IDYzNS43MjggMzAyLjQgNjUyLjI4OF0KL0FQIDw8Ci9O
                  IDQ5IDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRmYg
                  ODM4ODYwOAovRlQgL1R4Ci9QIDYgMCBSCi9UIChmaWxlck5hbWUpCi9RIDAKL1YgKCkKPj4KZW5k
                  b2JqCjkgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBbMzYgNTk5LjcyOCAzMDIuNCA2
                  MjUuNjQ4XQovQVAgPDwKL04gNTAgMCBSCj4+Ci9EQSAoL0hlQm8gNy45OTk5MiBUZiAwIDAgLjQ5
                  ODA0IHJnKQovRiA0Ci9GZiA4Mzg4NjA4Ci9GVCAvVHgKL1AgNiAwIFIKL1QgKGNvZmlsZXJOYW1l
                  KQovUSAwCi9WIChUNzE0MCBUNzE0MCkKPj4KZW5kb2JqCjEwIDAgb2JqCjw8Ci9TdWJ0eXBlIC9X
                  aWRnZXQKL1JlY3QgWzMwMi40IDU5OS43MjggNTc2IDYxNi4yODhdCi9BUCA8PAovTiA1MSAwIFIK
                  Pj4KL0RBICgvSGVCbyA3Ljk5OTkyIFRmIDAgMCAuNDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovUCA2
                  IDAgUgovVCAoY29maWxlclNTTikKL01heExlbiAxMQovUSAxCi9WICg5OTktOTktOTkwMCkKPj4K
                  ZW5kb2JqCjExIDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzM2IDU3NS45NjggNTc2
                  IDU4OS42NDhdCi9BUCA8PAovTiA1MiAwIFIKPj4KL0RBICgvSGVCbyA3Ljk5OTkyIFRmIDAgMCAu
                  NDk4MDQgcmcpCi9GIDQKL0ZmIDgzODg2MDgKL0ZUIC9UeAovUCA2IDAgUgovVCAoY3VycmVudEFk
                  ZHJlc3MpCi9RIDAKL1YgKFQ3MTQwIFQ3MTQwLCA0NDUgQW5kZXJzb24gUm9hZCwgQm9hcmRtYW4s
                  IE9SIDk3ODE4KQo+PgplbmRvYmoKMTIgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBb
                  MzYgNTUyLjIwOCA1NzYgNTY1Ljg4OF0KL0FQIDw8Ci9OIDUzIDAgUgo+PgovREEgKC9IZUJvIDcu
                  OTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRmYgODM4ODYwOAovRlQgL1R4Ci9QIDYgMCBS
                  Ci9UIChmaWxpbmdBZGRyZXNzKQovUSAwCi9WICgpCj4+CmVuZG9iagoxMyAwIG9iago8PAovU3Vi
                  dHlwZSAvV2lkZ2V0Ci9SZWN0IFszNiA1MTYuMjA4IDU3NiA1MzIuMDQ4XQovQVAgPDwKL04gNTQg
                  MCBSCj4+Ci9EQSAoL0hlQm8gNy45OTk5MiBUZiAwIDAgLjQ5ODA0IHJnKQovRiA0Ci9GZiA4Mzg4
                  NjA4Ci9GVCAvVHgKL1AgNiAwIFIKL1QgKG1haWxpbmdBZGRyZXNzKQovUSAwCi9WIChCQi1TdGFn
                  aW5nLCAxMDAgTW9udGdvbWVyeSBTdC4sIFNhbiBGcmFuY2lzY28sIENBKQo+PgplbmRvYmoKMTQg
                  MCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBbMjA4LjggMTkyLjIwOCAyMzAuNCAyMDMu
                  NzI4XQovQVAgPDwKL04gNTUgMCBSCj4+Ci9EQSAoL0hlQm8gNy45OTk5MiBUZiAwIDAgLjQ5ODA0
                  IHJnKQovRiA0Ci9GVCAvVHgKL1AgNiAwIFIKL1QgKGZpcnN0TW9udGgpCi9NYXhMZW4gMgovUSAx
                  Ci9WICgxMikKPj4KZW5kb2JqCjE1IDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzIz
                  Ny42IDE5Mi4yMDggMjU4LjQ4IDIwMy43MjhdCi9BUCA8PAovTiA1NiAwIFIKPj4KL0RBICgvSGVC
                  byA3Ljk5OTkyIFRmIDAgMCAuNDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovUCA2IDAgUgovVCAoZmly
                  c3REYXkpCi9NYXhMZW4gMgovUSAxCi9WICgzMSkKPj4KZW5kb2JqCjE2IDAgb2JqCjw8Ci9TdWJ0
                  eXBlIC9XaWRnZXQKL1JlY3QgWzI2Ni40IDE5Mi4yMDggMjk1LjIgMjAzLjcyOF0KL0FQIDw8Ci9O
                  IDU3IDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRlQg
                  L1R4Ci9QIDYgMCBSCi9UIChmaXJzdFllYXIpCi9NYXhMZW4gNAovUSAxCi9WICgyMDE4KQo+Pgpl
                  bmRvYmoKMTcgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBbMzAyLjQgMTkyLjIwOCAz
                  MjQgMjAzLjcyOF0KL0FQIDw8Ci9OIDU4IDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAw
                  IC40OTgwNCByZykKL0YgNAovRlQgL1R4Ci9QIDYgMCBSCi9UIChzZWNvbmRNb250aCkKL01heExl
                  biAyCi9RIDEKL1YgKDEyKQo+PgplbmRvYmoKMTggMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAov
                  UmVjdCBbMzMxLjIgMTkyLjIwOCAzNTIuMDggMjAzLjcyOF0KL0FQIDw8Ci9OIDU5IDAgUgo+Pgov
                  REEgKC9IZUJvIDcuOTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRlQgL1R4Ci9QIDYgMCBS
                  Ci9UIChzZWNvbmREYXkpCi9NYXhMZW4gMgovUSAxCi9WICgzMSkKPj4KZW5kb2JqCjE5IDAgb2Jq
                  Cjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzM5NiAxOTIuMjA4IDQxNy42IDIwMy43MjhdCi9B
                  UCA8PAovTiA2MCAwIFIKPj4KL0RBICgvSGVCbyA3Ljk5OTkyIFRmIDAgMCAuNDk4MDQgcmcpCi9G
                  IDQKL0ZUIC9UeAovUCA2IDAgUgovVCAodGhpcmRNb250aCkKL01heExlbiAyCi9RIDEKL1YgKCkK
                  Pj4KZW5kb2JqCjIwIDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzQ1My42IDE5Mi4y
                  MDggNDgyLjQgMjAzLjcyOF0KL0FQIDw8Ci9OIDYxIDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIg
                  VGYgMCAwIC40OTgwNCByZykKL0YgNAovRlQgL1R4Ci9QIDYgMCBSCi9UICh0aGlyZFllYXIpCi9N
                  YXhMZW4gNAovUSAxCi9WICgpCj4+CmVuZG9iagoyMSAwIG9iago8PAovU3VidHlwZSAvV2lkZ2V0
                  Ci9SZWN0IFs0ODkuNiAxOTIuMjA4IDUxMS4yIDIwMy43MjhdCi9BUCA8PAovTiA2MiAwIFIKPj4K
                  L0RBICgvSGVCbyA3Ljk5OTkyIFRmIDAgMCAuNDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovUCA2IDAg
                  UgovVCAoZm91cnRoTW9udGgpCi9NYXhMZW4gMgovUSAxCi9WICgpCj4+CmVuZG9iagoyMiAwIG9i
                  ago8PAovU3VidHlwZSAvV2lkZ2V0Ci9SZWN0IFs1MTguNCAxOTIuMjA4IDUzOS4yOCAyMDMuNzI4
                  XQovQVAgPDwKL04gNjMgMCBSCj4+Ci9EQSAoL0hlQm8gNy45OTk5MiBUZiAwIDAgLjQ5ODA0IHJn
                  KQovRiA0Ci9GVCAvVHgKL1AgNiAwIFIKL1QgKGZvdXJ0aERheSkKL01heExlbiAyCi9RIDEKL1Yg
                  KCkKPj4KZW5kb2JqCjIzIDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzU0Ny4yIDE5
                  Mi4yMDggNTc2IDIwMy43MjhdCi9BUCA8PAovTiA2NCAwIFIKPj4KL0RBICgvSGVCbyA3Ljk5OTky
                  IFRmIDAgMCAuNDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovUCA2IDAgUgovVCAoZm91cnRoWWVhcikK
                  L01heExlbiA0Ci9RIDEKL1YgKCkKPj4KZW5kb2JqCjI0IDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRn
                  ZXQKL1JlY3QgWzE1MS4yIDQxOS43MjggMjY2LjQgNDMxLjk2OF0KL0FQIDw8Ci9OIDY1IDAgUgo+
                  PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRmYgODM4ODYwOAov
                  RlQgL1R4Ci9QIDYgMCBSCi9UICh0cmFuc2NyaXB0UmVxdWVzdGVkKQovUSAxCi9WICgxMDQwKQo+
                  PgplbmRvYmoKMjUgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBbODYuNCA3MS4yNDgg
                  NTc2IDgzLjQ4OF0KL0FQIDw8Ci9OIDY2IDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAw
                  IC40OTgwNCByZykKL0YgNAovRmYgODM4ODYwOAovRlQgL1R4Ci9QIDYgMCBSCi9UICh0aXRsZSkK
                  L1EgMAovViAoKQo+PgplbmRvYmoKMjYgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBb
                  NDM5LjIgOTUuNzI4IDU3NiAxMTEuNTY4XQovQVAgPDwKL04gNjcgMCBSCj4+Ci9EQSAoL0hlQm8g
                  Ny45OTk5MiBUZiAwIDAgLjQ5ODA0IHJnKQovRiA0Ci9GZiA4Mzg4NjA4Ci9GVCAvVHgKL1AgNiAw
                  IFIKL1QgKGZpbGVyUGhvbmVOdW1iZXIpCi9RIDEKL1YgKDk4Ny05NzktNzk3NykKPj4KZW5kb2Jq
                  CjI3IDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzQyNC44IDE5Mi4yMDggNDQ1LjY4
                  IDIwMy43MjhdCi9BUCA8PAovTiA2OCAwIFIKPj4KL0RBICgvSGVCbyA3Ljk5OTkyIFRmIDAgMCAu
                  NDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovUCA2IDAgUgovVCAodGhpcmREYXkpCi9NYXhMZW4gMgov
                  USAxCi9WICgpCj4+CmVuZG9iagoyOCAwIG9iago8PAovU3VidHlwZSAvV2lkZ2V0Ci9SZWN0IFsz
                  NjAgMTkyLjIwOCAzODguOCAyMDMuNzI4XQovQVAgPDwKL04gNjkgMCBSCj4+Ci9EQSAoL0hlQm8g
                  Ny45OTk5MiBUZiAwIDAgLjQ5ODA0IHJnKQovRiA0Ci9GVCAvVHgKL1AgNiAwIFIKL1QgKHNlY29u
                  ZFllYXIpCi9NYXhMZW4gNAovUSAxCi9WICgyMDE3KQo+PgplbmRvYmoKMjkgMCBvYmoKPDwKL1N1
                  YnR5cGUgL1dpZGdldAovUmVjdCBbMzAyLjQgNjM1LjcyOCA1NzYgNjUyLjI4OF0KL0FQIDw8Ci9O
                  IDcwIDAgUgo+PgovREEgKC9IZUJvIDcuOTk5OTIgVGYgMCAwIC40OTgwNCByZykKL0YgNAovRlQg
                  L1R4Ci9QIDYgMCBSCi9UIChwcmltYXJ5RmlsZXJTU04pCi9NYXhMZW4gMTEKL1EgMQo+PgplbmRv
                  YmoKMzAgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVjdCBbNTY0LjQ4IDM4Mi4yODggNTcz
                  LjEyIDM5MC4yMDhdCi9BUCA8PAovTiA8PAovWWVzIDcxIDAgUgovT2ZmIDcyIDAgUgo+PgovRCA8
                  PAovWWVzIDczIDAgUgovT2ZmIDc0IDAgUgo+Pgo+PgovREEgKC9aYURiIDAgVGYgMCBnKQovRiA0
                  Ci9GVCAvQnRuCi9IIC9QCi9NSyA8PAovQ0EgKDQpCj4+Ci9QIDYgMCBSCi9UIChyZXR1cm5UcmFu
                  c2NyaXB0KQovQVMgL09mZgovViAvT2ZmCj4+CmVuZG9iagozMSAwIG9iago8PAovU3VidHlwZSAv
                  V2lkZ2V0Ci9SZWN0IFs1NjQuNDggMzQ5Ljg4OCA1NzMuMTIgMzU3LjgwOF0KL0FQIDw8Ci9OIDw8
                  Ci9ZZXMgNzUgMCBSCi9PZmYgNzYgMCBSCj4+Ci9EIDw8Ci9ZZXMgNzcgMCBSCi9PZmYgNzggMCBS
                  Cj4+Cj4+Ci9EQSAoL1phRGIgMCBUZiAwIGcpCi9GIDQKL0ZUIC9CdG4KL0ggL1AKL01LIDw8Ci9D
                  QSAoNCkKPj4KL1AgNiAwIFIKL1QgKGFjY291bnRUcmFuc2NyaXB0KQovQVMgL1llcwovViAvWWVz
                  Cj4+CmVuZG9iagozMiAwIG9iago8PAovU3VidHlwZSAvV2lkZ2V0Ci9SZWN0IFs1NjQuNDggMzI2
                  LjEyOCA1NzMuMTIgMzM0LjA0OF0KL0FQIDw8Ci9OIDw8Ci9ZZXMgNzkgMCBSCi9PZmYgODAgMCBS
                  Cj4+Ci9EIDw8Ci9ZZXMgODEgMCBSCi9PZmYgODIgMCBSCj4+Cj4+Ci9EQSAoL1phRGIgMCBUZiAw
                  IGcpCi9GIDQKL0ZUIC9CdG4KL0ggL1AKL01LIDw8Ci9DQSAoNCkKPj4KL1AgNiAwIFIKL1QgKHJl
                  Y29yZE9mQWNjb3VudCkKL0FTIC9ZZXMKL1YgL1llcwo+PgplbmRvYmoKMzMgMCBvYmoKPDwKL1N1
                  YnR5cGUgL1dpZGdldAovUmVjdCBbNTY0LjQ4IDMwMS42NDggNTczLjEyIDMxMC4yODhdCi9BUCA8
                  PAovTiA8PAovWWVzIDgzIDAgUgovT2ZmIDg0IDAgUgo+PgovRCA8PAovWWVzIDg1IDAgUgovT2Zm
                  IDg2IDAgUgo+Pgo+PgovREEgKC9aYURiIDAgVGYgMCBnKQovRiA0Ci9GVCAvQnRuCi9IIC9QCi9N
                  SyA8PAovQ0EgKDQpCj4+Ci9QIDYgMCBSCi9UICh2ZXJpZmljYXRpb25PZk5vbmZpbGluZykKL0FT
                  IC9ZZXMKL1YgL1llcwo+PgplbmRvYmoKMzQgMCBvYmoKPDwKL1N1YnR5cGUgL1dpZGdldAovUmVj
                  dCBbNTY0LjQ4IDI1NC4xMjggNTczLjEyIDI2Mi4wNDhdCi9BUCA8PAovTiA8PAovWWVzIDg3IDAg
                  UgovT2ZmIDg4IDAgUgo+PgovRCA8PAovWWVzIDg5IDAgUgovT2ZmIDkwIDAgUgo+Pgo+PgovREEg
                  KC9aYURiIDAgVGYgMCBnKQovRiA0Ci9GVCAvQnRuCi9IIC9QCi9NSyA8PAovQ0EgKDQpCj4+Ci9Q
                  IDYgMCBSCi9UIChvdGhlclRyYW5zY3JpcHQpCi9BUyAvT2ZmCi9WIC9PZmYKPj4KZW5kb2JqCjM1
                  IDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3QgWzM2LjcyIDEyMS42NDggNDQuNjQgMTI5
                  LjU2OF0KL0FQIDw8Ci9OIDw8Ci9ZZXMgOTEgMCBSCi9PZmYgOTIgMCBSCj4+Ci9EIDw8Ci9ZZXMg
                  OTMgMCBSCi9PZmYgOTQgMCBSCj4+Cj4+Ci9EQSAoL1phRGIgMCBUZiAwIGcpCi9GIDQKL0ZUIC9C
                  dG4KL0ggL1AKL01LIDw8Ci9DQSAoNCkKPj4KL1AgNiAwIFIKL1QgKHZlcmlmeVNpZ24pCi9BUyAv
                  T2ZmCi9WIC9PZmYKPj4KZW5kb2JqCjM2IDAgb2JqCjw8Ci9TdWJ0eXBlIC9XaWRnZXQKL1JlY3Qg
                  WzM2IDQ5MS43MjggNTc2IDUwNi4xMjhdCi9BUCA8PAovTiA5NSAwIFIKPj4KL0RBICgvSGVCbyA3
                  Ljk5OTkyIFRmIDAgMCAuNDk4MDQgcmcpCi9GIDQKL0ZUIC9UeAovTUsgPDwKPj4KL1AgNiAwIFIK
                  L1QgKGN1c3RvbWVyRmlsZU51bWJlcikKL01heExlbiAxMAovUSAwCj4+CmVuZG9iagozNyAwIG9i
                  ago8PAovSGVsdiA5NiAwIFIKL0hlQm8gOTcgMCBSCi9aYURiIDk4IDAgUgo+PgplbmRvYmoKMzgg
                  MCBvYmoKPDwKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA1OTAyCj4+CnN0cmVhbQ0KeJy1
                  XOtv4ziS/x4g/wM/pg+OWpRIPRaDAXq6Z3b7cDPb28neYQ8GDootx5qxLY8kJ5P766+KjyL1sJz0
                  7u0A290yRVYV6/GrYlEhC+G/r3++ClnFrt5/LXdFVz2VH+td3VT7smuqFWuqq98ZVwM541EUCJbK
                  JIh4xlb7K3yM/38biSCVnO2u7q7+dvXD/dX7j/WhKw8d++679z9//PwJxn3//Q+fPjL1Ssiaxyuu
                  Fr3n/4Mz32+uUvVDyuKEpXEWZHHE7vdXNz/VzZ6xd/e/qrFcj414kAk1PhIMyYl77wgZJrf3+M6P
                  P8OSI2K4JcZbPgmEMBTIOJCSpVES5EmuJlze3JXHrtw/lA2LQp4t39HkP95r8TkpxRJkwdIwVa+T
                  lDKYDv5yXkSRpWooGY80FA6HiVOu6PpUHoum2+Ms9YZ125LdN2XRnpoXLTLYGRj46ermMyzVHIod
                  +1o+lYdTye7K5qlaley8kGJfSJGmhEeaxwikkMIWRCwVSZACVUjN1/L3U9l2bFM3QEdxaFdNdVSU
                  3Rd/wMrdqTnMyM1ol4iCMIx62sXDIMrkjOhEX3QfQxKdmjthPMmDUKBm4eZIJPe7MEz490avYj08
                  U8MzxlNphosg0sNv2KeaHeqOtdXjAURdtcjnnp0Ou7JtWbHbseJ43FWr4mFXsl11KFu2LZ5K9lCW
                  B7aq98dd2ZXr4LIA4gjMK+0LAH7I8xkByIsCyESQh8BRFIMAkosCyEMzHIjRw2+Y3d998QJcsab8
                  tVwBS6zSqqfEAWKpDpZbBopQ7XblYwUymeecg3GMTCZO4IEkoxlJKgpHjggklYo5SSWXVSUNJBDD
                  kfP0sqbEenQIYk21nMBlsX3dlCAJlAk41frAiof61DHlzbR7WrCnqq0669mEnveGPT8/B1XTBo/1
                  03t8HUfTKLP6zZwwRZYHfML/pAGfkiUOTyadusguyDI957GsL5dhGMRASxwGgmuX9deff2C/1AHj
                  UshbnqXRkJMwkOx57E+TlPf5kQJHzjnUbESeEV+qXgQC4U/wXUmeBnGoybuvjoELN4adm7+3pb91
                  rKtBtdcQDArWeY6uYTUYQgOWga6ut/2bpgRzWF5v2GpbNI9lAB64VGZzbOr1adWBywDTeih39XPA
                  /lGf2Ko4sN9P1eq33QtMqC3PLba8btnDCzu11eGRXH0QKWdfn4CwU1fD0mCdbbnb3G7L3RH+pn1+
                  V9e7NmBfdhAqSq2FMBErOvb56x3qHSsOa7baLa9hdQbEL6Mo/nPZAbfoyJ1rD4IAfhLgA1EWOOoe
                  p1bPQBgrdIr8NgvD5fVtHma3eQ7Rgn3esBfg71ACcQV4xuOLYuD+34By9ZMV4AKoKtlQ9WkfFsNd
                  Gg31A9JHXKcXioLR+/eweSW6sIJtcHdq9qi4Xpl3PdoCdhEBJPBHT2OjZAQBiqPSDqux+TmNte4G
                  YlKSxNYx3fBirKu/FPuStdv6+YBb1wG7lmIQfMF+rSswESvgEnGBUsMDvoZzcaQdYcP66kZPswF3
                  1M0zHEboXDyOmWE5FQGfcDr4ggCbxlCX95xOnARyRkI8PCciRGtGSjF4Y9EX1ANjPyEbrK1XFeCg
                  tlydmqp7YYeTQnU9US3AdNfVU7U+wUh4fCxeYEi1Lg/L667aQIxXNKFAAKyAYzPi0nMtUPdLiIC1
                  fct7xyy3vGlLjA9t14Dtww/t8t1ljZJ5PqdRI/HGyZvFy1+jgVFGgo0mNPCsnrXHGiwa3EPUan2b
                  VNPLejaWQ0/NJhkbo+sBY0ZpotTxBkpzV65qcIbntKaZ1JShGU3rAMAmLSTH/CtUIEUTy2bD4JD1
                  +BV7KnOCOzcxY+NN/XhqGgyuuG8LVqzXDcLe5Q2gvd1pjVEIlg0WrKnrvbKA9lQBAjzUwfLdgq1A
                  aAvWdgUELnwdRPrfn7+AY12X32oLEvBA+iY5iNfIIUHd1lmfmJLDl6Z8qmoMl0YETofBi+6K1io9
                  uM2dBsfrarMplfA2Tb1XuQGLl9eTjF/mm8u38i1fw7fA/c8U33LappG/PtpBxfVBDkROiJmQGuwL
                  xTv8o8BUqVkzzFNfgGPALafVlhUYYwEjd4/FY6myo+LwgoriApL3nvMYpHkLtrwehPsEFEKgsNDk
                  hgzcJmGQ5OSpmVLBrtyVx20N26FN8hVBXYk/OSv/4XCRI2pN3rRdyWu2K8woMZUPU9baAv4DSaIS
                  uqADyuiSVLCyb9JAIeJLGjist4wThaHzTSAP4UFoNPAjwFeg5k8jhGbVEBTPU0XQu4cSXdAZvUO1
                  ak8N6hSAXEBxYHwqN99gdgo2ejAJewIjmvr0uAUk9lBuMIfDdB+mBryOeT9qzRpgNSW8MFN9MHUU
                  DcGlwuCIcAdLwCutqQwEAEdVioxE6+dtVx5bhjhdGRFkBR1k16DlCnQem+qpWL0E7K+4GC4OUB0c
                  S7va1S0QrgYNpAKz+Ha0vEYLxCwDyCHArTlnckGTbsE2DzXY5KFr6h2rn0BznlFuA6Nk6xoWfq66
                  LTwFr+57AgL5z/Vpt4YlflNoelftq9E82rhhw7c1hlYQKIy0nGnGLLX+lrvFFmolTJfaY7mqNi+6
                  OqMWM37poOd5hgVAMUGoxSPkY6puZhjokaQyA3amdpj5dTGjxrDtQrBbcKG4/eBfkpnCGieUHwWx
                  BMwahKl+yyua4esy4Kr6gT+ZDLBcB0Nbl4EwY35UvlOj0kTm5inyZgAJt7OhpuhnSZqaZ6p8o1+O
                  k9g8NJ4DH8dBGtv3VZ6kx0b2/eUND0W4MGPDJDPPeZjIhRmchZYqzqNw/LTsVoEJ/jBzbKlAq9Pk
                  5rl9ttqWkJzqke7pFLPg8ZoaDAjNVotVpFZkD/UfNHNkn+kcXPMRJfmsdOvD7sU85N5DS0VOK4HI
                  h+npcCcnd+M2wVq3sK7F7clRFRqUVhidmKhlxXmQQtQTkQRV6xezzpXiZIg1N8EHEJtD4EtnvXx0
                  NjWzXl4iwhZYzTVIs5gxk8ilIoHVpa8OJcdBElphObtZjK1DWj143laAPIx6cqsxGr+CJ8MfIIug
                  Sfd129ntjhK7sxuzsZEUY5UjFVI+1WhAZCEJwOF9a1We8/MzaqmE3qvOXlMa1fiyCDm93JqRgt7W
                  QNQYFb2vHJ+1NDnDDBaFRm9/MMPCOHo7jV3fzwkQsCVABRW9mMzstmPZXU+dRTlNvdlhgFQ2IjNg
                  N0Yb4cZIVtvi8Oh2NbXz74u19VxZbueHgGP2IEnHgsjs5herVX06dIad3FJSbJxjiPNkZoK+OEK7
                  fGW3zG4Y+KsVYFzr7MF27QxO01v7U2qnKRq3omXXc08RedMnQEnqlEILJ6LR4HQu+yiZ8RkWN/UO
                  vKctSgogr898+ycbTOiVn1zgSbnVJowl1vpC+7Atm6psF7TnUd7bc2+ihCTWDz9ivKY3tBeTLg69
                  /WCDXUZpx/nBf7GDcwpM5wf/hx2M9fdRDCS7ODvBnQ1fQlrZ9VxnlI1N0SpUKOKxQlGEHikP/YJF
                  Vj1ahhPuxEpoZeoIhj4Kry9l0ZiNzYcbi7wb9WFkG2x9agx8RngMq8f2R3yM8wHO/rlWCbkKky1g
                  y2eA45ihumnQDwJA5CF7wGo6pvTr4sVIIyZwFRje/vl/sonTG5kICHJxhmW7DP5rSgizk0H2Yh1L
                  Bdk4ySnIPswFWaoNpUFqy6eaFm+GD57jA5MmBzAfd5PJwBtZ5cUEo4DU07po8px+RcHgtdi6ZfMI
                  ZBmN8W1GsXtTHYqDqtjpyUPSdyxBnVpDDI+sdbgonMzNayLAgjynHayKGiZsCXLIFIrJOI/FC2Yd
                  lunUvu+FpZznb2P2LFHH8lDsuheyqizuWxWof9sqcvS7CZijFYh1NxFEeALS619Pbefol2rGcVwl
                  ET68WAEIOy+mahYaE5/WceBJ88hxSMsnJqfmVfK3vdg7FbzpbS/2Rt7az4WFG1wI0p6dDb147m5n
                  6HnQOOZn1TXO7CsU2UPyfyotNXAMpiEc6jBITLjAA4wpxVFP1UQ+UrWYwqqHx0ijdlXxUO0qqxMJ
                  pJ6w2sDTgqes9NEhTmE1NmDWC/ghA0OECwkbdfCNDnd5rd31wAG/0f0mwHfWc8BTTlPoTGXebV6s
                  /Wq3iScmxumt5tym9HOTW6sfq7qxG5sT3CLX4rbmg2+xntMEh0BYp+c0Uw8ZPlUuW4nycRZCaM5P
                  YEiK67IrKB1AEJudVeMJP0ZmU3U2R3GPCMUmo0SGBq3q/QP4Zm+VPBtlQjGhwAmuelYoIrvU/TCl
                  yMXYlXEKPhMT+0HuVqbAbOpbhnfqzT70NN4iGoVgcLHY4BE0nxEMWV6/3Q7+X2DIeYOKpGowmzeo
                  y1VqmAXQZ8xdB1E6Z1JpvypmjOo/AfL3DlxlkEbj3Dmxj36pD+C+AQBOGFcm+ci4IBaIZKjBYZw7
                  ezOLoBERvMBjHBN00onSE2WzXsgKXQgvrFlSjmGjYq+kmAu73rqy2D+laGRzYo9DBtpM5KjCv9nw
                  fGiQ2VSGHnkremB+bIuOP9RuGyglua6PPYifjCE+1kkdASY0GBiYTaSzNNivtiXTKQma7jB9UCDh
                  30+HknHZbQPT54ELHGobvnRYbICUptJHIXimpw1ZEd6A6WpS/7mgBkBszpinDDJUR53z9ni22Wlg
                  j1HO6YAzm7PH3GUGvcRAT5C55lyL+uz2/9dtZLNoh4UnR/Iwz+1IMi4/yY8DOZFZ9ybIXjsBaXSc
                  TKT2bk4pvDmz3pw2e3Y1Ly8ojBIgqozfby00Dgk1ep6BCpR4hGGeUUHbBHxbDnBFbRtaR5QYQ0pC
                  Bw2cw8lcktUre7of1kVXWN8mqDBkHd5tgjhb+talj69s7kLIdwQnZOhKdwYbaqZIyHedLdHDfjib
                  p30jFLGrVya1gz2i3Zxb0oET8oWuqOhTraSyplTKkuYVS+No7PGnKjJZaEUKBkESjcfE2iJfmo0V
                  hlMksgoDm0gcYyOuzX3c6YWhyZXNyDfiOCre2XzDPerrmtsBdZxmdz+LegmD07tB/BpVDgVs1UzO
                  JKdCj5XW6WgRqEvPKV9yZ0qhHUUGauCXgdFUl/o8Xp/0Ymp9P/ZR/aJfyKLN60W5cSJIsPSxPJRN
                  sTMBTUBGOS53p1RDGdXdaGrArJU1Bp5P1GaJ4knKehm0l3oSUphhwT9Y4FR28GyFp3P0eAcLlKH+
                  ZKSPqpYLX9PKPwo8Ml9c1jNBpRFneVE4YXl27ydUj4oeUcg5FYVjMcF5RIZWWf9NpzvwdjR+WwEG
                  Iw0qeeAhOaEbKcduKqXDQbJxr14z1A9yHD5Yzcb5Dx1QehGJLN/pFvNFCFzFwYirzxurM84WXLWH
                  KFV9v5ZL+a/bKIgqVaPP9DUOzIGQHg48npojdkuohoFLaoS9r9i7oMqUK921cKe7AO9sF+CH9b46
                  VIAYTYt/p7udb9M0uuURygiA4vL62+sfeB55CR1GMu6na8N+HbD1N/brxBdPcuOERSImIGn7dUZC
                  nOj1hnxKRUnccthG9XcEgrqNw0hdtRx7ssf+EtVbCeB92JWNOzM5I3NWGpIefDIOqtdnjivvT22n
                  Gs6pwZzpcwfdQz7RBb68xnd1Lkl4Sl0E6oDsrSmbnYfYMT/fSoKpnNbafG6GaNBKot74h/Pz0hq8
                  h6KoFg2YtraFIAIms40mk80Q6URVxZXtysPangbCKnQEvHZQL3ZEUj4vpo5RKVv24lgWDxl0jzSD
                  lAgQHnOXJvz64tRK+/379fr9C/zPeKA89mAC+CYLLSS5N/KCOWF96wXxYhudJXuHtQPRW+JkENIZ
                  s7pOpOdIvIpDYTN3j6yTC6BccN//KTBE+HqsGfRIC661JwqhnOCEnim7MaRRwqAtwOZLnHL6g74g
                  YxGmF/XpCJhigr5r47IE77zYBhWKvIMqQpS7H/BSKylgSlDf4V/LyO+nogGtdoCMqiFeKZ0Alkli
                  FiNe/KMgAllUQZUTmYJjOReENdxpxquFXpJRYtNQEkU9+IT7YVi0vbvGA7R4ixTscffyigZYrjpa
                  X90Ay9P8Yr/60Kld7FeP9X1GrBXNRp9/8Y3NMaViwoGrUJOAnmGowabRojs1FpblVL9z1W6qkdj7
                  A8ubdvluwv26Y6/Pxsck1Ki3Llc761PiwB2EUerPCfGPXy72pN7ktisyVADi4dhJZjwakG1tjxDl
                  87ZuLUUx2QddNIocUGRegk69Vrqx3rxOQnKHouTz/G4rEhEvrMk5kZOnc/i8WBC6lueHUbWFpgfT
                  aWs6hqAlTBvr/xrYIb1+MpewUnGnfsATcOslw3Gu1BOysewk4D1UO3FwkzpM3AvmUl0sHsapfOK0
                  RQxmsF7O9YGg5VBFLBHjsgLtozsFspPqay/Gz0X9BqEF7Ti935Hg7IaXBbk/KdxxOVVNSF/1jSNL
                  JW2T7z4pcqOboGI2ta9OyAkH0gma4KPTbhmPOLf0rGpIQRqLfUSQOnewqVZ4d8zgCVJjWl04zVu5
                  uoPbKae2dJBNqOE2kSqx8tSm3YK72Na7tV1Uep1J2AV9cNS4/qZ9cSgeXXdXSmLal/rqmw2dVgSP
                  EHHWVXGwv0ii12p0D/umtMdD9xcCTnTdEh1EMat8rkfqLNnlH5CydXXjqHDHD6uyenKUc0JXhUvu
                  7ItJIMmLdg3oUFlSo9YYhyaJR5ZN7BPXyuI52CT1irWE6abKT4mHSZTXJZbCvn+/TVKA0T38B/rV
                  YXu8ppjzqQIxdeFQlKBamoqNxjwmAkKaUS3C9vLbiEC/eI2WcW9rrInmE+X+lBolze1rC7mpsk8h
                  gch6KLfFbkOcko24BGNCttkwogVDBQUxR+6ksStHkANiJWnwvS2b6msBLm0wD4kEzxtJOo+nGo9j
                  yuiqrU7ziT4b0jmvmkPPTKlBCyWkOguPbKelq+xRCcLf6xnpYVgK8x7gbAn6YK43rl7ESSDUhx9k
                  cuFsKz57gc0dTan2DR6B65FCgUKNvOrmBbNxlRooNd+W71ugGS+5NGWxVsUDPUBHUEBRGDAw8z8d
                  4d/t8rpWI9HpGZDVn0qZiV9ewLnVtGQGoPYGg/Y+IzCCeDd3g9tYs595iPMgYjxGlJC85Y5vPD66
                  DwdHhULi1PiVHSPNL94tOVVzsZjPXiCyUlASAOwFbjCa6+6P06nah/44EPyB37mR4KZj2kv3QRvz
                  lYO/2DsoZxawB6L6Ix+cwHmEwRSQALrLFJJb2DUeyiDJYnM9QiQz1yOyBC8g59jemMze7B+Sc/Zq
                  v/1WRob2kKUwce4psE0dfC1584VZ2E7ImMJU9WT2vpaCR435ROqGtdkxl1F84QqIGBcOh193gqkz
                  n81PFgxNb6NwNbJLu5jh+Wb0+k1MeZ89kYcXLpGLs823vU1MhMKP+nMi3W5qA6uNNhuwlOKhfjIf
                  nbDoUF1qM2Cm3VbHBVP+qVT3qhXw8Dd8LLP41TKTGciMv15mIlXu+g2KL8523vVkBs7M9N3deR8J
                  aHs2MKveMu/v5gXtBnsc8XJZvceBaEK90yz32Onrt6GeT33hRn08w7PPCOmcp+diExbW6RN1bce0
                  a7Av+iYp+7DqVJT7UkBC8Vw3v7Gv5Vq7E/UbwBtISBYMXc0RL2lHs8WhCEx6ggeOj+d5uPgRoVhC
                  ShsCI/rLB7ri0wXqK0JxmiTpL3NREhQ9n6ArhDxpnq5xQ82ALrywLHMl4CxK+v0wk0FN5HmQpbn/
                  gvtS3dTXk/BLYHlvPFvefC2fApbf6s/QzW5JmOHxUChGHwEZf05s6OjG0crQlqvJgaZYd3xxDBJC
                  q9d73ycNZpQUGQCP05Wl97N2rT5i8k30y/FnTAb0xyBU/hb6o7fTj7rxTdSPC6AD6vF2ZvoW6sWb
                  qdefBfs2+s+6SUu/5HEQv4X+5DL97P8AELzTXg0KZW5kc3RyZWFtCmVuZG9iagozOSAwIG9iago8
                  PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTAKL0Jhc2VGb250IC9EUUhSTVgrVW5pdmVyc2Fs
                  U3RkLU5ld3N3aXRoQ29tbVBpCi9FbmNvZGluZyAvSWRlbnRpdHktSAovRGVzY2VuZGFudEZvbnRz
                  IFs5OSAwIFJdCi9Ub1VuaWNvZGUgMTAwIDAgUgo+PgplbmRvYmoKNDAgMCBvYmoKPDwKL1R5cGUg
                  L0ZvbnQKL1N1YnR5cGUgL1R5cGUwCi9CYXNlRm9udCAvSVNXVkVOK0Fkb2JlUGlTdGQKL0VuY29k
                  aW5nIC9JZGVudGl0eS1ICi9EZXNjZW5kYW50Rm9udHMgWzEwMSAwIFJdCi9Ub1VuaWNvZGUgMTAy
                  IDAgUgo+PgplbmRvYmoKNDEgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9C
                  YXNlRm9udCAvVFRFSkNSK0hlbHZldGljYU5ldWVMVFN0ZC1Sb21hbgovRmlyc3RDaGFyIDAKL0xh
                  c3RDaGFyIDI1NQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwovRm9udERlc2NyaXB0b3IgMTAz
                  IDAgUgovV2lkdGhzIFs1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAKNTAw
                  IDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwCjUwMCA1MDAgNTAwIDUwMCA1MDAg
                  NTAwIDUwMCA1MDAgNTAwIDUwMAo1MDAgNTAwIDI3OCAyNTkgNDI2IDU1NiA1NTYgMTAwMCA2MzAg
                  Mjc4CjI1OSAyNTkgMzUyIDYwMCAyNzggMzg5IDI3OCAzMzMgNTU2IDU1Ngo1NTYgNTU2IDU1NiA1
                  NTYgNTU2IDU1NiA1NTYgNTU2IDI3OCAyNzgKNjAwIDYwMCA2MDAgNTU2IDgwMCA2NDggNjg1IDcy
                  MiA3MDQgNjExCjU3NCA3NTkgNzIyIDI1OSA1MTkgNjY3IDU1NiA4NzEgNzIyIDc2MAo2NDggNzYw
                  IDY4NSA2NDggNTc0IDcyMiA2MTEgOTI2IDYxMSA2NDgKNjExIDI1OSAzMzMgMjU5IDYwMCA1MDAg
                  MjIyIDUzNyA1OTMgNTM3CjU5MyA1MzcgMjk2IDU3NCA1NTYgMjIyIDIyMiA1MTkgMjIyIDg1Mwo1
                  NTYgNTc0IDU5MyA1OTMgMzMzIDUwMCAzMTUgNTU2IDUwMCA3NTgKNTE4IDUwMCA0ODAgMzMzIDIy
                  MiAzMzMgNjAwIDUwMCA1NTYgNTAwCjI3OCA1NTYgNDI2IDEwMDAgNTU2IDU1NiAyMjIgMTE0OCA2
                  NDggMjU5CjEwNzQgNTAwIDYxMSA1MDAgNTAwIDI3OCAyNzggNDI2IDQyNiA1MDAKNTAwIDEwMDAg
                  MjIyIDk5MCA1MDAgMjU5IDg5MSA1MDAgNDgwIDY0OAoyNzggMjU5IDU1NiA1NTYgNTU2IDU1NiAy
                  MjIgNTU2IDIyMiA4MDAKMzc4IDQ2MyA2MDAgMzg5IDgwMCAyMjIgNDAwIDYwMCA1MDAgNTAwCjIy
                  MiA1NTYgNjAwIDI3OCAyMjIgNTAwIDM4NCA0NjMgODM0IDgzNAo4MzQgNTU2IDY0OCA2NDggNjQ4
                  IDY0OCA2NDggNjQ4IDkyNiA3MjIKNjExIDYxMSA2MTEgNjExIDI1OSAyNTkgMjU5IDI1OSA3MDQg
                  NzIyCjc2MCA3NjAgNzYwIDc2MCA3NjAgNjAwIDc2MCA3MjIgNzIyIDcyMgo3MjIgNjQ4IDY0OCA1
                  NTYgNTM3IDUzNyA1MzcgNTM3IDUzNyA1MzcKODcwIDUzNyA1MzcgNTM3IDUzNyA1MzcgMjIyIDIy
                  MiAyMjIgMjIyCjU3NCA1NTYgNTc0IDU3NCA1NzQgNTc0IDU3NCA2MDAgNTc0IDU1Ngo1NTYgNTU2
                  IDU1NiA1MDAgNTkzIDUwMF0KPj4KZW5kb2JqCjQyIDAgb2JqCjw8Ci9UeXBlIC9Gb250Ci9TdWJ0
                  eXBlIC9UeXBlMQovQmFzZUZvbnQgL0lTV1ZFTitIZWx2ZXRpY2FOZXVlTFRTdGQtQmxrQ24KL0Zp
                  cnN0Q2hhciAwCi9MYXN0Q2hhciAyNTUKL0VuY29kaW5nIC9XaW5BbnNpRW5jb2RpbmcKL0ZvbnRE
                  ZXNjcmlwdG9yIDEwNCAwIFIKL1dpZHRocyBbNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUw
                  MCA1MDAgNTAwCjUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMAo1MDAgNTAw
                  IDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAKNTAwIDUwMCAyNjAgMzE0IDQ4MSA1MjAg
                  NTIwIDc3OCA2MTEgMjYwCjMxNCAzMTQgNDA2IDYwMCAyNjAgMzY4IDI2MCAzMzMgNTIwIDUyMAo1
                  MjAgNTIwIDUyMCA1MjAgNTIwIDUyMCA1MjAgNTIwIDI2MCAyNjAKNjAwIDYwMCA2MDAgNTAwIDgw
                  MCA1NTYgNTc0IDUzNyA1NzQgNTAwCjQ4MSA1NTYgNTc0IDI2MCA0ODEgNTU2IDQ2MyA3NTggNTky
                  IDU1Ngo1MzcgNTU2IDU3NCA1MzcgNDYyIDU1NiA1MjAgNzc4IDUzNiA1MjAKNDgxIDMxNCAzMzMg
                  MzE0IDYwMCA1MDAgMjYwIDUwMCA1MjAgNDgxCjUyMCA0ODEgMzE1IDUyMCA1MjAgMjU4IDI1OCA1
                  MDAgMjU4IDc3OAo1MjAgNTAwIDUyMCA1MjAgMzUyIDQ2MyAzMTUgNTIwIDQ2MyA3NDAKNDgxIDQ2
                  MyA0NDQgMzMzIDIyMiAzMzMgNjAwIDUwMCA1MjAgNTAwCjI2MCA1MjAgNDgxIDEwMDAgNTIwIDUy
                  MCAyNjAgMTExMSA1MzcgMjQwCjc1OSA1MDAgNDgxIDUwMCA1MDAgMjYwIDI2MCA0ODEgNDgxIDUw
                  MAo1MDAgMTAwMCAyNjAgMTAwMCA0NjMgMjQwIDc0MCA1MDAgNDQ0IDUyMAoyNjAgMzE0IDUyMCA1
                  MjAgNTIwIDUyMCAyMjIgNTIwIDI2MCA4MDAKMzUyIDQ0NCA2MDAgMzY4IDgwMCAyNjAgNDAwIDYw
                  MCAzNzAgMzcwCjI2MCA1MjAgNjY2IDI2MCAyNjAgMzMzIDM1MiA0NDQgODE0IDgxNAo4MTQgNTAw
                  IDU1NiA1NTYgNTU2IDU1NiA1NTYgNTU2IDc3OCA1MzcKNTAwIDUwMCA1MDAgNTAwIDI2MCAyNjAg
                  MjYwIDI2MCA1NzQgNTkyCjU1NiA1NTYgNTU2IDU1NiA1NTYgNjAwIDU1NiA1NTYgNTU2IDU1Ngo1
                  NTYgNTIwIDUzNyA1MjAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAKNzQwIDQ4MSA0ODEgNDgxIDQ4
                  MSA0ODEgMjU4IDI1OCAyNTggMjU4CjUwMCA1MjAgNTAwIDUwMCA1MDAgNTAwIDUwMCA2MDAgNTAw
                  IDUyMAo1MjAgNTIwIDUyMCA0NjMgNTIwIDQ2M10KPj4KZW5kb2JqCjQzIDAgb2JqCjw8Ci9UeXBl
                  IC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL0RRSFJNWCtJVENGcmFua2xpbkdvdGhp
                  Y1N0ZC1EZW1pCi9GaXJzdENoYXIgMAovTGFzdENoYXIgMjU1Ci9FbmNvZGluZyAvV2luQW5zaUVu
                  Y29kaW5nCi9Gb250RGVzY3JpcHRvciAxMDUgMCBSCi9XaWR0aHMgWzUwMCA1MDAgNTAwIDUwMCA1
                  MDAgNTAwIDUwMCA1MDAgNTAwIDUwMAo1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUw
                  MCA1MDAKNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwCjUwMCA1MDAgMzAw
                  IDMyMCA0NjAgNjAwIDYwMCA3MDAgNzIwIDMwMAozODAgMzgwIDYwMCA2MDAgMzAwIDI0MCAzMDAg
                  NjAwIDYwMCA2MDAKNjAwIDYwMCA2MDAgNjAwIDYwMCA2MDAgNjAwIDYwMCAzMDAgMzAwCjYwMCA2
                  MDAgNjAwIDU0MCA4MDAgNjQwIDY2MCA2NjAgNjYwIDU4MAo1NDAgNjYwIDY2MCAzMDAgNDAwIDY0
                  MCA1MDAgODgwIDY2MCA2NjAKNjIwIDY2MCA2NjAgNjAwIDU0MCA2NjAgNjAwIDkwMCA2NDAgNjAw
                  CjY2MCAzODAgNjAwIDM4MCA2MDAgNTAwIDM4MCA1NDAgNTQwIDU0MAo1NDAgNTQwIDMwMCA1NjAg
                  NTQwIDI2MCAyNjAgNTYwIDI2MCA4MjAKNTQwIDU0MCA1NDAgNTQwIDM0MCA1MDAgMzgwIDU0MCA0
                  ODAgNzQwCjU0MCA0ODAgNDIwIDM4MCAzMDAgMzgwIDYwMCA2MDAgNjAwIDYwMAozMDAgNjAwIDQ4
                  MCAxMDAwIDYwMCA2MDAgNTAwIDEwNDAgNjAwIDI2MAo5NjAgNjAwIDY2MCA2MDAgNjAwIDMwMCAz
                  MDAgNDgwIDQ4MCA2MDAKNTAwIDEwMDAgNTAwIDEwMDAgNTAwIDI2MCA4NjAgNjAwIDQyMCA2MDAK
                  MzAwIDMyMCA2MDAgNjAwIDYwMCA2MDAgMzAwIDYwMCA0MjAgNzQwCjM2MCA0MDAgNjAwIDI0MCA3
                  NDAgNDYwIDQwMCA2MDAgMzYwIDM2MAo0MDAgNTQwIDU0MCAzMDAgMzQwIDM2MCAzNjAgNDAwIDkw
                  MCA5MDAKOTAwIDU0MCA2NDAgNjQwIDY0MCA2NDAgNjQwIDY0MCA5MDAgNjYwCjU4MCA1ODAgNTgw
                  IDU4MCAzMDAgMzAwIDMwMCAzMDAgNjYwIDY2MAo2NjAgNjYwIDY2MCA2NjAgNjYwIDYwMCA2NjAg
                  NjYwIDY2MCA2NjAKNjYwIDYwMCA2MjAgNjYwIDU0MCA1NDAgNTQwIDU0MCA1NDAgNTQwCjgyMCA1
                  NDAgNTQwIDU0MCA1NDAgNTQwIDI2MCAyNjAgMjYwIDI2MAo1NDAgNTQwIDU0MCA1NDAgNTQwIDU0
                  MCA1NDAgNjAwIDU0MCA1NDAKNTQwIDU0MCA1NDAgNDgwIDU0MCA0ODBdCj4+CmVuZG9iago0NCAw
                  IG9iago8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTEKL0Jhc2VGb250IC9UVEVKQ1IrSGVs
                  dmV0aWNhTmV1ZUxUU3RkLUJkCi9GaXJzdENoYXIgMAovTGFzdENoYXIgMjU1Ci9FbmNvZGluZyAv
                  V2luQW5zaUVuY29kaW5nCi9Gb250RGVzY3JpcHRvciAxMDYgMCBSCi9XaWR0aHMgWzUwMCA1MDAg
                  NTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMAo1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1
                  MDAgNTAwIDUwMCA1MDAKNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwCjUw
                  MCA1MDAgMjc4IDI3OCA0NjMgNTU2IDU1NiAxMDAwIDY4NSAyNzgKMjk2IDI5NiA0MDcgNjAwIDI3
                  OCA0MDcgMjc4IDM3MSA1NTYgNTU2CjU1NiA1NTYgNTU2IDU1NiA1NTYgNTU2IDU1NiA1NTYgMjc4
                  IDI3OAo2MDAgNjAwIDYwMCA1NTYgODAwIDY4NSA3MDQgNzQxIDc0MSA2NDgKNTkzIDc1OSA3NDEg
                  Mjk1IDU1NiA3MjIgNTkzIDkwNyA3NDEgNzc4CjY2NyA3NzggNzIyIDY0OSA2MTEgNzQxIDYzMCA5
                  NDQgNjY3IDY2Nwo2NDggMzMzIDM3MSAzMzMgNjAwIDUwMCAyNTkgNTc0IDYxMSA1NzQKNjExIDU3
                  NCAzMzMgNjExIDU5MyAyNTggMjc4IDU3NCAyNTggOTA2CjU5MyA2MTEgNjExIDYxMSAzODkgNTM3
                  IDM1MiA1OTMgNTIwIDgxNAo1MzcgNTE5IDUxOSAzMzMgMjIzIDMzMyA2MDAgNTAxIDU1NiA1MDEK
                  Mjc4IDU1NiA0NjMgMTAwMCA1NTYgNTU2IDI1OSAxMTQ3IDY0OSAyNDEKMTA5MyA1MDEgNjQ4IDUw
                  MSA1MDEgMjc4IDI3OCA0NjMgNDYzIDUwMQo1MDAgMTAwMCAyNTkgMTAwMCA1MzcgMjQxIDkyNiA1
                  MDEgNTE5IDY2NwoyNzggMjc4IDU1NiA1NTYgNTU2IDU1NiAyMjMgNTU2IDI1OSA4MDAKMzQ0IDQ0
                  NCA2MDAgNDA3IDgwMCAyNTkgNDAwIDYwMCAzOTIgMzkyCjI1OSA1OTMgNjIwIDI3OCAyNTkgMzky
                  IDM2NyA0NDQgODkyIDg4OQo4ODkgNTU2IDY4NSA2ODUgNjg1IDY4NSA2ODUgNjg1IDk4MSA3NDEK
                  NjQ4IDY0OCA2NDggNjQ4IDI5NSAyOTUgMjk1IDI5NSA3NDEgNzQxCjc3OCA3NzggNzc4IDc3OCA3
                  NzggNjAwIDc3OCA3NDEgNzQxIDc0MQo3NDEgNjY3IDY2NyA2MTEgNTc0IDU3NCA1NzQgNTc0IDU3
                  NCA1NzQKOTA3IDU3NCA1NzQgNTc0IDU3NCA1NzQgMjU4IDI1OCAyNTggMjU4CjYxMSA1OTMgNjEx
                  IDYxMSA2MTEgNjExIDYxMSA2MDAgNjExIDU5Mwo1OTMgNTkzIDU5MyA1MTkgNjExIDUxOV0KPj4K
                  ZW5kb2JqCjQ1IDAgb2JqCjw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQg
                  L0lTV1ZFTitIZWx2ZXRpY2FOZXVlTFRTdGQtQmRJdAovRmlyc3RDaGFyIDAKL0xhc3RDaGFyIDI1
                  NQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwovRm9udERlc2NyaXB0b3IgMTA3IDAgUgovV2lk
                  dGhzIFs1NzQgNTc0IDU3NCA1NzQgNTc0IDU3NCA1NzQgNTc0IDU3NCA1NzQKNTc0IDU3NCA1NzQg
                  NTc0IDU3NCA1NzQgNTc0IDU3NCA1NzQgNTc0CjU3NCA1NzQgNTc0IDU3NCA1NzQgNTc0IDU3NCA1
                  NzQgNTc0IDU3NAo1NzQgNTc0IDI3OCAyOTYgNDgxIDU1NiA1NTYgOTYzIDY4NSAyNzgKMjk2IDI5
                  NiA0MDcgNjAwIDI3OCA0MDcgMjc4IDM4OSA1NTYgNTU2CjU1NiA1NTYgNTU2IDU1NiA1NTYgNTU2
                  IDU1NiA1NTYgMjc4IDI3OAo2MDAgNjAwIDYwMCA1NzQgODAwIDY4NSA3MjIgNzQxIDc0MSA2NjcK
                  NTkzIDc1OSA3NDEgMjk2IDU1NiA3MjIgNTc0IDkwNyA3NDEgNzc4CjY2NyA3NzggNzIyIDY0OCA2
                  MTEgNzQxIDYzMCA5NDQgNjY3IDY0OAo2NDggMzMzIDM4OSAzMzMgNjAwIDUwMCAyNTkgNTc0IDYx
                  MSA1NTYKNjExIDU3NCAzNTIgNjExIDYxMSAyNTkgMjU5IDU1NiAyNTkgOTA3CjYxMSA1OTMgNjEx
                  IDYxMSAzODkgNTE5IDM3MCA2MTEgNTE5IDgxNQo1MTkgNTE5IDUwMCAzMzMgMjIyIDMzMyA2MDAg
                  NTAwIDU1NiA1MDAKMjc4IDU1NiA0ODEgMTAwMCA1OTMgNTkzIDI1OSAxMTMwIDY0OCAyNTkKMTEx
                  MSA1MDAgNjQ4IDUwMCA1MDAgMjc4IDI3OCA0ODEgNDgxIDUwMAo1MDAgMTAwMCAyNTkgOTkwIDUx
                  OSAyNTkgOTI2IDUwMCA1MDAgNjQ4CjI3OCAyOTYgNTU2IDU1NiA1NTYgNTU2IDIyMiA1OTMgMjU5
                  IDgwMAozNDQgNDYzIDYwMCA0MDcgODAwIDI1OSA0MDAgNjAwIDM5MiAzOTIKMjU5IDYxMSA2MDAg
                  Mjc4IDI1OSAzOTIgMzU2IDQ2MyA4ODkgODg5Cjg4OSA1NzQgNjg1IDY4NSA2ODUgNjg1IDY4NSA2
                  ODUgOTgxIDc0MQo2NjcgNjY3IDY2NyA2NjcgMjk2IDI5NiAyOTYgMjk2IDc0MSA3NDEKNzc4IDc3
                  OCA3NzggNzc4IDc3OCA2MDAgNzc4IDc0MSA3NDEgNzQxCjc0MSA2NDggNjY3IDU5MyA1NzQgNTc0
                  IDU3NCA1NzQgNTc0IDU3NAo5MDcgNTU2IDU3NCA1NzQgNTc0IDU3NCAyNTkgMjU5IDI1OSAyNTkK
                  NTkzIDYxMSA1OTMgNTkzIDU5MyA1OTMgNTkzIDYwMCA1OTMgNjExCjYxMSA2MTEgNjExIDUxOSA2
                  MTEgNTE5XQo+PgplbmRvYmoKNDYgMCBvYmoKPDwKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0
                  aCA2ODA2Cj4+CnN0cmVhbQ0KeJzFXetz28iR/66/Yu5TvFcUFm8Sm1SqZHm9q2T9OEteX6pcdTUC
                  hyQiEGDwEM389emeFwYYAqBdTs6bimRwHv38dU8T03aJC/99+OXKJRm5+vEDy2mTPbPbMi+rbM+a
                  KktJlV39g3h8oEeCyFlGZBkGThInJN1f4eP9VeR5zhJ+y6/ur/7n6uXD1Y+3ZdGwoiF/+tOPb27v
                  XsFnf/7zy1e3hE9wSbW98viWD97/4boPm6sl/2BJghjWXzmhB0/3Vy9el9WehJEbXz+Qzy8+sGeH
                  JNe+660+/0B+ePj71c9vYNGfHwQHHaFRGDvJGUr9xAkmCfUUoWP0RZHrhEskcums/IQT+Z5uGeHk
                  4ARPTPAEq/AjWsKUsDfD74i3SPAVCcbuMV8r5tIBJcSriC9zz9ImKwtSsQ2rWJGymtCKkaYkzY6R
                  O1i3KmhOQGysaBm5LdeMtEXO6prv75Jrz/HJw6urFyVMqI5ZzUhRNmztjJMXmORZvCKBHhAo+Xzd
                  Ni0Q9AoIyMvDHtapx1cOZxh3QyeUjINZcBbBYFndkKzYgJ1QLgv6WLYNMe2GFmuSNYLlh/++epEV
                  dVO1XHL1gmxBWKXSnS92fUGOx6OTVbWzLZ9/xLVxqcbROpbUvbizNlab0OIEakmRv7XBPaGbDSqt
                  2JK+addtuiO0IzJn26zOxcqsoCkoBeaCQsmRwcI5ozVDtsAPjlmek0dGDmWNo2BCs6MdJQewzgl9
                  Rmf0yQ0j4obxCZb6Q03esuOQd4c8gAaaihZ1WmUH4O1Qlc/ZGkh4PAkD/HBPdvSZAXGsGFrcvlxn
                  mwwGg7XCxAakQhr65UBPrKr/AI+yZ5qeYBNjg7LIT5qvdVYfcnoiB1o1GVj5AeaVaO6GNSyIkquw
                  FrCVTdlWxhpbtIxywz9X2wO/92WKa4KDtVXWnMjbdv/IKoe8bkHWm6ygBf+80/YaZ5/f+ggKqIkc
                  Qh9zBsPScs8WJOv0Xe/KYyF0Zwp1QnFxh6laWzekYEdSHpAAIO+2rRvYqCKvM9hV8ADUs3yNW9Nn
                  muWcHlBBC64/0NBxxxBa/tGCi6HBUpMu8reyFcpFgsWOKMfOyQ5tI6cVfONOIJTkJS304wyZBno4
                  YWJhtUoKw/hKpD0glYAwMIthYEp3tEK3ACflhpgqXjfIq1pA7EFAui0wDdhGUhAjhS1h5fv7tzgX
                  tpbDuCeB5YGUy0KvMdDImd3kdJRp0UlfCNo0EdwfBZpVkxC7PAexvoBYH6EwikMHgiCHwl9YwSrY
                  7c5AtYnoslJrG8gaRb5G1lva4hI/Db2dvCo5+XW2VepC/JLRhILc6OGQZym3pzwrWGfaHQSA1R9y
                  Nh1fkmk8et9WgHMMTQ0JsCH5I3xoQitYjbRh7qEVg4hkgZHht8IA0fBoXpeDoP7C2m7NUCIQhgDD
                  wWaQcxIBKFMUUrXm6HRCIpQ0MChk0m162z4o8ANflO4G9J4YrUB426wo8GHnXmChYIY0Z8UaRvBh
                  aGLwVxyXCSDZlHleHvEBH/D5xSarUwO31A5A8L5FcERrHpEeVbK7CJ08d1qPbwHxbSO725ATSB+T
                  mLaoMXUAPR93GeBGczrwv3W786EFY+vFUJ1a4SCCDywtQQ8w8yZNy7ZoFghBWaOilQgNe4idXVRg
                  gBA5hldDPxOseudZ9Z3Ajzk9D9lhxlAXQKegGXaERO1wUmBqsAUWAsNQBwtTMWl5yJgIYtrA6yl6
                  /WnV3LQAbRRTCUPWcjObDeUtgGrpU37SVA1oN/MESA+EiWMopno3HQpZvrnesfxAalY9ZynGpzIH
                  mH/Psx7ynNWgvhZQp8EUA3M0bvopwM+TCdyffT/4haHlouS6RMJxHPgoBBNbA2rjqAfcgD8D6aeI
                  ZmoN73rluteJu7pOEjhUTCCrdy4z5hJYykyKidwcncyW4xswOdx9A6QOPHAoSrBXul5XCLyPkFke
                  uc3g07pBIEK3yAFi0H4XmpHhEEAVVAIuckSHgKE84PPcUXo6foDUrh29zAPngp8yjqUmA4NxU//E
                  MQmJyQCFwLlagBpD8QMw9WPHT/Bc9bC2gfVafiq4hgGfxVnQc0MX7SKTKRV/+OnaR8gt1poAVCE/
                  03RQ19ExqUV9CvEcL15Kr4D9DWgycqJ9iZLYUQHHhr8ADd3+13otwQtAzxpCtcgJMZtA8UldYiJY
                  c+FCfsyPdY0SM6sXhpPAXK5GDXbi1Kctgx8QZEKpHhoJGp/LYU8eU4TOp3Dj3FGhd/QLggAOx75I
                  JDhP48bQWbXHrXpGv708So5MkjNVABf0dSRW0cJfRs4qCrpSwDKZqVl4sVUL8KxahZ8kThKI1Ela
                  CHcYTAQNv13FMs3QkpAexnm0xinv/WmqxuF5IdY4LMZWsZNMM7acY8zzl2CpfuI6vuTNRKemnKRL
                  ytsNvlbeq7HaS+Qsu2TVj1dOFIvywg2XnBOHsUSRXDzwffl3Kv4eARfiwaN8kHhjI/biwSoaHbGQ
                  myxjE7vMB3+VdMVqChuuUcgHUSgfNOJB4AXyQTsckQ7XeJIPPIWhJ/EgTFYXU/rbcJdSPlj6Y3Rk
                  AxnXw12HAywBWszbIpawCXAS+OgZwVKg8BupnTi5lJpZ8r5+xmFoRNaD4Yx5RVgPHoaKmLch64E1
                  ZZ5Xa4r1QOkGnsUrUzfzFH9RFhuPKd6iZ15y1hrzst3IB8mo1VfSHQNvjJehirfDJSxtWGRYHj3v
                  fPO4YVFuo4JUoOe4bk+BFpxaWGhJwdptKBaLx3k0sOR0P6RrHrQtSX4Dir8fbmtpY14clnoswqxt
                  P8htV8GlIrXWNOATNjY0/IsYuYyWYyzNi3ZecBbTu1nBWWvcSkr9MR4tuuZtwLK0oxJHPEaXJY5h
                  hjHPq8WaRddGqst3Vm5iqut7CPLtnCDnbXZ+V2uNeae2Irkl6lls+YbEwiLjTj7QHmFFoNmc0tp1
                  PUwH7KjWaXwZfm+Nfxxo3JnFU2uEtebvcoo7lndZyrLi4XDGvIn8P+lmVhi2CxGdEyVBMBlSLVFb
                  UcYa8U6h1Opidc07uTXl9XDKf4ZSS2OWgqwH87mZneZecpAenljnD9LJ2Ik1dvjRT5ylAzxLxz6c
                  pUWZYPi1/L2scnKieUFkmfAywIebu9/vyQOje0J0/eO+KQ8kXkIKffPx/pYYn9y0WJNakIf/Jcsg
                  cD17wam3Dtze14l6xtQUXffG3VdRdB2tltdJ7IYTwhbVAc8PQUJfUx3w/YuqA14S29WBYez2rJAT
                  Dg1HIY4+Y1v2qqZouLDwWD2w6NAGPEBGTdc/JRlLRYb2Zyu+Bv9GuuaZt8iwBDgv4u44EvZOIyoD
                  HNeWpU9LkPqgZ6XfFpiMcWSt+Q2StlixyLBYmSXUIkPj5NgK83T+OitynTFbCfKwPDSulC75CSAM
                  GBrX8T4eYcnabDfU1jcwbe1q6WLeziyrseiwpth+8PWUWtsOBTZvvN8DSCy6LO7nzaYzCgiVplHo
                  WqqV039XEJplUp9XhlVBLdt0uItlndaU7VBQ88x9D0qtRa0HbFZilo710cVKxjsd67qEC9POlXVX
                  Y6tbFM5v9z1MW52etegswehvFC7F6X9LjvENhD/Pesks/HZOm/Sddn53CxHmzdhaQ5eThzXZcZf8
                  hvhg8TIbmi3TtIDA2uSV3MQdBQLLSr7JAZW+XLenL31wG7XJ+dx5PhbrCt13tHOL8qEyLKuxMHce
                  a+bp0iUVqyarFm2Hi9pWohPhwO3lRf8h45hlUhWWtA3ML2oZxfwun8SDxL8cQecDraVSywosXi4w
                  C6I1Fi97/mTxMJ/+zUPVfJ4zz/Y3iP803GXWry+U/nQ5xioRzJZj/ODicoyXQJ4ZRfP1GKxsjJdh
                  gqUHnto9fF2xuigX5PaGJMFqtfq6Ckx4vgIzMSMyCzCTpZp4WKrBt9pWnhtNKEKUasLICb+uUmO/
                  XnK2UuMtnUBWamCJAm9FpG2zIK9YTo+0YvBbVuMdJONdQu5fIJRyQ27LvN0/ZnRBXuN1pTX88gsr
                  qy0+Ufp4Q7MC1nlDq1NOi7X5QV3TdNfWrGlqGJDVddlW2QLvOehBv9L9od5lSAk+/guranbqD/lb
                  WT3Bk7JqduSWVmWeFbD9u11WLjqreM+Koj7lz7RA2j7s8BbOXd0n6L5se0v8zqp9ie+qqgG/Z8Aa
                  X+ATvuxF1N8vKGwONTjvSKNv4tiOhLn8JY50cWHTjcj7a9Op/kqLmtbkNmtA+G/ekThMkuTrPCv5
                  Ws8K3J5nTQy0aqAr37t23SScmHPu/dvuPTqfC3bpr/Rtse5Vuu61xuGbdCMm4Ps+mkCcDC7CzXpx
                  YIPp4CUxSSe4cbz0zBfg1Ntr5MwbcMBD/91T/o6pNWzm1bfA9R3vDFezlh2Es+/0QXIckqW7dBLJ
                  1Ve8+ialDTHcieFA9BXSjkY9TiKmkHYMHKrLfzc5faR7AAT4pX6Cn+Smyv5ZFnRh4+VN9cS9CAbd
                  0jwDUypMnOQ3PukaQUuD6a8AwlnWjblb0x0MuCuP8OFf5Wrqw9/KNqszinu/yQDL67KhBgIivuL/
                  DgdjwQ503+CVnMKc8JY9VoKpt+yZIjk92H3DvmRp2S0lAPgVfRLbvnvKgda9weC7im3xShYROKtG
                  qo8f2Bcum48N3QHAUkD9YtvwCWrIp1O5h4cLQtERGd6CIfw6QXXq1rnhV5PwZhHdl7D++5ZVxtWP
                  D5zoX1q6X/C3cjvx7wHsj4zmQJu8i9ZjDWAVgxgKWEYOQ/Y4+qNz78iQ0A0ou5efb5z3zjsHn5DX
                  4lf1RvC8l1nWPO9l9puz6hatE8j44USwPgQmAjkenCi8+QiCUwZTMbLFYqoRUsRgc6MQ/M9NeuPt
                  JSMP0p3AHnQdO95KvqcMqSuX3svyC0mS0DMhTrzGzNFChjJAm86A3m3XDAzq4wNZhaGb6OdkKm8L
                  lpfGodWlA5MLB4buMLL5yQqOOuFUyigBMITcPYTM+HIADEcvXvcBMPJBs8uVnTUaaaOFfjqPBN8y
                  8kalAZ023uWQfJUZuM5dsRZoppMQILZNnzADGeaUY0klIGG6y7bUuIOBGEYGaaX+0MwvRV4pE0sN
                  Ezo7NKyKp5r9DFOmmBq4ZaopoM/IMTv0Q8SuGZtMO0Xe2f1dA2NWp2UB0fwCKLHsYhZKwtGvfc9A
                  SQTW50bht0BJBHnsyg3PQYnh3Nr3wQsi1x0mrz4cqsjrTl9ZkUIwpA2EuHe/QhruR27n9hOeF1zq
                  ouGlA6NLB8aXDlyePVC6XjQxZ3Um7+27d+gB2PriAslveJXSe7RvSv2MqhVpJNsf8vKEV28BXJts
                  A8GXX0RWU0avbcobu59f/Hz39vMPJLPu2vWu1lSMNxrAKza0S13lhRnyTvVOWBDGSTPj9yarYIFa
                  XCev1XVyvf39PW6vsmLzpoy8DaoXGnCoV7h74Bz07o8ryl4bKQCkOHj5doG8nrnI1F2+4RfAwHTz
                  dm1c4r1Pd2zd5ozcEuOmzucfFM+cfrxQPaH/kau94LTJigudqzyY1DgI0LwS5agro3h/nRLuoI/l
                  F+tGqOQH732W8v4yXtWd6oswc4GV0xqO0WpeuuqphvcgkJd/xE0h2/a6i1+bqtz31uLCFve6ciGs
                  CQ5G7qVCnhPH3SVci4O7jbkl3iwt5I3ugF9XCrntGLfTxE20IRf82je/cb+jxZbJ22qKkWMGwUg2
                  iVgY945XK983DiZ8Kr+8q/SNNm04oVxvuMS1WuHlgliLoL99YPUBwxZeV3/P72h/9v0leSnXdYgV
                  zkSR9Eh88pdeyrPyID0O4OfSWa6M2Bbge4n+ZHSL7Oh2FhYxfCZhh4rRKCpOtEnAD9KK4fVPStoi
                  A9fXcj7bzoADAW+JQA8HvD5ud6fgvRAmFxkicdeJYciA1ZnBOB5h1wDZYEL7LrZbuLChQjR6Nbe7
                  jO5Y9JjIwklakILuGb8iXEIKWVBF02PZwLnxaHfQQOEhjaKHxeDKf3f9c0xwyL3q7vIIWdzTVzUI
                  icILECwesyTea4VfaqVfRK8HSdhBEmfft5+iZabNzD1vooAX/lEoazBSmy7zVjTvVgBSweYL/Lal
                  mLQeUiY70ehommeqRw43IY+iNn0qDBn71fCFVY8GXdc3dkbgAiP1fBd2POneMbi7okZuqg/oanO8
                  C9sMHcJiUym8Yn9n2PbHIT+LVgjcHyc7bSAu6x4bsAZWKjhREOEdE88ErHgx/L8f8pu7Mex3tTmP
                  UsZxHv+rtjDGVfQGsRNysApQ5rCck0B08ZahE4t8+k+uG8Z/HreMZVeclb3BUBqBvCMu2p7ADz9Y
                  OvEKFo6cOBAZ4n9N2NvKphlWDVUZW+T/+NP3YUEPtotjx12JV3Rvbz4+3L17O7F8cpZofwDesfiu
                  KeCXeXBhbJbALQyyqfSJWwlkK6pbR905AeB0Zz+QdaZPRXmEbGErrvfrxjsUznQlTylhFO/Nom0B
                  XMLsg9HvNcJ7g4BRa4RS07CPVFWmGPiFW4lcRfRpwq0zYe/dBKS/hoDCWZqE4biXUkXyon8ESrgW
                  9+LvdP5b2+7fawS1IX8vs6IBiBJJlNH5guzpCf2H124GF+83MCCrd4IblvFKOuQBAPGQxivA69SQ
                  1V106TJhlLKJCJBZp0gJrUWKw4OECJndDXw1G5QFB2h9AVznr70kCVdY8P4zQqcns2eVyoBx0FQn
                  g9g7I+3AdwIQiOeCROAnyuS2rA5lxQ3jjNRle6H8tOjxjEXORwPwfjor7s8vPN6XAfQFBxeQNdgt
                  HjZytqW52ikaA8KebUO4lcGyI3cBRxFftgBQPddEFzCi2/JoNH4sqWgDswZ1pk1Z1f0eDbjAtnxm
                  Fe+z81iuT7yC+vlFwFk4aR5KfexkqNwjUNiwzu+Uz8G2nJ4KqwAHULiaj05FG+xbJ8xwEC3gjAim
                  QatTR56c6ZAboKugYPJwkqkhsWO7Ml/zARiysM2NNrMjZ8NDefDuDmUlelXIcFW2Td1Q0SsIkg/s
                  m9KvOxti5g5Vt4/7DFupmFbwCEkNhzPZS0fPXpdpi/3uxHyEpvYAyzXydMolxPusgTfsGtHMpmuL
                  pI+8JmRNGLp/xtAH3TswxQdDrnfZ4duN/KyNG0Z33JX86yxK9oynSlKmh25zsm4r3typ6BrZ4cdG
                  CzpcLSs1eBvZSjIphWBeCjfq68MzMrgHc65lP8nYc4PPL5gojPTypx2wt86w5ZLsXTcUR1bUZf7M
                  sIaI7dBgcM0frPuOi6nQhneUA/PByuO2BffMzGIp+8LSFvx0oWyj4tPoep8VWNClTSlarol2iqoH
                  jiJ1UlYzmfFsc6pfWVZh+6GcHrFg+4Xr7ykTjL0EawKHzdCHz5yLVeqqOu+BjuFXiEpoN4BYVcZ7
                  GOI5n7e25Fwx0benNPvZtJMZdzyTcb8yXfRsso3FhqzhraXEV87Y5mY2fe1qWHAoH2Mf8I+mOzOD
                  +aeACgUc4pyva1b80NdBE54gHwVWQKqLpxVdKDmDt3ID4XadeWkM3wzjClHdRfnacHBG6XNZVZ3X
                  DpY1S3eYr8nv6wupOcMaZTnBJ0dIEnulhNBz+RduXsTfjNGVBExNvclCQjzaq0blorh2CEfCxFmp
                  5rE6zcFQBU52AIMTBvHcnYZHo/PNYAZHy14GakIpF0YHI/xweQ5bdBQ8sJQXOwGUIZhjwsDDJdpB
                  Ly8QAaVHSDkgwV+Fq4XszCdS38EE0yT1jI6Uneigx095ghIZ1AwGpxzxXDtH0R4uCMTXCqLXKbmR
                  LaHeUwgBx7J6Ih/YWrR05J8BLIFF2776Cbyofho6mgJEs+JQmr0be9gj6t0qGm9pZpwkUjwOdMJW
                  YWnQ8FS2U+t1HlZLmB2IHQL0Yts+QYq5gmgFC8yjdYh6d+dwKjwOKygVr+Sp84ku2os+jgjW5vFG
                  pfO9xoYQi7uCyh9VgXxttj7sUFeNW6hoWfNwyUmBXxJV1cmQkm0rWvjWQwL4DoJdnjgNRbGQFXje
                  ulGW1k30//nurT46rEVnzvGljoyncDjoscuuVPyRx72B8N7z1XhgBSTnkWdT0Ra/Aig6cZq6kFki
                  Fi00dwyMACPIZDDujur9bOUDJKnotG0tuxsOzUUV9bcZP1VkugfaucTkFcM8a89z4Q35C96VTUWv
                  uBSm56KDYJXt+eEsh7i3ldJTHbp46OHxcCG66NXiLQ7z2+Xuy2Wcxd/K6KJW95KHaG12KLG6XnPz
                  QDqw0IjlT5ngsMps+CksCu0fco6a+xAKnJ8RIcdKc2yKes6h+icc8coKxnThraLJaINl4RNvKrlh
                  a95OFgkUOQfdMoio4tsvHTxxDxSfHF1g6faLIT+gkedCxorwbDh/r74+wHQnzzPcqb8hFlohzwJh
                  VAD59X7SkJIRQzKBwASAzmMY6Ymtw7hzloS4IxGUf1VWa7OX5jeG34p72TS3UUUY2cka0+Vnmmdr
                  8u7NS14Nr8pcVl3xa+fyqYORspInvlp8OckDVKno4oVGtASjJbBKOzsgwmI7FnlqkpeYxNQStlIh
                  V1VIwVbVZmLaO6IZ2bishSOaWl++g+4dYpyy0FgMQnjZpis29SGe1zSLjYgHNOftW7UWH7v4YB5e
                  psxk6Y6YCW9nnu1FcBIWooqpnLjuGybSFYNlq9ChjTxjqrhmB9mOt+wliGlWQZaL5++Uye7V+C1s
                  vwsqhQMP/rsCnKKs7r6mU5n3b4yKWoVoPC++XDyq3BUFuLCOMJ7bFe5Acc4frVXfV4iTKt/hq1j5
                  hucTMVlBo7kA9q7lL8ppRgDl9pBk8JfnEFWkTLT5q3+u4MO9TTD+8V2+3ZRKvRGVygjJy6UIwNys
                  wZpSWebhng/5TVth/iVOAvX5+MH1oNTEa0d1u93iA4Xfe/o07OuvbTNDO6p4KD6q48uOHg48h93h
                  l2v8BAPEdv2nsbJkfItQ/jQhAH8gAN/xElVTHXkR5oI/D7IXrfENA6an7WMuX0OoIfphO96ymF/M
                  gz/Gd3qATVnTCmyE8wZ5+2kBJnAdRz6+/N17CRP48l3fn3ilehl09XjQWBz68owrepYzWTvszC2r
                  jTcIgBRG15jQMW3O6l+CEF17zxpE2bWaN21W5dj9f3cBTn3/AgDG9LANCmVuZHN0cmVhbQplbmRv
                  YmoKNDcgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvVFRF
                  SkNSK0hlbHZldGljYU5ldWVMVFN0ZC1JdAovRmlyc3RDaGFyIDAKL0xhc3RDaGFyIDI1NQovRW5j
                  b2RpbmcgL1dpbkFuc2lFbmNvZGluZwovRm9udERlc2NyaXB0b3IgMTA4IDAgUgovV2lkdGhzIFs1
                  NzEgNTcxIDU3MSA1NzEgNTcxIDU3MSA1NzEgNTcxIDU3MSA1NzEKNTcxIDU3MSA1NzEgNTcxIDU3
                  MSA1NzEgNTcxIDU3MSA1NzEgNTcxCjU3MSA1NzEgNTcxIDU3MSA1NzEgNTcxIDU3MSA1NzEgNTcx
                  IDU3MQo1NzEgNTcxIDI3OCAyNTkgNDI2IDU1NiA1NTYgOTI2IDYzMCAyNzgKMjU5IDI1OSAzNTIg
                  NjAwIDI3OCAzODkgMjc4IDMzMyA1NTYgNTU2CjU1NiA1NTYgNTU2IDU1NiA1NTYgNTU2IDU1NiA1
                  NTYgMjc4IDI3OAo2MDAgNjAwIDYwMCA1NTYgODAwIDY2NyA2ODUgNzIyIDcwNCA2MTEKNTc0IDc1
                  OSA3MjIgMjU5IDUxOSA2NjcgNTU2IDg3MCA3MjIgNzU5CjY0OCA3NTkgNjg1IDY0OCA1NzQgNzIy
                  IDYxMSA5MjYgNjExIDYxMQo2MTEgMjU5IDMzMyAyNTkgNjAwIDUwMCAyMjIgNTE5IDU5MyA1MzcK
                  NTkzIDUzNyAyOTYgNTc0IDU1NiAyMjIgMjIyIDQ4MSAyMjIgODUyCjU1NiA1NzQgNTkzIDU5MyAz
                  MzMgNDgxIDMxNSA1NTYgNDgxIDc1OQo0ODEgNDgxIDQ0NCAzMzMgMjIyIDMzMyA2MDAgNTAwIDU1
                  NiA1MDAKMjc4IDU1NiA0MjYgMTAwMCA1NTYgNTU2IDIyMiAxMDc0IDY0OCAyNTkKMTA3NCA1MDAg
                  NjExIDUwMCA1MDAgMjc4IDI3OCA0MjYgNDI2IDUwMAo1MDAgMTAwMCAyMjIgOTkwIDQ4MSAyNTkg
                  OTA3IDUwMCA0NDQgNjExCjI3OCAyNTkgNTU2IDU1NiA1NTYgNTU2IDIyMiA1NTYgMjIyIDgwMAoz
                  MTEgNDYzIDYwMCAzODkgODAwIDIyMiA0MDAgNjAwIDMzMyAzMzMKMjIyIDU1NiA2MDAgMjc4IDIy
                  MiAzMzMgMzQ0IDQ2MyA4MzQgODM0CjgzNCA1NTYgNjY3IDY2NyA2NjcgNjY3IDY2NyA2NjcgOTI2
                  IDcyMgo2MTEgNjExIDYxMSA2MTEgMjU5IDI1OSAyNTkgMjU5IDcwNCA3MjIKNzU5IDc1OSA3NTkg
                  NzU5IDc1OSA2MDAgNzU5IDcyMiA3MjIgNzIyCjcyMiA2MTEgNjQ4IDUzNyA1MTkgNTE5IDUxOSA1
                  MTkgNTE5IDUxOQo4NzAgNTM3IDUzNyA1MzcgNTM3IDUzNyAyMjIgMjIyIDIyMiAyMjIKNTc0IDU1
                  NiA1NzQgNTc0IDU3NCA1NzQgNTc0IDYwMCA1NzQgNTU2CjU1NiA1NTYgNTU2IDQ4MSA1OTMgNDgx
                  XQo+PgplbmRvYmoKNDggMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNl
                  Rm9udCAvSVNXVkVOK0hlbHZldGljYU5ldWVMVFN0ZC1CbGsKL0ZpcnN0Q2hhciAwCi9MYXN0Q2hh
                  ciAyNTUKL0VuY29kaW5nIC9XaW5BbnNpRW5jb2RpbmcKL0ZvbnREZXNjcmlwdG9yIDEwOSAwIFIK
                  L1dpZHRocyBbNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwCjUwMCA1MDAg
                  NTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMAo1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1
                  MDAgNTAwIDUwMCA1MDAKNTAwIDUwMCAzMzQgMzE1IDUxOSA2NjggNjY4IDEwMTkgNzQxIDI5Ngoz
                  MTUgMzE1IDQ2MyA2MDAgMzM0IDQwNyAzMzQgNDI2IDY2OCA2NjgKNjY4IDY2OCA2NjggNjY4IDY2
                  OCA2NjggNjY4IDY2OCAzMzQgMzM0CjYwMCA2MDAgNjAwIDU3NCA4MDAgNzIyIDc0MSA3NTkgNzc4
                  IDcwNAo2MzAgNzc4IDc1OSAzMzMgNjExIDc3OCA2MzAgOTQ0IDc1OSA3OTYKNzA0IDc5NiA3NDEg
                  NjY3IDY2OCA3NTkgNjQ4IDk2MyA3NDEgNjY3CjY4NSA0MDcgNDI2IDQwNyA2MDAgNTAwIDI3OCA2
                  MTEgNjQ4IDYxMQo2NDggNjMwIDM4OSA2MzAgNjQ4IDMxNSAzMTUgNjExIDMxNSA5NjMKNjQ4IDYz
                  MCA2NDggNjQ4IDQ0NCA1NzQgNDA3IDY0OCA1NTYgODcwCjU1NiA1NTYgNTU2IDQwNyAyMjIgNDA3
                  IDYwMCA1MDAgNjY4IDUwMAoyOTYgNjY4IDUxOSAxMDAwIDY2NyA2NjcgMjc4IDExNjcgNjY3IDI0
                  MQoxMTMwIDUwMCA2ODUgNTAwIDUwMCAyOTYgMjk2IDUxOSA1MTkgNTAwCjUwMCAxMDAwIDI3OCAx
                  MDAwIDU3NCAyNDEgOTgxIDUwMCA1NTYgNjY3CjMzNCAzMTUgNjY4IDY2OCA2NjggNjY4IDIyMiA2
                  NjcgMjc4IDgwMAozNjcgNDQ0IDYwMCA0MDcgODAwIDI3OCA0MDAgNjAwIDQwMCA0MDAKMjc4IDY0
                  OCA2MjAgMzM0IDI3OCA0MDAgMzc4IDQ0NCAxMDAwIDEwMDAKMTAwMCA1NzQgNzIyIDcyMiA3MjIg
                  NzIyIDcyMiA3MjIgMTA1NiA3NTkKNzA0IDcwNCA3MDQgNzA0IDMzMyAzMzMgMzMzIDMzMyA3Nzgg
                  NzU5Cjc5NiA3OTYgNzk2IDc5NiA3OTYgNjAwIDc5NiA3NTkgNzU5IDc1OQo3NTkgNjY3IDcwNCA2
                  NDggNjExIDYxMSA2MTEgNjExIDYxMSA2MTEKOTYyIDYxMSA2MzAgNjMwIDYzMCA2MzAgMzE1IDMx
                  NSAzMTUgMzE1CjYzMCA2NDggNjMwIDYzMCA2MzAgNjMwIDYzMCA2MDAgNjMwIDY0OAo2NDggNjQ4
                  IDY0OCA1NTYgNjQ4IDU1Nl0KPj4KZW5kb2JqCjQ5IDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9T
                  dWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgMjY2LjM5OTk5IDE2LjU2XQovTGVuZ3RoIDczCi9SZXNv
                  dXJjZXMgMTEwIDAgUgo+PgpzdHJlYW0NCiAvVHggQk1DCkJUCi9IZUJvIDcuOTk5OTIgVGYKIDAg
                  MCAuNDk4MDQgcmcKIDIgNS4xNzYwMzA2IFRkCjw+IFRqCkVUCiBFTUMNCmVuZHN0cmVhbQplbmRv
                  YmoKNTAgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCAy
                  NjYuMzk5OTkgMjUuOTE5OThdCi9MZW5ndGggOTMKL1Jlc291cmNlcyAxMTEgMCBSCj4+CnN0cmVh
                  bQ0KIC9UeCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwogMiA5Ljg1NjAy
                  IFRkCjw1NDM3MzEzNDMwMjA1NDM3MzEzNDMwPiBUagpFVAogRU1DDQplbmRzdHJlYW0KZW5kb2Jq
                  CjUxIDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgMjcz
                  LjYwMDAxIDE2LjU2XQovTGVuZ3RoIDExMAovUmVzb3VyY2VzIDExMiAwIFIKPj4Kc3RyZWFtDQog
                  L1R4IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDUuMTc2MDMwNiBU
                  ZAoxMTIuMTIwMjMgMCBUZAo8MzkzOTM5MkQzOTM5MkQzOTM5MzAzMD4gVGoKRVQKIEVNQw0KZW5k
                  c3RyZWFtCmVuZG9iago1MiAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQov
                  QkJveCBbMCAwIDU0MCAxMy42Nzk5OV0KL0xlbmd0aCAxNzMKL1Jlc291cmNlcyAxMTMgMCBSCj4+
                  CnN0cmVhbQ0KIC9UeCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwogMiAz
                  LjczNjAyNTggVGQKPDU0MzczMTM0MzAyMDU0MzczMTM0MzAyQzIwMzQzNDM1MjA0MTZFNjQ2NTcy
                  NzM2RjZFMjA1MjZGNjE2NDJDMjA0MjZGNjE3MjY0NkQ2MTZFMkMyMDRGNTIyMDM5MzczODMxMzg+
                  IFRqCkVUCiBFTUMNCmVuZHN0cmVhbQplbmRvYmoKNTMgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QK
                  L1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCA1NDAgMTMuNjc5OTldCi9MZW5ndGggNzMKL1Jlc291
                  cmNlcyAxMTQgMCBSCj4+CnN0cmVhbQ0KIC9UeCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAw
                  IC40OTgwNCByZwogMiAzLjczNjAyNTggVGQKPD4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9i
                  ago1NCAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDU0
                  MCAxNS44Mzk5N10KL0xlbmd0aCAxNzEKL1Jlc291cmNlcyAxMTUgMCBSCj4+CnN0cmVhbQ0KIC9U
                  eCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwogMiA0LjgxNjAxNTcgVGQK
                  PDQyNDIyRDUzNzQ2MTY3Njk2RTY3MkMyMDMxMzAzMDIwNEQ2RjZFNzQ2NzZGNkQ2NTcyNzkyMDUz
                  NzQyRTJDMjA1MzYxNkUyMDQ2NzI2MTZFNjM2OTczNjM2RjJDMjA0MzQxPiBUagpFVAogRU1DDQpl
                  bmRzdHJlYW0KZW5kb2JqCjU1IDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3Jt
                  Ci9CQm94IFswIDAgMjEuNTk5OTkgMTEuNTJdCi9MZW5ndGggOTAKL1Jlc291cmNlcyAxMTYgMCBS
                  Cj4+CnN0cmVhbQ0KIC9UeCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwog
                  MiAyLjY1NjAzMTEgVGQKNC4zNTIwNCAwIFRkCjwzMTMyPiBUagpFVAogRU1DDQplbmRzdHJlYW0K
                  ZW5kb2JqCjU2IDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFsw
                  IDAgMjAuODggMTEuNTJdCi9MZW5ndGggOTEKL1Jlc291cmNlcyAxMTcgMCBSCj4+CnN0cmVhbQ0K
                  IC9UeCBCTUMKQlQKL0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwogMiAyLjY1NjAzMTEg
                  VGQKMy45OTIwNDQgMCBUZAo8MzMzMT4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9iago1NyAw
                  IG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDI4LjgwMDAy
                  IDExLjUyXQovTGVuZ3RoIDk1Ci9SZXNvdXJjZXMgMTE4IDAgUgo+PgpzdHJlYW0NCiAvVHggQk1D
                  CkJUCi9IZUJvIDcuOTk5OTIgVGYKIDAgMCAuNDk4MDQgcmcKIDIgMi42NTYwMzExIFRkCjMuNTA0
                  MDk5IDAgVGQKPDMyMzAzMTM4PiBUagpFVAogRU1DDQplbmRzdHJlYW0KZW5kb2JqCjU4IDAgb2Jq
                  Cjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgMjEuNjAwMDEgMTEu
                  NTJdCi9MZW5ndGggOTIKL1Jlc291cmNlcyAxMTkgMCBSCj4+CnN0cmVhbQ0KIC9UeCBCTUMKQlQK
                  L0hlQm8gNy45OTk5MiBUZgogMCAwIC40OTgwNCByZwogMiAyLjY1NjAzMTEgVGQKNC4zNTIwNDk0
                  IDAgVGQKPDMxMzI+IFRqCkVUCiBFTUMNCmVuZHN0cmVhbQplbmRvYmoKNTkgMCBvYmoKPDwKL1R5
                  cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCAyMC44Nzk5NyAxMS41Ml0KL0xl
                  bmd0aCA5MgovUmVzb3VyY2VzIDEyMCAwIFIKPj4Kc3RyZWFtDQogL1R4IEJNQwpCVAovSGVCbyA3
                  Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDIuNjU2MDMxMSBUZAozLjk5MjAyOTcgMCBUZAo8
                  MzMzMT4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9iago2MCAwIG9iago8PAovVHlwZSAvWE9i
                  amVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDIxLjYwMDAxIDExLjUyXQovTGVuZ3RoIDg3
                  Ci9SZXNvdXJjZXMgMTIxIDAgUgo+PgpzdHJlYW0NCiAvVHggQk1DCkJUCi9IZUJvIDcuOTk5OTIg
                  VGYKIDAgMCAuNDk4MDQgcmcKIDIgMi42NTYwMzExIFRkCjguODAwMDA1IDAgVGQKPD4gVGoKRVQK
                  IEVNQw0KZW5kc3RyZWFtCmVuZG9iago2MSAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlw
                  ZSAvRm9ybQovQkJveCBbMCAwIDI4Ljc5OTk5IDExLjUyXQovTGVuZ3RoIDg4Ci9SZXNvdXJjZXMg
                  MTIyIDAgUgo+PgpzdHJlYW0NCiAvVHggQk1DCkJUCi9IZUJvIDcuOTk5OTIgVGYKIDAgMCAuNDk4
                  MDQgcmcKIDIgMi42NTYwMzExIFRkCjEyLjM5OTk5NSAwIFRkCjw+IFRqCkVUCiBFTUMNCmVuZHN0
                  cmVhbQplbmRvYmoKNjIgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JC
                  b3ggWzAgMCAyMS42MDAwMSAxMS41Ml0KL0xlbmd0aCA4NwovUmVzb3VyY2VzIDEyMyAwIFIKPj4K
                  c3RyZWFtDQogL1R4IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDIu
                  NjU2MDMxMSBUZAo4LjgwMDAwNSAwIFRkCjw+IFRqCkVUCiBFTUMNCmVuZHN0cmVhbQplbmRvYmoK
                  NjMgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCAyMC44
                  OCAxMS41Ml0KL0xlbmd0aCA4MwovUmVzb3VyY2VzIDEyNCAwIFIKPj4Kc3RyZWFtDQogL1R4IEJN
                  QwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDIuNjU2MDMxMSBUZAo4LjQ0
                  IDAgVGQKPD4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9iago2NCAwIG9iago8PAovVHlwZSAv
                  WE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDI4Ljc5OTk5IDExLjUyXQovTGVuZ3Ro
                  IDg4Ci9SZXNvdXJjZXMgMTI1IDAgUgo+PgpzdHJlYW0NCiAvVHggQk1DCkJUCi9IZUJvIDcuOTk5
                  OTIgVGYKIDAgMCAuNDk4MDQgcmcKIDIgMi42NTYwMzExIFRkCjEyLjM5OTk5NSAwIFRkCjw+IFRq
                  CkVUCiBFTUMNCmVuZHN0cmVhbQplbmRvYmoKNjUgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1
                  YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCAxMTUuMiAxMi4yMzk5OV0KL0xlbmd0aCA5NQovUmVzb3Vy
                  Y2VzIDEyNiAwIFIKPj4Kc3RyZWFtDQogL1R4IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAg
                  LjQ5ODA0IHJnCiAyIDMuMDE2MDI2IFRkCjQ2LjcwNDA4NiAwIFRkCjwzMTMwMzQzMD4gVGoKRVQK
                  IEVNQw0KZW5kc3RyZWFtCmVuZG9iago2NiAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlw
                  ZSAvRm9ybQovQkJveCBbMCAwIDQ4OS42MDAwMSAxMi4yNF0KL0xlbmd0aCA3MwovUmVzb3VyY2Vz
                  IDEyNyAwIFIKPj4Kc3RyZWFtDQogL1R4IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5
                  ODA0IHJnCiAyIDMuMDE2MDMwOCBUZAo8PiBUagpFVAogRU1DDQplbmRzdHJlYW0KZW5kb2JqCjY3
                  IDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgMTM2Ljc5
                  OTk5IDE1Ljg0XQovTGVuZ3RoIDExMQovUmVzb3VyY2VzIDEyOCAwIFIKPj4Kc3RyZWFtDQogL1R4
                  IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDQuODE2MDMxIFRkCjQx
                  LjQ5NjI0NiAwIFRkCjwzOTM4MzcyRDM5MzczOTJEMzczOTM3Mzc+IFRqCkVUCiBFTUMNCmVuZHN0
                  cmVhbQplbmRvYmoKNjggMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JC
                  b3ggWzAgMCAyMC44OCAxMS41Ml0KL0xlbmd0aCA4MwovUmVzb3VyY2VzIDEyOSAwIFIKPj4Kc3Ry
                  ZWFtDQogL1R4IEJNQwpCVAovSGVCbyA3Ljk5OTkyIFRmCiAwIDAgLjQ5ODA0IHJnCiAyIDIuNjU2
                  MDMxMSBUZAo4LjQ0IDAgVGQKPD4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9iago2OSAwIG9i
                  ago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDI4Ljc5OTk5IDEx
                  LjUyXQovTGVuZ3RoIDk2Ci9SZXNvdXJjZXMgMTMwIDAgUgo+PgpzdHJlYW0NCiAvVHggQk1DCkJU
                  Ci9IZUJvIDcuOTk5OTIgVGYKIDAgMCAuNDk4MDQgcmcKIDIgMi42NTYwMzExIFRkCjMuNTA0MDgz
                  NiAwIFRkCjwzMjMwMzEzNz4gVGoKRVQKIEVNQw0KZW5kc3RyZWFtCmVuZG9iago3MCAwIG9iago8
                  PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDI3My42MDAwMSAxNi41
                  Nl0KL0xlbmd0aCAwCj4+CnN0cmVhbQ0KDQplbmRzdHJlYW0KZW5kb2JqCjcxIDAgb2JqCjw8Ci9U
                  eXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgOC42NDAwMSA3LjkxOTk4XQov
                  UmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9aYURiIDk4IDAgUgo+Pgo+PgovRmlsdGVyIC9GbGF0ZURl
                  Y29kZQovTGVuZ3RoIDg3Cj4+CnN0cmVhbQ0KeJzTD6lQcPJ15nIK4TJQCEkGEeVchgZAqgrITgfx
                  i7j0oxJdkhRM9YxNDS0tFULSuAwVDIDQUMFIz8AMSBiaKoTkckVrmGjGhnhxuYZwuQJNBACJEBN6
                  DQplbmRzdHJlYW0KZW5kb2JqCjcyIDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9G
                  b3JtCi9CQm94IFswIDAgOC42NDAwMSA3LjkxOTk4XQovTGVuZ3RoIDAKPj4Kc3RyZWFtDQoNCmVu
                  ZHN0cmVhbQplbmRvYmoKNzMgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0K
                  L0JCb3ggWzAgMCA4LjY0MDAxIDcuOTE5OThdCi9SZXNvdXJjZXMgPDwKL0ZvbnQgPDwKL1phRGIg
                  OTggMCBSCj4+Cj4+Ci9GaWx0ZXIgL0ZsYXRlRGVjb2RlCi9MZW5ndGggMTIyCj4+CnN0cmVhbQ0K
                  eJxljbEKAkEQQ/t8RUpt5nbW3Tu3Pb1GsBAGBMVCxbNS8BrFr3e2tklCAi/S5VgS7wgMXEqb2EmJ
                  nG4Y0diH/XaF1/+45xO9eW/XKm9ocPt6riSb0BzO6wuzLLKWQhuhrBBllNC6aKY9cJyl+ck2GAw7
                  DH71A3t/HjsNCmVuZHN0cmVhbQplbmRvYmoKNzQgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1
                  YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCA4LjY0MDAxIDcuOTE5OThdCi9GaWx0ZXIgL0ZsYXRlRGVj
                  b2RlCi9MZW5ndGggNDUKPj4Kc3RyZWFtDQp4nNMzNzWyNFFI5zJQMFCw0DMzUTDXszRSKErlSuMq
                  xBQMV8jjCuQCABzeCsINCmVuZHN0cmVhbQplbmRvYmoKNzUgMCBvYmoKPDwKL1R5cGUgL1hPYmpl
                  Y3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCA4LjY0MDAxIDcuOTE5OThdCi9SZXNvdXJjZXMg
                  PDwKL0ZvbnQgPDwKL1phRGIgOTggMCBSCj4+Cj4+Ci9GaWx0ZXIgL0ZsYXRlRGVjb2RlCi9MZW5n
                  dGggODcKPj4Kc3RyZWFtDQp4nNMPqVBw8nXmcgrhMlAISQYR5VyGBkCqCshOB/GLuPSjEl2SFEz1
                  jE0NLS0VQtK4DBUMgNBQwUjPwAxIGJoqhORyRWuYaMaGeHG5hnC5Ak0EAIkQE3oNCmVuZHN0cmVh
                  bQplbmRvYmoKNzYgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3gg
                  WzAgMCA4LjY0MDAxIDcuOTE5OThdCi9MZW5ndGggMAo+PgpzdHJlYW0NCg0KZW5kc3RyZWFtCmVu
                  ZG9iago3NyAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAw
                  IDguNjQwMDEgNy45MTk5OF0KL1Jlc291cmNlcyA8PAovRm9udCA8PAovWmFEYiA5OCAwIFIKPj4K
                  Pj4KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAxMjIKPj4Kc3RyZWFtDQp4nGWNsQoCQRBD
                  +3xFSm3mdtbdO7c9vUawEAYExULFs1LwGsWvd7a2SUICL9LlWBLvCAxcSpvYSYmcbhjR2If9doXX
                  /7jnE715b9cqb2hw+3quJJvQHM7rC7MsspZCG6GsEGWU0Lpopj1wnKX5yTYYDDsMfvUDe38eOw0K
                  ZW5kc3RyZWFtCmVuZG9iago3OCAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9y
                  bQovQkJveCBbMCAwIDguNjQwMDEgNy45MTk5OF0KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0
                  aCA0NQo+PgpzdHJlYW0NCnic0zM3NbI0UUjnMlAwULDQMzNRMNezNFIoSuVK4yrEFAxXyOMK5AIA
                  HN4Kwg0KZW5kc3RyZWFtCmVuZG9iago3OSAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlw
                  ZSAvRm9ybQovQkJveCBbMCAwIDguNjQwMDEgNy45MTk5OF0KL1Jlc291cmNlcyA8PAovRm9udCA8
                  PAovWmFEYiA5OCAwIFIKPj4KPj4KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA4Nwo+Pgpz
                  dHJlYW0NCnic0w+pUHDydeZyCuEyUAhJBhHlXIYGQKoKyE4H8Yu49KMSXZIUTPWMTQ0tLRVC0rgM
                  FQyA0FDBSM/ADEgYmiqE5HJFa5hoxoZ4cbmGcLkCTQQAiRATeg0KZW5kc3RyZWFtCmVuZG9iago4
                  MCAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDguNjQw
                  MDEgNy45MTk5OF0KL0xlbmd0aCAwCj4+CnN0cmVhbQ0KDQplbmRzdHJlYW0KZW5kb2JqCjgxIDAg
                  b2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgOC42NDAwMSA3
                  LjkxOTk4XQovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9aYURiIDk4IDAgUgo+Pgo+PgovRmlsdGVy
                  IC9GbGF0ZURlY29kZQovTGVuZ3RoIDEyMgo+PgpzdHJlYW0NCnicZY2xCgJBEEP7fEVKbeZ21t07
                  tz29RrAQBgTFQsWzUvAaxa93trZJQgIv0uVYEu8IDFxKm9hJiZxuGNHYh/12hdf/uOcTvXlv1ypv
                  aHD7eq4km9AczusLsyyylkIboawQZZTQumimPXCcpfnJNhgMOwx+9QN7fx47DQplbmRzdHJlYW0K
                  ZW5kb2JqCjgyIDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFsw
                  IDAgOC42NDAwMSA3LjkxOTk4XQovRmlsdGVyIC9GbGF0ZURlY29kZQovTGVuZ3RoIDQ1Cj4+CnN0
                  cmVhbQ0KeJzTMzc1sjRRSOcyUDBQsNAzM1Ew17M0UihK5UrjKsQUDFfI4wrkAgAc3grCDQplbmRz
                  dHJlYW0KZW5kb2JqCjgzIDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9C
                  Qm94IFswIDAgOC42NDAwMSA4LjY0MDAxXQovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9aYURiIDk4
                  IDAgUgo+Pgo+PgovRmlsdGVyIC9GbGF0ZURlY29kZQovTGVuZ3RoIDg4Cj4+CnN0cmVhbQ0KeJzT
                  D6lQcPJ15nIK4TJQCEkGEeVchgZAqgrITgfxi7j0oxJdkhRM9cwtTAwMFULSuAwVDIDQUMFQz8Jc
                  wUjP2EwhJJcrWsNEMzbEi8s1hMsVaCIAiRITfg0KZW5kc3RyZWFtCmVuZG9iago4NCAwIG9iago8
                  PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDguNjQwMDEgOC42NDAw
                  MV0KL0xlbmd0aCAwCj4+CnN0cmVhbQ0KDQplbmRzdHJlYW0KZW5kb2JqCjg1IDAgb2JqCjw8Ci9U
                  eXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94IFswIDAgOC42NDAwMSA4LjY0MDAxXQov
                  UmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9aYURiIDk4IDAgUgo+Pgo+PgovRmlsdGVyIC9GbGF0ZURl
                  Y29kZQovTGVuZ3RoIDEyMAo+PgpzdHJlYW0NCnic0zM3NbI0UUjnMlAwULDQMzOBEEWpXGlc+iEV
                  Ck6+zlyFmJLhCnlcTiFA8ZBkEFHOZWgApKqAbJBJIUVc+lGJLkkKpnrmFiYGhgohaVyGCiBDDBUM
                  9SzMFYz0jM0UQnK5ojVMNGNDvLhcQ7gCuVyBVgEAe4kePw0KZW5kc3RyZWFtCmVuZG9iago4NiAw
                  IG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDguNjQwMDEg
                  OC42NDAwMV0KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA0MAo+PgpzdHJlYW0NCnic0zM3
                  NbI0UUjnMlAwULDQMzOBEEWpXGlchZiC4Qp5XIFcABzeCsINCmVuZHN0cmVhbQplbmRvYmoKODcg
                  MCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCA4LjY0MDAx
                  IDcuOTE5OThdCi9SZXNvdXJjZXMgPDwKL0ZvbnQgPDwKL1phRGIgOTggMCBSCj4+Cj4+Ci9GaWx0
                  ZXIgL0ZsYXRlRGVjb2RlCi9MZW5ndGggODcKPj4Kc3RyZWFtDQp4nNMPqVBw8nXmcgrhMlAISQYR
                  5VyGBkCqCshOB/GLuPSjEl2SFEz1jE0NLS0VQtK4DBUMgNBQwUjPwAxIGJoqhORyRWuYaMaGeHG5
                  hnC5Ak0EAIkQE3oNCmVuZHN0cmVhbQplbmRvYmoKODggMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QK
                  L1N1YnR5cGUgL0Zvcm0KL0JCb3ggWzAgMCA4LjY0MDAxIDcuOTE5OThdCi9MZW5ndGggMAo+Pgpz
                  dHJlYW0NCg0KZW5kc3RyZWFtCmVuZG9iago4OSAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3Vi
                  dHlwZSAvRm9ybQovQkJveCBbMCAwIDguNjQwMDEgNy45MTk5OF0KL1Jlc291cmNlcyA8PAovRm9u
                  dCA8PAovWmFEYiA5OCAwIFIKPj4KPj4KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAxMjIK
                  Pj4Kc3RyZWFtDQp4nGWNsQoCQRBD+3xFSm3mdtbdO7c9vUawEAYExULFs1LwGsWvd7a2SUICL9Ll
                  WBLvCAxcSpvYSYmcbhjR2If9doXX/7jnE715b9cqb2hw+3quJJvQHM7rC7MsspZCG6GsEGWU0Lpo
                  pj1wnKX5yTYYDDsMfvUDe38eOw0KZW5kc3RyZWFtCmVuZG9iago5MCAwIG9iago8PAovVHlwZSAv
                  WE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDguNjQwMDEgNy45MTk5OF0KL0ZpbHRl
                  ciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA0NQo+PgpzdHJlYW0NCnic0zM3NbI0UUjnMlAwULDQMzNR
                  MNezNFIoSuVK4yrEFAxXyOMK5AIAHN4Kwg0KZW5kc3RyZWFtCmVuZG9iago5MSAwIG9iago8PAov
                  VHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBbMCAwIDcuOTIgNy45MjAwMV0KL1Jl
                  c291cmNlcyA8PAovRm9udCA8PAovWmFEYiA5OCAwIFIKPj4KPj4KL0ZpbHRlciAvRmxhdGVEZWNv
                  ZGUKL0xlbmd0aCA4NQo+PgpzdHJlYW0NCnic0w+pUHDydeZyCuEyUAhJBhHlXIYGQKoKyE4H8Yu4
                  9KMSXZIUTPWMTY0UQtK4DBUMgNBQwVDPXMFIz9BUISSXK1rDRDM2xIvLNYTLFWgcAE6pEtkNCmVu
                  ZHN0cmVhbQplbmRvYmoKOTIgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0K
                  L0JCb3ggWzAgMCA3LjkyIDcuOTIwMDFdCi9MZW5ndGggMAo+PgpzdHJlYW0NCg0KZW5kc3RyZWFt
                  CmVuZG9iago5MyAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9ybQovQkJveCBb
                  MCAwIDcuOTIgNy45MjAwMV0KL1Jlc291cmNlcyA8PAovRm9udCA8PAovWmFEYiA5OCAwIFIKPj4K
                  Pj4KL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAxMTcKPj4Kc3RyZWFtDQp4nNMzNzWyNFFI
                  5zJQMFAw17M0ghBFqVxpXPohFQpOvs5chZiS4Qp5XE4hQPGQZBBRzmVoAKSqgGyQSSFFXPpRiS5J
                  CqZ6xqZGCiFpXIYKICMMFQz1zBWM9AxNFUJyuaI1TDRjQ7y4XEO4ArlcgfYAACCkHZoNCmVuZHN0
                  cmVhbQplbmRvYmoKOTQgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0JC
                  b3ggWzAgMCA3LjkyIDcuOTIwMDFdCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlCi9MZW5ndGggNDAKPj4K
                  c3RyZWFtDQp4nNMzNzWyNFFI5zJQMFAw17M0ghBFqVxpXIWYguEKeVyBXAAc3grCDQplbmRzdHJl
                  YW0KZW5kb2JqCjk1IDAgb2JqCjw8Ci9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9CQm94
                  IFswIDAgNTQwIDE0LjM5OTk5XQovTGVuZ3RoIDAKPj4Kc3RyZWFtDQoNCmVuZHN0cmVhbQplbmRv
                  YmoKOTYgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9OYW1lIC9IZWx2Ci9C
                  YXNlRm9udCAvSGVsdmV0aWNhCi9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nCj4+CmVuZG9iago5
                  NyAwIG9iago8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTEKL05hbWUgL0hlQm8KL0Jhc2VG
                  b250IC9IZWx2ZXRpY2EtQm9sZAovRW5jb2RpbmcgMTMxIDAgUgo+PgplbmRvYmoKOTggMCBvYmoK
                  PDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9OYW1lIC9aYURiCi9CYXNlRm9udCAvWmFw
                  ZkRpbmdiYXRzCj4+CmVuZG9iago5OSAwIG9iago8PAovVHlwZSAvRm9udAovU3VidHlwZSAvQ0lE
                  Rm9udFR5cGUwCi9CYXNlRm9udCAvRFFIUk1YK1VuaXZlcnNhbFN0ZC1OZXdzd2l0aENvbW1QaQov
                  Q0lEU3lzdGVtSW5mbyA8PAovUmVnaXN0cnkgKEFkb2JlKQovT3JkZXJpbmcgKElkZW50aXR5KQov
                  U3VwcGxlbWVudCAwCj4+Ci9Gb250RGVzY3JpcHRvciAxMzIgMCBSCj4+CmVuZG9iagoxMDAgMCBv
                  YmoKPDwKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCAyMzAKPj4Kc3RyZWFtDQpIiVyQz2rD
                  MAzG734KHdtDcRNYTyGwdQxy2B+a9QEcW8kMi2wU55C3n+KGDiqwQf6+n/gsfW5eG/IJ9BcH22KC
                  3pNjnMLMFqHDwZMqSnDepq3Ltx1NVFrgdpkSjg31QVUV6IuIU+IFds8udLhX+pMdsqcBdtdzuwfd
                  zjH+4oiU4Ah1DQ57GfRu4ocZEXTGDo0T3aflIMy/43uJCGXui1sYGxxO0VhkQwOq6ihVQ/UmVSsk
                  96BvVNfbH8Or+1SIu3x6OWX39r5y8j24h7Izs+TJO8hB1gie8L6mGCIItR71J8AAqfJvsg0KZW5k
                  c3RyZWFtCmVuZG9iagoxMDEgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL0NJREZvbnRU
                  eXBlMAovQmFzZUZvbnQgL0lTV1ZFTitBZG9iZVBpU3RkCi9DSURTeXN0ZW1JbmZvIDw8Ci9SZWdp
                  c3RyeSAoQWRvYmUpCi9PcmRlcmluZyAoSWRlbnRpdHkpCi9TdXBwbGVtZW50IDAKPj4KL0ZvbnRE
                  ZXNjcmlwdG9yIDEzMyAwIFIKL1cgWzcwIFs4OTJdCl0KPj4KZW5kb2JqCjEwMiAwIG9iago8PAov
                  RmlsdGVyIC9GbGF0ZURlY29kZQovTGVuZ3RoIDIzMQo+PgpzdHJlYW0NCkiJXJDBasMwDIbvfgod
                  20NxG7qdQmBrKeTQbizbAzi2khka2SjOIW8/xQsdTGCD/P+f+C19qs81+QT6nYNtMEHnyTGOYWKL
                  0GLvSR0KcN6mtcu3HUxUWuBmHhMONXVBlSXoDxHHxDNsXlxocav0GztkTz1svk7NFnQzxXjHASnB
                  HqoKHHYy6GrizQwIOmO72onu07wT5s/xOUeEIveH3zA2OByjsciGelTlXqqC8iJVKST3T1+ptrPf
                  hhf38VncxdNrkd3r+8LJ9+ARyk7MkifvIAdZInjCx5piiCDUctSPAAMAqbpvsQ0KZW5kc3RyZWFt
                  CmVuZG9iagoxMDMgMCBvYmoKPDwKL1R5cGUgL0ZvbnREZXNjcmlwdG9yCi9Gb250TmFtZSAvVFRF
                  SkNSK0hlbHZldGljYU5ldWVMVFN0ZC1Sb21hbgovRm9udEZhbWlseSAoSGVsdmV0aWNhTmV1ZUxU
                  IFN0ZCkKL0ZvbnRTdHJldGNoIC9Ob3JtYWwKL0ZvbnRXZWlnaHQgNDAwCi9GbGFncyAzMgovRm9u
                  dEJCb3ggWy0xNjYgLTIxNCAxMDc2IDk1Ml0KL0FzY2VudCA5NTIKL0NhcEhlaWdodCA3MTQKL0Rl
                  c2NlbnQgLTIxNAovU3RlbVYgODQKL0l0YWxpY0FuZ2xlIDAKL1hIZWlnaHQgNTE3Ci9Gb250Rmls
                  ZTMgMTM0IDAgUgovQ2hhclNldCAoL3NwYWNlL3F1b3Rlc2luZ2xlL3BhcmVubGVmdC9wYXJlbnJp
                  Z2h0L2NvbW1hL2h5cGhlbi9wZXJpb2Qvc2xhc2gvemVyby9vbmUvdHdvL3RocmVlL2ZvdXIvZml2
                  ZS9zaXgvc2V2ZW4vZWlnaHQvbmluZS9jb2xvbi9zZW1pY29sb24vQS9CL0MvRC9FL0YvRy9IL0kv
                  Si9LL0wvTS9OL08vUC9SL1MvVC9VL1YvVy9YL1kvWi9hL2IvYy9kL2UvZi9nL2gvaS9qL2svbC9t
                  L24vby9wL3Evci9zL3QvdS92L3cveC95L3ovcXVvdGVyaWdodC9xdW90ZWRibGxlZnQvcXVvdGVk
                  YmxyaWdodC9lbWRhc2gpCj4+CmVuZG9iagoxMDQgMCBvYmoKPDwKL1R5cGUgL0ZvbnREZXNjcmlw
                  dG9yCi9Gb250TmFtZSAvSVNXVkVOK0hlbHZldGljYU5ldWVMVFN0ZC1CbGtDbgovRm9udEZhbWls
                  eSAoSGVsdmV0aWNhTmV1ZUxUIFN0ZCBCbGsgQ24pCi9Gb250U3RyZXRjaCAvQ29uZGVuc2VkCi9G
                  b250V2VpZ2h0IDkwMAovRmxhZ3MgMzIKL0ZvbnRCQm94IFstMTY1IC0yMzAgMTA5OSA5NzJdCi9B
                  c2NlbnQgOTcyCi9DYXBIZWlnaHQgNzE0Ci9EZXNjZW50IC0yMzAKL1N0ZW1WIDE4MAovSXRhbGlj
                  QW5nbGUgMAovWEhlaWdodCA1NDEKL0ZvbnRGaWxlMyAxMzUgMCBSCi9DaGFyU2V0ICgvaHlwaGVu
                  L3plcm8vZm91ci9maXZlL3NpeC9UKQo+PgplbmRvYmoKMTA1IDAgb2JqCjw8Ci9UeXBlIC9Gb250
                  RGVzY3JpcHRvcgovRm9udE5hbWUgL0RRSFJNWCtJVENGcmFua2xpbkdvdGhpY1N0ZC1EZW1pCi9G
                  b250RmFtaWx5IChJVEMgRnJhbmtsaW4gR290aGljIFN0ZCBCb29rKQovRm9udFN0cmV0Y2ggL05v
                  cm1hbAovRm9udFdlaWdodCA2MDAKL0ZsYWdzIDMyCi9Gb250QkJveCBbLTE5OSAtMjUwIDEwMTQg
                  OTM0XQovQXNjZW50IDkzNAovQ2FwSGVpZ2h0IDY4NgovRGVzY2VudCAtMjUwCi9TdGVtViAxNDgK
                  L0l0YWxpY0FuZ2xlIDAKL1hIZWlnaHQgNTA4Ci9Gb250RmlsZTMgMTM2IDAgUgovQ2hhclNldCAo
                  L3NwYWNlL2V4Y2xhbS9SL1QvYS9jL2UvZi9pL24vby9wL3Evci9zL3QvdS94KQo+PgplbmRvYmoK
                  MTA2IDAgb2JqCjw8Ci9UeXBlIC9Gb250RGVzY3JpcHRvcgovRm9udE5hbWUgL1RURUpDUitIZWx2
                  ZXRpY2FOZXVlTFRTdGQtQmQKL0ZvbnRGYW1pbHkgKEhlbHZldGljYU5ldWVMVCBTdGQpCi9Gb250
                  U3RyZXRjaCAvTm9ybWFsCi9Gb250V2VpZ2h0IDcwMAovRmxhZ3MgMzIKL0ZvbnRCQm94IFstMTY2
                  IC0yMTggMTA3OCA5NzVdCi9Bc2NlbnQgOTc1Ci9DYXBIZWlnaHQgNzE0Ci9EZXNjZW50IC0yMTgK
                  L1N0ZW1WIDE0NAovSXRhbGljQW5nbGUgMAovWEhlaWdodCA1MTcKL0ZvbnRGaWxlMyAxMzcgMCBS
                  Ci9DaGFyU2V0ICgvc3BhY2UvcXVvdGVzaW5nbGUvcGFyZW5sZWZ0L3BhcmVucmlnaHQvY29tbWEv
                  aHlwaGVuL3BlcmlvZC9zbGFzaC96ZXJvL29uZS90d28vdGhyZWUvZm91ci9maXZlL3NpeC9zZXZl
                  bi9laWdodC9uaW5lL2NvbG9uL0EvQy9EL0YvRy9IL0kvTC9NL04vUC9SL1MvVC9WL1cvWS9hL2Iv
                  Yy9kL2UvZi9nL2gvaS9qL2svbC9tL24vby9wL3Evci9zL3QvdS92L3cveC95L3F1b3RlcmlnaHQp
                  Cj4+CmVuZG9iagoxMDcgMCBvYmoKPDwKL1R5cGUgL0ZvbnREZXNjcmlwdG9yCi9Gb250TmFtZSAv
                  SVNXVkVOK0hlbHZldGljYU5ldWVMVFN0ZC1CZEl0Ci9Gb250RmFtaWx5IChIZWx2ZXRpY2FOZXVl
                  TFQgU3RkKQovRm9udFN0cmV0Y2ggL05vcm1hbAovRm9udFdlaWdodCA3MDAKL0ZsYWdzIDk2Ci9G
                  b250QkJveCBbLTE2NiAtMjE4IDExMjkgOTc1XQovQXNjZW50IDk3NQovQ2FwSGVpZ2h0IDcxNAov
                  RGVzY2VudCAtMjE4Ci9TdGVtViAxNDQKL0l0YWxpY0FuZ2xlIC0xMgovWEhlaWdodCA1MTcKL0Zv
                  bnRGaWxlMyAxMzggMCBSCi9DaGFyU2V0ICgvc3BhY2UvcGVyaW9kL3NsYXNoL3plcm8vZm91ci9m
                  aXZlL3NpeC9BL0MvSS9QL2EvZC9lL2YvZy9oL2kvbC9tL24vby9wL3Ivcy90L3Uvdi93KQo+Pgpl
                  bmRvYmoKMTA4IDAgb2JqCjw8Ci9UeXBlIC9Gb250RGVzY3JpcHRvcgovRm9udE5hbWUgL1RURUpD
                  UitIZWx2ZXRpY2FOZXVlTFRTdGQtSXQKL0ZvbnRGYW1pbHkgKEhlbHZldGljYU5ldWVMVCBTdGQp
                  Ci9Gb250U3RyZXRjaCAvTm9ybWFsCi9Gb250V2VpZ2h0IDQwMAovRmxhZ3MgOTYKL0ZvbnRCQm94
                  IFstMTY2IC0yMTQgMTEwNiA5NTddCi9Bc2NlbnQgOTU3Ci9DYXBIZWlnaHQgNzE0Ci9EZXNjZW50
                  IC0yMTQKL1N0ZW1WIDg0Ci9JdGFsaWNBbmdsZSAtMTIKL1hIZWlnaHQgNTE3Ci9Gb250RmlsZTMg
                  MTM5IDAgUgovQ2hhclNldCAoL3NwYWNlL3BlcmlvZC9zbGFzaC96ZXJvL2ZvdXIvZml2ZS9zaXgv
                  VC9XL1kvYS9iL2MvZC9lL2YvZy9oL2kvay9sL20vbi9vL3AvcS9yL3MvdC91L3Yvdy94L3kpCj4+
                  CmVuZG9iagoxMDkgMCBvYmoKPDwKL1R5cGUgL0ZvbnREZXNjcmlwdG9yCi9Gb250TmFtZSAvSVNX
                  VkVOK0hlbHZldGljYU5ldWVMVFN0ZC1CbGsKL0ZvbnRGYW1pbHkgKEhlbHZldGljYU5ldWVMVCBT
                  dGQgQmxrKQovRm9udFN0cmV0Y2ggL05vcm1hbAovRm9udFdlaWdodCA5MDAKL0ZsYWdzIDMyCi9G
                  b250QkJveCBbLTE2NSAtMjMyIDExMDEgOTUzXQovQXNjZW50IDk1MwovQ2FwSGVpZ2h0IDcxNAov
                  RGVzY2VudCAtMjMyCi9TdGVtViAyMDAKL0l0YWxpY0FuZ2xlIDAKL1hIZWlnaHQgNTE5Ci9Gb250
                  RmlsZTMgMTQwIDAgUgovQ2hhclNldCAoL0EvQy9JL04vTy9UL1UpCj4+CmVuZG9iagoxMTAgMCBv
                  YmoKPDwKL0ZvbnQgMTQxIDAgUgo+PgplbmRvYmoKMTExIDAgb2JqCjw8Ci9Gb250IDE0MiAwIFIK
                  Pj4KZW5kb2JqCjExMiAwIG9iago8PAovRm9udCAxNDMgMCBSCj4+CmVuZG9iagoxMTMgMCBvYmoK
                  PDwKL0ZvbnQgMTQ0IDAgUgo+PgplbmRvYmoKMTE0IDAgb2JqCjw8Ci9Gb250IDE0NSAwIFIKPj4K
                  ZW5kb2JqCjExNSAwIG9iago8PAovRm9udCAxNDYgMCBSCj4+CmVuZG9iagoxMTYgMCBvYmoKPDwK
                  L0ZvbnQgMTQ3IDAgUgo+PgplbmRvYmoKMTE3IDAgb2JqCjw8Ci9Gb250IDE0OCAwIFIKPj4KZW5k
                  b2JqCjExOCAwIG9iago8PAovRm9udCAxNDkgMCBSCj4+CmVuZG9iagoxMTkgMCBvYmoKPDwKL0Zv
                  bnQgMTUwIDAgUgo+PgplbmRvYmoKMTIwIDAgb2JqCjw8Ci9Gb250IDE1MSAwIFIKPj4KZW5kb2Jq
                  CjEyMSAwIG9iago8PAovRm9udCAxNTIgMCBSCj4+CmVuZG9iagoxMjIgMCBvYmoKPDwKL0ZvbnQg
                  MTUzIDAgUgo+PgplbmRvYmoKMTIzIDAgb2JqCjw8Ci9Gb250IDE1NCAwIFIKPj4KZW5kb2JqCjEy
                  NCAwIG9iago8PAovRm9udCAxNTUgMCBSCj4+CmVuZG9iagoxMjUgMCBvYmoKPDwKL0ZvbnQgMTU2
                  IDAgUgo+PgplbmRvYmoKMTI2IDAgb2JqCjw8Ci9Gb250IDE1NyAwIFIKPj4KZW5kb2JqCjEyNyAw
                  IG9iago8PAovRm9udCAxNTggMCBSCj4+CmVuZG9iagoxMjggMCBvYmoKPDwKL0ZvbnQgMTU5IDAg
                  Ugo+PgplbmRvYmoKMTI5IDAgb2JqCjw8Ci9Gb250IDE2MCAwIFIKPj4KZW5kb2JqCjEzMCAwIG9i
                  ago8PAovRm9udCAxNjEgMCBSCj4+CmVuZG9iagoxMzEgMCBvYmoKPDwKL1R5cGUgL0VuY29kaW5n
                  Ci9EaWZmZXJlbmNlcyBbMjQgL2JyZXZlIC9jYXJvbiAvY2lyY3VtZmxleCAvZG90YWNjZW50IC9o
                  dW5nYXJ1bWxhdXQgL29nb25layAvcmluZyAvdGlsZGUgMzkKL3F1b3Rlc2luZ2xlIDk2IC9ncmF2
                  ZSAxMjggL2J1bGxldCAvZGFnZ2VyIC9kYWdnZXJkYmwgL2VsbGlwc2lzIC9lbWRhc2ggL2VuZGFz
                  aAovZmxvcmluIC9mcmFjdGlvbiAvZ3VpbHNpbmdsbGVmdCAvZ3VpbHNpbmdscmlnaHQgL21pbnVz
                  IC9wZXJ0aG91c2FuZCAvcXVvdGVkYmxiYXNlIC9xdW90ZWRibGxlZnQgL3F1b3RlZGJscmlnaHQg
                  L3F1b3RlbGVmdAovcXVvdGVyaWdodCAvcXVvdGVzaW5nbGJhc2UgL3RyYWRlbWFyayAvZmkgL2Zs
                  IC9Mc2xhc2ggL09FIC9TY2Fyb24gL1lkaWVyZXNpcyAvWmNhcm9uCi9kb3RsZXNzaSAvbHNsYXNo
                  IC9vZSAvc2Nhcm9uIC96Y2Fyb24gMTYwIC9FdXJvIDE2NCAvY3VycmVuY3kgMTY2Ci9icm9rZW5i
                  YXIgMTY4IC9kaWVyZXNpcyAvY29weXJpZ2h0IC9vcmRmZW1pbmluZSAxNzIgL2xvZ2ljYWxub3Qg
                  Ly5ub3RkZWYgL3JlZ2lzdGVyZWQgL21hY3JvbgovZGVncmVlIC9wbHVzbWludXMgL3R3b3N1cGVy
                  aW9yIC90aHJlZXN1cGVyaW9yIC9hY3V0ZSAvbXUgMTgzIC9wZXJpb2RjZW50ZXJlZCAvY2VkaWxs
                  YSAvb25lc3VwZXJpb3IKL29yZG1hc2N1bGluZSAxODggL29uZXF1YXJ0ZXIgL29uZWhhbGYgL3Ro
                  cmVlcXVhcnRlcnMgMTkyIC9BZ3JhdmUgL0FhY3V0ZSAvQWNpcmN1bWZsZXggL0F0aWxkZQovQWRp
                  ZXJlc2lzIC9BcmluZyAvQUUgL0NjZWRpbGxhIC9FZ3JhdmUgL0VhY3V0ZSAvRWNpcmN1bWZsZXgg
                  L0VkaWVyZXNpcyAvSWdyYXZlIC9JYWN1dGUKL0ljaXJjdW1mbGV4IC9JZGllcmVzaXMgL0V0aCAv
                  TnRpbGRlIC9PZ3JhdmUgL09hY3V0ZSAvT2NpcmN1bWZsZXggL090aWxkZSAvT2RpZXJlc2lzIC9t
                  dWx0aXBseQovT3NsYXNoIC9VZ3JhdmUgL1VhY3V0ZSAvVWNpcmN1bWZsZXggL1VkaWVyZXNpcyAv
                  WWFjdXRlIC9UaG9ybiAvZ2VybWFuZGJscyAvYWdyYXZlIC9hYWN1dGUKL2FjaXJjdW1mbGV4IC9h
                  dGlsZGUgL2FkaWVyZXNpcyAvYXJpbmcgL2FlIC9jY2VkaWxsYSAvZWdyYXZlIC9lYWN1dGUgL2Vj
                  aXJjdW1mbGV4IC9lZGllcmVzaXMKL2lncmF2ZSAvaWFjdXRlIC9pY2lyY3VtZmxleCAvaWRpZXJl
                  c2lzIC9ldGggL250aWxkZSAvb2dyYXZlIC9vYWN1dGUgL29jaXJjdW1mbGV4IC9vdGlsZGUKL29k
                  aWVyZXNpcyAvZGl2aWRlIC9vc2xhc2ggL3VncmF2ZSAvdWFjdXRlIC91Y2lyY3VtZmxleCAvdWRp
                  ZXJlc2lzIC95YWN1dGUgL3Rob3JuIC95ZGllcmVzaXNdCj4+CmVuZG9iagoxMzIgMCBvYmoKPDwK
                  L1R5cGUgL0ZvbnREZXNjcmlwdG9yCi9Gb250TmFtZSAvRFFIUk1YK1VuaXZlcnNhbFN0ZC1OZXdz
                  d2l0aENvbW1QaQovRm9udEZhbWlseSAoVW5pdmVyc2FsIFN0ZCBOZXdzIHcgQ29tbSBQaSkKL0Zv
                  bnRTdHJldGNoIC9Ob3JtYWwKL0ZvbnRXZWlnaHQgNDAwCi9GbGFncyA0Ci9Gb250QkJveCBbLTcg
                  LTIyNyA5ODkgNzY0XQovQXNjZW50IDc2NAovQ2FwSGVpZ2h0IDcwOAovRGVzY2VudCAtMjI3Ci9T
                  dGVtViA2MTIKL0l0YWxpY0FuZ2xlIDAKL1hIZWlnaHQgMzMwCi9Gb250RmlsZTMgMTYyIDAgUgo+
                  PgplbmRvYmoKMTMzIDAgb2JqCjw8Ci9UeXBlIC9Gb250RGVzY3JpcHRvcgovRm9udE5hbWUgL0lT
                  V1ZFTitBZG9iZVBpU3RkCi9Gb250RmFtaWx5IChBZG9iZSBQaSBTdGQpCi9Gb250U3RyZXRjaCAv
                  Tm9ybWFsCi9Gb250V2VpZ2h0IDQwMAovRmxhZ3MgNAovRm9udEJCb3ggWzAgLTE5NiAxMjc2IDgy
                  Nl0KL0FzY2VudCA4MjYKL0NhcEhlaWdodCA3MjUKL0Rlc2NlbnQgLTE5NgovU3RlbVYgNzUKL0l0
                  YWxpY0FuZ2xlIDAKL1hIZWlnaHQgNTAwCi9Gb250RmlsZTMgMTYzIDAgUgo+PgplbmRvYmoKMTM0
                  IDAgb2JqCjw8Ci9TdWJ0eXBlIC9UeXBlMUMKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA0
                  Mzk4Cj4+CnN0cmVhbQ0KSIlcVHtUE2cWnyFkEhDCIw5qgsksQpWnyFNQKRARijwsUAXrIpEEiYQE
                  Ex5CfVJXwUBb9ZxdPa1Wt6serXZVSrWu6EJXUbsURZsWBzVoUz0pPtal50682T07we1223++x3zf
                  787v9/vuvSTh6UGQJMmUlGTlqooic7T6Rm29rlJdoG3Q5pUU12uii4y1aoP7jpKTk9xUTy7Yh8ZU
                  XPPiyos8ITz247wCjgRPXh1IePCRCCA9Vca6ZpNudXU9Mydl7twofkyJnRjjo5i42Ng4ZmKKz9AY
                  V2mZ4mZzvbbWzLxmqDSa6owmdb1WE8Nk6PVMkTuEmSnSmrWmRvfH/3FjdGZGzZSY1BptrdpUwxir
                  +DOdRqtfpTWt1pqYhaaGyppatbmyWmfQGpiMbEa7rlLfYNY1avXNjF5XqTWYtRqmvtpkbFhdzeTp
                  DMb65jotv1hlUpuamezaVTlRjNqgYWrVzQxP0qRdreNpmniQzsBUak31an5e02DSmTW6ynqd0WCO
                  mb2ouMQdJIHRaKsI3gmSIMQehK8fEeJHxIuJzGlENUk0EUQ7QeS5nconCoi1xFFilLc2iJxFZpAd
                  5HHyhYfBY78HJ6gW7PWUebZ5HvNkhZOFW4RWSkolU8uoc9QoNS4KFS0V6UXHRPfFiWKz+LpXlleF
                  116vfu8p3oXeLd4fTpo+ad2kCz7TfEw+n/jO8l3pu8H3U9+Hvi8kRRKL5IZfpN92v0/9p/ln+7/t
                  f9IfApIDtgQcDugJ+Hfgq4FLEyw93FgPyY+hPQKLJ9fmXOJqo+AdvERjGuwWwiMKGfwrDe6Na5fI
                  RZVPrCEN+T3FXaTdK3TvJBJuRc8YCMi7IBDc5Z7Sl6nfbiwtV5SJvj0+eFsJAhSIJDiCWY0vEpvI
                  c3YBHMTldBREV8FMmC+DpJMQ7oAIRS4VhsEluABjZai6gjN+wAjFzziQ2AV9PO4fENwHCyBWBqoC
                  mBE5gXNg9EmcifNlmFSF4VFunOUnPkGXqc6a9WXl68U8n4PH+62yZxN8lkMrS/ZAt6AHWmnoZrGb
                  +j8QCNy0KQnuerfRubmJbOaEguYW+hYF552bhZmURL/Jyg1ayW47nLULuuEZjbF7sQJMYNoLFRAL
                  czZABZrQtAErcI7C3kGPd0AOhEFYB+aE/GYH5mAYhu2AnB8VEv2BRu69QRI+sgmAc5bRuRSzLn5t
                  hDwb8lzv2UQSvcXKfWElz9jgCO8dzZXTtrbu75/IrVdL08ILVqJPhnJmflLhBpwv5iqtLoL64MGj
                  s9/1ih/03bsGATKYGn4T/TEiicHQXQo3cTg0CC3WwKO2LBvssRfapc/BAKN05/v7Oj6Q3/tqRVzi
                  wtK5EaVfPmxTJlH4SpsjCULlMA0EX0OITT2YuF/ZKZKO9f7pTO9VGUyJuYx+GKKKRvk2hY2629E1
                  9Eh+s7cyIy1Po9q0ydKxUelWCKlWEh6yAi6ZV5hN4TcutTAFvsRUFlJ/sEaKcCgINsNTYSc+nTAX
                  7lhhtpX8xAYX7QJujTOfxufUay7PW9uFXcfPHu6VO/6eE43CRSWpSUv6bm1zE538ztN08JNDyl0Q
                  gw8khY5g4JtL36rWK9s7T0GFEE6/jDxkhUXWwFM2OGPLskvH4TQXQI99nhmfXJo5O+aNGw++uzjk
                  UEo50MFMGkRbMgfQS47lSzAfl2H4CSyBKiWPyr4E8ucwJfUJBqcVGnMr+Z8IgXz3j5AAYXIp99UZ
                  9eLdE8q5f7EkhDgE3E5ehGvlPE5MYTjGoQiNb+FWsYPaw2eNGPbADAgRv3wea2sj7LQGdtlz7bDd
                  nm+XDkMQrKDvDPTeYwdeT5tfuCQpPu+iTSHtzoURenHXkstmhfTz+cby3GQZho0vhGCY8s/bMP3B
                  qqtJhxXSc5cOdV26JrMXfo+zeQySsxajl1JqtbfRQ1+cGrzeo12oKlPnZBX/efhlfixymxR4wp5u
                  g89GpeNcNKenk4tVcSmv3xy+f2rkmeNCeoJCOoYu7KVR8ntbAUySQ/rXMB3a4QAKhnAq7xBOj4zG
                  6ciwERB6/dqp/o+Vne1CXLytNHaGXDqWXXz6+u+U7oqDv/y66kDARdDIr0BA/erGL4r5RP8Oq9hd
                  zb8AXOGTrYaF0VFLU+BWZ6T0261BjykWaoTQRw1jjXCcwo+d5cIQSvqoJ5HupGASjgpxGyV5bGHB
                  wm5thN1s4LADHI5ch/Q2ZABLQy3FWtfGLFhWlqLEVipqHg2PKQixPh1XSs89eHMgfp+Cr4jzA4e7
                  /vaN7EbVhRVHFIcq5lry5PgHysFfLqLu3NgwSykdSV+pQUKBRZQE5C0sZ2PJzxzcGw6BM5nbTkNU
                  A/qxGC7HOvTm22AlaoDAuXx25PAeELBonzKKQu9WVTwGyPFVFf/KyRB+ExhIezJS+sqHSgl4WVju
                  AksOOzg+4YaDoJ2C1nGQw9vQgn7ggXVKbJ9glECB6loo377fR1VzrhLjKMlHE/KhyQ3nsdxW1hUG
                  Fk7EukTQxIWwri2UZCPvLfvzHQewMMLiCH/uzbp0vKr0FlbdCOdZOMIG8tIMNul56XpnQFA/54MD
                  82AdJT2PQTvjQ3GmHOMTeQXhEH0TIiDjx/vLkdivdFAwrw79b2CsHBuR4tukBgtAipmgu2c/Zu3j
                  Ncpfcuhvcsv0+S8NPjzrcJZHYb/LB/qj+MY9cqDRWd5E3nEI7gS5TyhJdgvrVDaRBx3QzFdjvrOc
                  jnLtp+bXlSXENFy+qzgatVKEMmvGf/iu1qAoriwsGfs2VnBYp+lxl3F7dB2IDx4RWETxBQTkocRX
                  EUVE8ZGopdE1WUC0AmVMFAiKrrKCBnxGV7cCiFlx4ytRtwhigKgDOBpHZRApfCwazx1PZ93TM+RH
                  fsTqqem63X3uveec7zvfuVTows4+7Fb0NvcMvZ5uIaBQGkrwZwG8GF7hE+AbOCGgN8P/IReAB2iV
                  2ubU91rwlTZV79TTulBVCCwok3eAl8Hm4IcdUrbN6OAdBL0P1A7hJt14h1Ckdjic6WhkUi1mqt34
                  V94t0Ij8LQQTskzeDEMI0a0O/geHlNZqdDBpBW8uEnk/tVl46kwfxaQ9aku+qHrxFsGf7KLcAKvu
                  4hu6dNXglDEFRIyHLLpEglQKpCDdMYsueo4pSpcRLNcoGdEQfQ1HoAUt0XSLxuhoemhRXMyqtUGZ
                  ln2ihysstfA+MaGg1Qa/J6WZcAP/pOAVF8SS2fPT88LDU9MGf2bGZKIXWV+yQZHL+mWXDqK4LEMR
                  5Int1e/EDp34YYgZT6my3AWXYD27v2da7E5zaez6CV+87/kTW3R6a9snzRubc+oidnsWiXcOVP9w
                  xxdYxDX0VbCdSO9y1lDlmNwFDgcR95rUytt4kQyjPkFdE/qb0IhyEonuQBCXA1tjltrpH1jOcF9L
                  wOo/Y583zoGXMooR0kzjqYYbYXgdBMBgZDXIDilSK4qHkO2659tpO2J72Djfr0TR2ODUU3HfSM5s
                  JJDpqaVQGyNhg5veGtiud3EfovcgF9jSGBoS4tALDTFNYFB4Gj0ScQZ4hMMUiOvpgniFWNgVpcHO
                  UMBfSKu5kwyHMakKF6ovhXyGC/hLwcKg+Od0AfrQMvcLwWtYJu8GRtj4+wtfafYLf20tJu1CPwIX
                  mYQQuCwMw9yjwTQawSCJJnjEpKUwhmBGQBytdtNYf8AN+QLu1BUYnzNIpdI7C78WgDRrK9e5FHoI
                  w2Q8hnFwTEDGIBcfCxoyNDs4Sr760vrYh+ES7MTl0CmgwOCIOlbAWkKLqJUZrUTt4w26fUbeYFPn
                  Mv42PyvY1PJIHiSq09Szgn4OdVcmq6HSQR3KJrvUyX0gXk6bF4t935lbcaH+64oLO5WLOy9/9s8D
                  nqDgXHlT3scFG02rCz+vMUO5CP399wa5UjYsHX0+NdtZy9bz+66avqnLjUqK3Ba41ix1huaErcF+
                  vpbWjAdX6w9++29l5uEPTn5RXryjTNFvy7VOqaf1YWqW4Xs7NDqk0/w92C37Lx6Gnthv3oP/dp98
                  CAxeOxM4QpHWqxbcLdupsjUVicnVLVnnTRDSBt7gD/7jwIChbyWsmbHKnA8V4azXMY9K6mkK4akM
                  3rmB32rtRUQk6jEYg27jaxACxhtWMJSbw9j4vNS5Y0zYZ8GDrmfV3eDdXLskcZf5VxusdEAjVVm+
                  n8IejuX5rG7JxIoUE4aMp7bMH/1voAFCf7hy8OJhcxGT1sfaSahUC2yXnxx/RG1Hv1OBfiPmD6dS
                  +9qcB1T0aIMwwQr+2h7hDG1zDETI8etTl8WaUJhtc2wx84EMBhTPhImYZMIhfmQZTPpR3IYMxpjA
                  89Z3wPabVW+wyDe2nf++3XS7LnHsVrMeT1IrlGwFo/XjLMMjyukjo50nP7a+cZXVHth1ouzz/E/L
                  KGfXRamzeN2HW9aZgubMH22eEDbprqj/CN9thEFWLtdP6QXFVzaS5oNNMvZd9rTz0cl28HheE/jm
                  iAwL9jVLXbCBz5IjmXQjqkC8uGL6kUQTTn4bR1KIh7RifwhqaDxaT+FYxtBzfiTqFMk6M2rfd5u0
                  JlIohr6Lu00wuvUOjHP3b6lanD0u26HErrtstEMt6zzT1NNQs3CKgj126KT2I6MNB02N/svUVUo+
                  HKI0qx5kV5oFwlOPJruuiTwtDWd2mCOHD7VrbzHV6vT55TUE8VI5XL3CUvLWvpubV1iUq0SLm8vK
                  CkpN1tM1983OvX1dZpPdc67M6p0TZjPbdYjF/VopwNVwCzJgmsZJzMNMgUeGi659aMR0GzjTaWtQ
                  rrmkBZI8ytV+PoOk05pfVna8qvNJy9658Qrep6FoO3/u1o97ZidpQ+4tPo/7lyUhefmspUp95vSD
                  U0xvTV85fYk5n0k3WyLF3kjlZhlcgZJaXxGpqOkrk95TyLD2Fhl+9AslwOrQVUKJjCPv4usQARF3
                  SXFHQkAYdWgRGBGGr2OA4jCC4Wpze/vVWDTggJjYkJCYZhhAnKVjIiTTTJpnbtLe/G3SqhY1Q7ZD
                  RRF7BWGZ1N1MMfzVzG623ZS6+X4taeR7XL74CsbhXjtTLXz2b7ANt1PUkhwUtTq71FRHIcthMPBM
                  G/xRcYjBW2YsXBjhSfuoAg8KVJi7KB61Rzkgxx7vII1rPwqjZfQpfpgGnqZnINaA9+PRh8PLzVLr
                  uPJRO+t8z/2n9OyFS5kJ2+hoBoaNb1YiM42yLBg6zL7qdjZpoD37dl6Cb2JMbkpswoGWzbSjg3Ta
                  1Fk9ugmXic4wKinBoZPu4S0W8OXae0qDdTGhdPtxM1zvsVpE7bCQoYGyN+m1PE+LCtayoDlxlsRF
                  J+oV6AnHThF1X42HQdcv/eNypUJVKHuMjdwpvJPosi3lK0jpcsgyRFO6IWqMJlR+PEYIYDBLLRU6
                  CLUTCx9A808kcnucS6Uq51r6OpToq0Zq3/bhkUIQG+oe9KNBIIOxZHifSU1PeTAJ3DM1WHAwfRz1
                  IKcyD2fChizDDr5Zqt1h7GFggeVgweV0fGOYBscgDjYIfgxlTMDfQYKAHkxqpUYpX9CH4SJreqZz
                  fpbhbzxbqnK5Sz2Dn3vlkbTySAYZasnSUGHluuycpaacnO3F68zS6vGiVLWxvCK/wtTyZdWT42b9
                  YHeY9/F4TQbjrfgjgybuI1xS/SeRTGKD2l/Q8zQoIZefNUoLpL3/15cfMaLnv09zB7ZtTYESzG/2
                  Mp79znwZ2C36/ufHadEAtp0z9u2Q28tul+VuIw/qCrH/9v7OjE0cbMDeN8BOFcyA3h/vRY+xxdZF
                  xMkBO1Zrzt+SB3XEgAb8ZsYmzvfDENjUYfwu9rOCGdhSahL9WXH7bwUbX9Wcn3FzfmdNZ/u+dNL7
                  SX9eTme/xvWA+/sqkR/3RQECDADc50vjDQplbmRzdHJlYW0KZW5kb2JqCjEzNSAwIG9iago8PAov
                  U3VidHlwZSAvVHlwZTFDCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlCi9MZW5ndGggODUzCj4+CnN0cmVh
                  bQ0KSIk8UF9sU1UcvrddbwvMIrtcsxRyex50L1SoDRrXLKQb4IaOatiExIfp3b1n7V3be5tzbwtt
                  dZlPoqCuq3EuqxVkbIlGH5qQ8MAiakg0LvhEY4xRg3EINgEjye+O0wfP5cGX8/u+37/vOz+e6/Jw
                  PM+jI2Mnjh9O7hnB2SK2dVVJ4gIeHR+ztSeHspmDhtsjO7t4R+xydndLtJ+WH/z24DUf/LQd/txx
                  Y/NmD+fh+Y1/D5r5EtFTaRs91d8fjaBYNBpDg5o5idFYybJxzkJHDNUkeZMoNtb2osFsFh1zByx0
                  DFuYFN3k/y6QbiEF2UTRcE4hGWROsZqu4ewkJilM0CFSUDM5xVLTuoENNDgcQfiUmi1YehFnSyir
                  q9iwsIbsNDELqTQa1Q3TLuUxA5NEISU0nJsciSDF0FBOKSHmkuCUznwSNqQbSMXEVlicLhDd0nTV
                  1k3D2rvvubFxd8l+pOEpjuO5IMft4DjJwz3NcX52T+4op3Kfc7f4Ef4H/u/lM2tOe41n7+Nr3jNd
                  zunNlzqnBXiPXpPoAaj54C+BInpVApd05v0dYeIhhgOUccH5SnIRdVkQgQ4RfhXWvaugS7AOEbou
                  BN+AgDMDAb4BSfBA0tuAuxJtthIQh3irBU1oJlo0TuOJBG3KrGeLdG9ppdlcyvfJdMbfV8lrWmXl
                  nhw8V4ReCDmJk/wSINgKA16IQkOCAMz63qWzAv2QhiSYo70wBL3fQ+iok6ATArU7cZ/rARag5zqg
                  ngYM0f3QxxYkxftiexm+lsT7MCBc+uTjz75omAN0d7mSypxqXJcv0CHbT3f+mIBn4dC3t2AU9oze
                  oIIsto+/ejKjh2uwzQfnAXX2PfwkvA6ha/A8DUCAiYz/w3QSTOOO2HYqzqfS7XfUP+gLu2hqmj5K
                  jfCAn1Z+PQzPyOLPEPm9BeMQH77S9/IrBb0Sfht8wuUL51dk8Zf6wltv1sJi+4PZ98tnrcAT9Dtp
                  o778pSzeaX5EotEySbOiNrO8EQ7OnCs6VyHGAzuiF+THIMkoglhnisYAMYuLmxOL9MVFCC8KcHH+
                  5nznm5q/XN+cqNPphQDL3J3v3F7YAqGtMLINPNW5uVq1Wu3uBrRadcEjZ7uDTn2nY0r/CTAAkNOj
                  nw0KZW5kc3RyZWFtCmVuZG9iagoxMzYgMCBvYmoKPDwKL1N1YnR5cGUgL1R5cGUxQwovRmlsdGVy
                  IC9GbGF0ZURlY29kZQovTGVuZ3RoIDE2NzkKPj4Kc3RyZWFtDQpIiTRTCVAUZxbuZqa7geBEpm2y
                  mWa7O1bcSUBEOTYJSYmChVfwQsUEJDXAiANzMwyHgM4qAZwBBy0CQm2CznBJNJiAEYRoQvAojUUq
                  otldzWHKFGFJNhVNXpt/srX/uEn9Va/+d/zvfe+97ycJZQhBkuRTqzav2ZK5I3bt1vQMu85cYjSY
                  V1scuw0FWY7CuFV6kyEYJMo8KUcr5T9HcCgHNf968NcUCroeh7HIj6PpL9SEgiR7B86mW6yVdkPR
                  boe07IXn/7oYyxcSHslkabGUsHRpwspCS75eyqosdehNpdJac4HFbrXYdQ594RJppdEobQk+LpW2
                  6Ev1dmfQiEFJf6CS/g9LMpRKOsmuLzLgLHZ9oeSw6wr1Jp29RLLswjmx0axzGCxmnVHaWmnV79IV
                  6KX03wth85JgT/EZWUGflCQV6ncRBIl7JBIJIpkg0ghiFUFkkMQ6gtjIEK8QBIvHRGQSG4lSYpr4
                  hawlr4SIISUhLSF3FLGKN5XzlauVp5T/pTZTnhn3uDw3TmL59LjCrZQbHm4KNNDQjCY5tByOUDBD
                  Iwld4CCoBA4zATrv0R2WI6zT8nkueENBTSWpktwQL/eWk3dgmQL2R0E8WobimQHQcTP0uFxGoW20
                  Clq6nOCDcEgHFXkNksAJKQooAx8HYfQD5KMgg0YsTFDTPWc/+4fmuvF61qBwcnumZwOPhn9LgyRa
                  vqz8ku4fOVTVIx6v6TRbNaaaEtseocpc1FzMJ9KqLqc8CtEkbIQkhdz5MI0LNKNoSAuMQhJ2rKBV
                  rplMJ9RP//S9uh+WQiLEsNVyU9R+f6O/WwMu5rJ3IntYOJm/ui2bl1BEEXq8WgSxlhof8o0e8x+o
                  ahc6KhptZZq9TGZdSv3mstA19twdKzTsWOynOfduvd93aVhgqw/amqwtttAaKOXYsSKPyVki2Kqs
                  e0x8fmnPe9M/tU+0iCoXzINzoCR74SV8JIXsgVscPOaKu4XCeZQUhyi0FMV8i0hYAvNnb4K6TUTS
                  ESr3dVt+Nv/cwW+uXGv91+0LvrydONUD0Nz9+d+kHxJgE0Qr5MNQyXmm9n2mmwyd1KUNrOJRQgKa
                  h2JQ7A9PwWJYcRFi/CKKbqVy84rz1hvGLgkeP3XwLjfp9Z+7xl/9+46tzaJKwqOMBPorCDtQrp4C
                  Lfs5GOVI7h7Qy96g2Zkz7hOjx99wNxwTsINi2JkWY75nL79ts3OnUbTrm7a/ptmE6IuBSNDSKqTF
                  ybzln8BC8iPQKiBP9nJIG/Bi38OXlUiLFgajcMyiXyQIU4+DFv6CK54dj8K3bnqgqa+jTzje5uvo
                  5qcPpGaLqBvbrzMj7quW08KQKbcjh1+pM64ziY00+/nXSGRUru/h6zmyB09kOSQooEvu4FB8MmLQ
                  M0j7FQrHq4+ZBQYWQUwyhKNE0RPDnfTVFreJR/VNOQWaDfXa55/zwPzJSe/MPwUVinFC8n248V3c
                  ffUkLp0IS9jboIPTXL/7REeP4G/3dfbx04cWZmc3IEWqzdZ5rEas6m0+M6Bh5xBugfvtRfysvInJ
                  6xpxjvPwzAgIECmyt6/UXS75UJg05PSv5tcVmLOswRbmbjJ/lLz1o6tc3YfhJuF5zMGPYOeMDcZK
                  q+CsLa2082bbW937xJoT7rFTmo89D+58cnTtdqEhYOBAK9+k2dtDzQOHeoUXccq/2Wode8pCLxfl
                  v5XBo5gs9Cf0BHpiFGkg7qOBruE+UbXm0Y76y9UXcalBduoiXlJwRbCduXf0W1DWCewgaBl703qv
                  Kat625MY6NQso5px/Qfufkf2w5P4V0cp5CyZ42Z3rzut5RGByDwUuf697EtOcWDfl9Wn6kN7Gvrr
                  DBr9Bpcld2vneZeA2EoK0T0/FP3MT0y0DoyIZ074Ry9AJZpExKxmcORI/7nT5TntgsrqgvBkp8xj
                  enyD8VlhTm7h8O9IpNECVy16lkpAYV8gB80OvuLeMGQQrG9P1A3zPe8cOtwngoJprKporOVffr3j
                  ugh5QGKC4LUTQMhPl6s/xD0KQbqxFXJVlOzFfOxm2LO2JrPLIZhqLRXFfHb9u0Mi3MCeG8yrDTm9
                  rwk7+97f9wE/df7tqz6xiWYrkhjMXxh1wt5ysk32KuT9QY6zdAoSUkCgUCoNi9Be9BLqpmABfR/S
                  H6B0ClJplArdlMrV+jCtFW1qpcHfEth5hPldbw8N6sX+MKDDQfsY0G9GRIC2PWKeJ0IlDy6QY7n/
                  CTAAPh5O5A0KZW5kc3RyZWFtCmVuZG9iagoxMzcgMCBvYmoKPDwKL1N1YnR5cGUgL1R5cGUxQwov
                  RmlsdGVyIC9GbGF0ZURlY29kZQovTGVuZ3RoIDM5MzIKPj4Kc3RyZWFtDQpIiWRUCVAUVxruZqbf
                  DAg9q0Mjy8h0iygkIs4wXhijAgrCcniQeKPDTCujHDrDra7GsiJIxlgb1zLrmdSKW8HbRaMLiqgR
                  FJdRPEq3jInG0trSjabW+Rv/qcq+xmOrdqur3t/v+P73ff/xWEYbxLAsG52fPzUrbebwaXJxpVzu
                  cthz5Qo5O39WuXNEqlM9IComVgnXKoNCBRyPpa8uv3Jw8MCghPTvHNT/1wFMEMv+8mta2Yoat2tp
                  UblkTR43LoGOyZa+0ZYgJVksSVKKs6xQlmbVeMrlEo+UWeooc68oc9vLZWeilFJcLM1UwR5ppuyR
                  3ZXq4js+kssj2aVyt90pl9jdy6WyJXTP5ZSLC2X3UtktTXFXOJaX2D2OIlepXCqlZCRIcrWjuMLj
                  qpSLa6Ril0Mu9chOqbzIXVaxtEjKdpWWldeskOlPodvurpEySgqnJUj2UqdUYq+RKEu3vNRFebop
                  yFUqOWR3uZ3aZRVul8fpcpS7yko9iSPTZ+WrTkZJTnkJw7D0Y/RBTBjPxDBMLMvEaZgRQYyVYWxB
                  zFiWGc8wqZFMEcNMokFncpk8xsMcZB6zelZkrWw2u4NtDxKCtgZ1aYZrtmuuaQu1f9c+5+K5VVwL
                  94BkkkryGWkkj3Thujm6U/r39Vn6Cv1Z/bNgZ/DpEDZkXsg3IT/2m91va79T/fyhCaGpoX8OfRgW
                  H7Yx7AE/lN/Itxu0Bouh3HDY4P+NDmMbWpWnrSwdY1s1DVqlrnd6oI7AZrwo4ET4goMnBCVsE0Cd
                  BP6gC5CCvn+YiHROlLOC+ofqjOeVC5DIdkOMplu5IFwl81YXzak1Z+q+39bZXfeTHkZgjI7H5zi6
                  8tXQKvYsPQfZvWWCDY2LMA/fi0JLKybdw0FmCCEpEOuCJEiKgpGHwHoTBpv/i3yhIrWYJTyEASch
                  D96LAstcSEqGaDOGkJs49CAmYVIUjixCawpKZr6B0uoAq6Yjood4FxUvtm/Qp+l+3H6t43EUJKKV
                  kvoEioBn2+Ccpg2KBDgHPJ4jfbhLFHcpAqzqQcLjvs8re9dVseuUaM26WgEIgabedRwSwtvWQLCy
                  HoLZvRADtZTiXngpYBOE2MAMEoQ8hCbYhyEPaTgpTRvuM0NMxI0GmAQE9A04KXUCHVCPhC7dNfO2
                  vZXKPD+IVSxsps6UQb3TBeTIasniivfqJZgSmAc0nLYG4JVllPsRGATFamBSlDThZuOD+x0n7Znm
                  TaPHLs6xY1hyfPomHKNXtlFh98mZnnvHfS16X8v5i/+OgmjU3sNwnGBBA47aYu4TAst+rq6EFRA8
                  YBeYMARM4KCWh3jjaeMdqIZrgu+Jd3Dm3EW/S5Y7b9eJaCI4uu7lCLCaIBoM30OcaDx1Z8GViTvN
                  Xp3xRNeuA99djYL+aPChFmMT43HIp2YwkZ5NR9uum86edk0XjXc/sK3N3dInHMbQUCZT5V1g0kBX
                  BL1+zBMITlSS0UjwQiCBwwho0UGwFrMJZMJGbvPr+MNuv59mQJHUiNFSFgImkh4YyEE4Obp//64z
                  ptvfzkiduiArJWfhic4NIsYQjPMCPxkGmWBwHfQDDcRGwcAP/WjOX7TaKZvrvfvBxkHzG/fb/RDt
                  pwkWYY16wx5lpwCGVdbrGGbC+ZNwNk3g1AuYQ4tp2L+AgyHttReXnBBPOnL355ky5pTnO8V6L3fn
                  80Yw/WJqOexYsFUcilbhxsHMzGxnVsYUe1eX70jHbbEv+V0QOeCY4g70hwTjD8qXqhg3RsIPxOjD
                  3+Ko0bhwFTr0kEC8kPcP2AFxEK6nLP1Q+8+aSqj2D/gSYpADgZKhhQMxNG8WWts97cd8V88VTJs6
                  e35GxqzTPWZjM929IqQfmtVdba7XGU8lV83Npt0zHAZm0MBHQOQNiHs4/8q43WoqT1/96vB5X1R3
                  HoRiqoolyGfhANF4C4TfC52thy483Jm7NG/B8hkz537TYe4jFO2H7W/6Yg2ImgMwTUDDjkdTIMwE
                  82/DbNoCU2dCDhbhsHjkcEj+zhlHFouLjneUXTJ1n/m6/Zjorec+3LgCTbGmeUuPn14vvgCrkOq6
                  evXysa7u681ZWelLcieJarvCgnet/qZlqfELaMVEoO37V1pbNlpbWVXsht48zYYIsJHzaoL3kHNI
                  zViCe3oLOBxN7uAUwUse4Z84zCH801qIVKohkj1KXffmKKUCJFdj5GO0mnAlRmAy5V4I1MJKSAMD
                  7ej0HSImkBFrP8ocbsLBH0MoLa7+bdQMvtP90ZQ/ivzTBuryY+rSRxlep259EdBBoPQlFeGAT1AE
                  PeaISJesGCmAloCldSTGYtKoWRYRJcLPoVr+Bjwkv/ah4q104Szt8LN08RlEBjYRHnSU+ohK+IpW
                  r4tWFBWgMLQYWoyrlWcRPysR2IbBkESMLfHrp+cP/R+uN78rnLBLhPcJjKlF8yMc9n9yfT2N19up
                  GkqmAyKhsapPT/NbPh3QjDQdvQU0A43YDI19j+iLvZW9BVXvWKu7VI8akLtvVxUvROJz5a66Azve
                  no9TyiBOxcQp9V4CaYF6DsKoVTZz3sBmiKOeVhJMCqzl6gl+oKzl6FTl9gYNnW/RbopuDbi5vsvj
                  Ah56/Izi4dBC+K+plK00ruqjqmrZDgmvtWyFZJpXH+1rPejTgcN0EW+p6eEF4MmNrlUWS9aqVBF5
                  wt+hPppACwvf+DjwNh5NtArv/mXZ5G3iFzPr03cX6Om87Phn9+u+/bSn4tbEPXqv7m7Twcv3o4AZ
                  /xOGmwPCmwsmk2tHS9LT5JKpIk4m/JZa+uz/h+9qj4rqPOKsy73LK1vCspHslXvNQjUUCibALo+V
                  E2PACBYPqKiJUoPVRBCIJimGhw/SoIs8lJDKM0cllIf4qqJo1IIWDUlIYnoUKk8TEbpKjQo7l8z2
                  nM4HmJ72j/7BOczeme/ONzO/329uAajdasAP3cEPaoklujUjNbBLi6+Y4fn58KIACY9GYSYYMKhp
                  ZZmk6cZF5zaVXNZdaz948ebn7wXvE4k8IBQ9v0If1KIYiXNQZ00aTxfH0q3bI3QvG7OWi5oR44IT
                  FkmdTIx0iyYNMugqkEF3ITOZZqyPOCmZV+dMFfmDCZ1ywm0iUYsGEgRbPutDoJzPkQnZ/0rkIJLa
                  2TrlW/RThPKnBczXn0dH207mq5ZJTOfy6GrLZCYnZ3IMw3EsNJAHZ7Kpc0/RU5hqFTsISlhOJay+
                  f+KhWl7C4UKe1tNjGA7HOIzkodL2KqeOzLGE9QJY3I4QESUSBlpkF1ij3bw7EJVrk8pa/3Kq4myp
                  ePajiwU1Bx0wdkx7Zd+xQ23Cxebc2LiwoqDtUuCOwHR01D3399dGv+isOt8iarYVZBZn7styAG9+
                  +8G88+d1cEgFruh62JuE3Hk9PvuBqE7OsfqPwIAVYjLc2ujNu6bQ10aqRqjrLFTFN37xbpfwCJT9
                  EA9xqOz3jol5J+EtyQxlJFDyL2xrtMEbTUbjxlu3vz9xa2DghClIpMtY6UziI5KhZvhBCx65aP8l
                  qgU0+aIzBmPAGM4gwp9luQme1RJ68ktyN7yxWHgx7c6Nrobhu1dPbI4rlf4rOVaWvGlqCKfsCBl6
                  LDPzl1KW1sYK6BdBQyJJmgvo1YW0cXW211xpEgt5MyRoDemhvw7cONg7eKRnZLgh3DiV38whmGFV
                  1LMUT8O7Wgj82ADP4ysCvjAbnTAAg35EezCC4yBx1ikJn+ZTcte+FS+Yfnt6aLc0ZH+qsPb6kPBt
                  44aFZZIav6QBDLMMWRWDdN7gM6CXw0YtPo38mcrKk9VV+eYqcVxV8M6Woq0COsQvnietN/gNqtTJ
                  uMoCDla4POJvJe7Tw04QNL2a+/JncrmWlhZNb5RZdW3TysOLBPxlBKpRh/pO2ncCOjpq2xqlwkX8
                  goI3V5iE1euqW7dL+ByPTiXg/PpDAXIbwHtQwtI72qD03hvdx673DNe/ZFywPipMYtQsGwn+MRkK
                  1vG1lDG1Ww81/FjTme7OT98wiNhC9ncqcN8wiL4Jv0mPe1PcA4eo32rbMxRdnvGAFLOdAtvZVcvp
                  Afmv1lJHHIGcMJpU7Nak09fktA2jtOaKSnOFAF5/vjguyadQb2tS/W7LH9J27CooyhVh20Tlz8GR
                  ky+A1IzJ2K9ZZlH85VZaF7I4IhpMhR4S5XgOTTwuwlhO1rDFneXF0PYkKTYeBOYKdtdRH7B3owcQ
                  PfXnPktzgflAK//jN9V1Q7ujlop4huzTqq8qOnt698dHiXiO7H+qQGe6hDMWrkhKTBU70uNqooVX
                  V2xO2CiZqTfXUaeaKubkC6ZrqWn5v8VcOlVMXtP9NxRUbMKngQLFlPlJ+KMWQ8bQjnZM4xjYQQiE
                  6sEOjWjQox2GsqW8v77/3v36kJDQtJBf+ab19xGG6csDTHQQG6O2aZz0ttEnCP2fX8ivOnr17Q4B
                  fLto3RJh7sswEw0xy7Yu38Sucb+T8oBym0kbkNIzIGl6Bxr6R+42GUJFzX1jarj//xz/BIZsSi8/
                  mdLFZtVfU2IPxxB2XmIzimvANcrS8c3hK01SIe6lrtrc5SXagaN9w3eOBIUZUuYH+Kf29dNH00dU
                  Pi9wopn2yJskIE3ZZPlyeE393eM3H1cdNO8pEzVl4KHS1Bfl7ijcJURFJkZvYZl/fo9VcHaOhVhT
                  cZqCYqiC9WDSoud+cEwEFwGcwOkszLoX1hDyiRT2SXjJJV3z+f1HLjVnLy9mCz5odnqdRE5AJfKb
                  0GNeX1rf+9LD965mr9OtXpmVtGzlpx35lGTLh4SWby2KYfYBs30iiI1qQLDfbWznvbsyvq9rLCiu
                  EUGp2pOdk58tvL7jwGcSlD62eNF05IC9z6hszPjPdMjHWdX0WMPrk9dFLN7aPChCC9nfqdD9pAF8
                  r3XUtR8Xi3jNtoVA10PXSTgo9sklSvkACyWUK3Cc6Y8Cxjn04SHSVs7RkqSGiCnf/RNnlBMXmO8c
                  3g8fkWsgPOJQ5IPxMRl+8JhDWppCWNhc/gd4QKo1jA84mMOrZ9NucO73YM5Q7JWPKvfaM12zIxqk
                  GeSAVHMZ1EEE5DHdewGFeSBMimcEmjk1Pj2Ne8WHcp1SPsQSILHk0MqSdQQrRzsnRNver0zKWvVa
                  3rPp+enFbxc6oKNqT329uV4YvXC0v1FSMxTftipvy55aK9ygVTKzaiKxCpPLYf5eHqpKH5baustV
                  0z8ecIDakgcltn8ccLQ6gd7Z+rGLC+grXJ4qcFFDo/uEh/bfAgwAEfHs3w0KZW5kc3RyZWFtCmVu
                  ZG9iagoxMzggMCBvYmoKPDwKL1N1YnR5cGUgL1R5cGUxQwovRmlsdGVyIC9GbGF0ZURlY29kZQov
                  TGVuZ3RoIDI0MTYKPj4Kc3RyZWFtDQpIiYxVa1gU5xWe2WUGUDMK62wpIzsTtCqKKKAYEEUQRRSR
                  sClRFCLsDrC67OruAoIQ1DbRVfCKDXgDFB8xGKHWKF5QFImiNdF4rTaxSSVSqm1imz1DDm3zLfo0
                  f/qjz+7zXeab7z3vec/7nKEpDxVF07SYqH87bXby+LmyuVB2mAxZyXKBnPSW3mGcEGdMdLhfCVQE
                  WhnuUT5EpYwYwmMUWn741w8GBp4OVbx92kcMKvGlVDT94j+zrCuLbabcPIcUGvnGG8FkjJw0MIYH
                  S2GTJoVJsUZrtizpi+0OOd8uJVoMVttKqy3LIRtDpFizWUp1X7ZLqbJdthW6H/6XlGSyS1mSw5Zl
                  lPOzbCskaw45Mxllc7Zsy5VtUrytwLAiP8tuyDNZZIsUmxAsyasN5gK7qVA2F0tmk0G22GWj5Miz
                  WQty86Qkk8XqKF4pk0W2LctWLCXkZ88NlrIsRik/q1giLG1yronwtJFLJotkkG2OLDIvL7CZ7EaT
                  wWGyWuwhE+fo33KDTJaMcg5F0eRHDVVRvIoKpKhRFDWOokIpKo6iZjPUAg9Kz1A6ojmVQM2jsqg1
                  VBfN0Sb6jspHJavKVVfUv1Qf93jNI8Wjg9EyccxS5gE7nrWzNz0Fz82eT72me+V7dT7b3KY8a6Pv
                  apWNfSn9G1nYgp08zoCdDPSwKGE7D+5N/w7PfjZzYA0zkOxZ5QLvXqF7x+ES8t8MIfS7oFe/q4Uw
                  9iiEMBjGcuFbC/vWFtFOJUDtLOGBZaGpby2DLMs9LANvZT140xsgED6CQPUG2MnjyC70hclQDhR8
                  AMsgNAYoDEM7UliD6ToItPDPfwuH4PU7jfrZwQY8hCOnF3V8quMe1hVCBAGMLKJzlXvq76GJhz1Q
                  z1SyqVjPgEOJ5FHH9of0T1iFPAN/YPMwggGBPQYRTA/bAN5MyEtKsN/lIqSUoYSR0t6XwveHscj1
                  +zMwnD1x+Ni+c8L9k9nTpyQlz0hY3HRzk4gBLI7b9pcEGCPANPBxQRxoJz4cFbe8ZKVZdFaehiAG
                  zr+CrnZBgIuuhgD4FUGHcbCKv3/uxsMbrYbpUYuTIxdktn2mU2LgPA8j3gv5BDkBzajBdHRi5C0c
                  AnNgAgEZQu5pox6jb0pKwdu5JATT3XgKBoNKuNCcl1YhcmAkWoQTLeYV0TP6UtWKqFzmK9lj2MKg
                  nsXPsZGHKLYbwhmoZQ8gmSaxOLgvk8EpLAd7S8BPWQ1+dAuEwr8hVN2XoeTwELcVfb7BSAHfwyDM
                  wDWYAd7oCUthIlD3YMl1EUPZmWVz504WkF3y1XMIuANTYcq99sxwkcPEusK+zCJS6C71Brc5YLw7
                  GnEHpBKqVcDBcuBoZT+JBkeUJzz4s5c6SmZFLDZEiziZxXX9HA+h7EWoYiCNhbGgfQphEDbyHI6q
                  EPE4yz0r6436I0Cv76+Jl5IgIAH8NK3wN0jn9WssyeFCds7+478/X31xu3hiy8mK5jovnAYevObE
                  harWg+eF5ovlixKTdqD/GhGHls5cMNZ/1qX5wOg0rZ1X604dFzWrF0Gg58Yq5wdV/rWVTdv26TQn
                  ToOR2d607Wi9P3hVok/tRAG9UZWN2mKRK3OF9MBjF8wv8t0FgZpWzWp4oYWAV2kHEkfuZ5zs5YKk
                  QwsF1E/CGJwhalpx2J1pMOzalYMdTbpKJ5MK/fzNoxmJYYtR+/pcU3vXN2eJu0SSqgt+1g0qF70L
                  RsB2CFArDeDgtzVsOXzYH8aNu4+jMB5pDMFIHPM0GnQQdLcLvFp1JPDyQqucKszIOXFl5+aqimpx
                  dzffWfe7C4+EL6tT00idfOoKlajev7rovcpY9V4tBLJPlCjmO7a2lxnNXtm9qfmWsHuPc9Nusf47
                  ZpvZvMUsYJA9Hv2sYgRbFMw8Zjlc1Au0C7pcZUW+e0nuPXBZiSZ5LJ0Xno70LxLz269+2QYevaLm
                  ARzv4XEEq+lZE03U+MzyZkO8gFHBOAXHo+b+VBjaeebguRaRSDHauio6VMhIr79QKZIscBh4Zf4T
                  Yh7egNBjOo5wngoebrHLlU8wCII035a7qXfCYUbTc3v3qdtfCUePFZjL3jdtKBWTsIMhh9ehg9m6
                  7zdtdf7daeeCQvTv5BfonGw77HLXh0MLAa0p+jvpA+VwVk3gRrKgUmoYJPMCWEzaFLsKvRnyeOBd
                  t7nL4Yx6IC4Ev6wyp8S5qT0PAg/f8j5lgFnLK2ZHmGs1Jx/eF5oP2c3rnOXOUjEBH7nh3Eeaxv95
                  6CZ9mdn+YdXRJv8nMR9HJcbmpOXpusoXHV4gxM63vLlMdLKam3vuMERU7qfIrzRp+UmTxv9Lk9hk
                  S2qGbgDy9gAkeBHnPXbbLhB2kPa1C2Qex/bMhFGQAgwZ50HQ2FsYiEnI4BicRZq19uvTMPwfd49k
                  zpmc4XZx3qWrOg6nFEI0QeoJcfkq0cQjD+A+8cinH6UtmLQEfaQ5y0/feNIG2u/Fft/+FzwhdhG2
                  MlvY1Pprq64IoO+GGPIZGjbrEQ5LWmjXr3B3QE1PzXWGdGIunCQ+EgbhIPDb6DZEqqZ6IPGzUMxo
                  rv55//EvgBZqa9/fUCtqqhtBR9SoLC2rKBViZsvxL6Gu1vUwKLDcx2W97o6yHvymkYy1bqLKakXF
                  w88rRzchI4xBPgu5qBPWzx0i0HnMh+tq1+b6L11aukyn6UlPO3BG3It+hZ74Ggw2fEv6s+YsDP96
                  YXNMg07zIP4As2R3Sc0B/5aWmraLDaveqdBx0nri4tu9vgegD78gFfsTXOuL4ImRfpTwhezfhqwG
                  bKU6wJoq8PdK1vbKjso6KfPOS2VnpVeu7O1bIb/4OxNrZ1VVV5V0WUHPhv7eKb3T5EGJ+QPbwles
                  qmx8td9ZNN/+MC8XWvxd87fmj2PCK37c+zETZHjgb2CK2OBcE+9sKp2VsXDVzAlr+2fJnwImBaCk
                  NzBhtFc2RJZJGR6Ienv1xIojO+V62YQzqp1ZvwNTxNZuoGkioJwitPLHVOGCH5tBZmqxCW/47f2H
                  BZips3+wsP5WYzv/ZybrdzNgCnrW/V33t+53g9/SZd//f9frLhf6of1BWOfnNag+H2BT8C9QX/X3
                  v6y/VdiEe34b/2EA8st/MLD+VmU7AjJHk03YBNhA+A+s2ef+/s/6XYONr2rOz7g5v7NmfrftZvs+
                  Z8rHKX9uzGSHCk7n+L500vtJf15O5/zG9V2Ju4eH78d3kR+FogABBgBegAMgDQplbmRzdHJlYW0K
                  ZW5kb2JqCjEzOSAwIG9iago8PAovU3VidHlwZSAvVHlwZTFDCi9GaWx0ZXIgL0ZsYXRlRGVjb2Rl
                  Ci9MZW5ndGggMjczMAo+PgpzdHJlYW0NCkiJnFV7XBTXFZ7Z9V5A7WoYB5Wxu6MSjBYRMMpDowKK
                  QNFEwARB0XUZZJVXd5dntGhNQKoYFTWA1heiUKNSNIIiPoiiIqAirBq0rFYo2qAxxZ7Buza9i7+m
                  //c3+5u9Z+6d737n3O87wzKDFAzLsr+OjJwXGhj+m2ApMV0y6XXahVKaFBYZYYqbHGKyLRgnC6w8
                  alDOUIU8ZihP/MjqN91vFiHoGgb/fu/omCEnHBkFy/70c2BKapZBvyrBJHr6+vi40buvx8B9qpvo
                  5eHhJfrHpayUxIgso0lKMoohyboUQ2qKQWuS4txF/8REMdz2slEMl4ySId328BdKot4oakWTQRsn
                  JWkNa8SUeDqnj5MSV0qGVZJBnGtI061J0hp1CfpkKVn0n+8mSpm6xDSjPl1KzBIT9Top2SjFiaYE
                  Q0raqgQxTJ+cYspKlehgpUFryBLnJ60MdhO1yXFikjZLpCwN0io95WmgL+mTRZ1kMGnp/+o0g94Y
                  p9eZ9CnJRvcpQRGRNpAPxTgpnmFYejHDFAyvYKYxjA/D+DFMgD0TpmLG00Iz85lQRstkM/XMW3YJ
                  28KCIlCRomSVy5VHBykGxQw6jFyQARWjVvQcJ+Bq/NYuxu6svdI+3v6MA+vg5pDhcMLhTfbmOvmH
                  OrbVSd7U/4l1E4at5CpPZkEhgh5MRHKJB1tg3WFnxbEDY5hFaIzli7xtRGyRijTS32ZQsiUgKEuc
                  QIlLQYmIEqtI4Vfp/esz2CwZKbOy+TYM5/vXowCsyjHLt8zs4S5o71Iehj08mXyOqGAi/L4V7oET
                  hAc/IMOJYSqpIh+qu9bxLxvgL+AOqnVEPTMshlQTL+/ENkBq1YF08DOzefJ2pTxSbuALcDBpRyQT
                  wzzyJW/BJ8EPPcMlZjQZ98oJKBBbfazLs70R3LRRgEdmmGJmd3TBpS6lvL9/AU8IJgrrYHQPnym9
                  WFYndNd95vH+Qm+inKateaTxxGREpz/wbdf21V5WX75Q1tbuDL8K7CHc8qU5qXp1fsF3EImgegC7
                  1QxBZsfyLqjq0nVxsjwRNvHun0118dI2dD6v7/ix82yEn5rrAxGO84Dzg+8QB4GIMwPJkChNvK+J
                  2E12JmOaXOADNSeDxw+AYALY+/6dDF4Umha9RpOP+yqqwQVGC1xf+4n4wC0a1boD6f2qDvaa3KXs
                  H9sfy1vbcPYMBF9g4vxWRVUAzv0qW6iC7s2ApqTL1t7NGY4dbwQu6s0aun4i5opIkfUlysc6+SUi
                  DCZHrL00Msi9tIA1b2PRK8wlwAnZigpwjdWKXmDVIbppbAbb3G+vhMVOPfgGnIIX8mxEFJiUkhfE
                  FV4gVwyfWGcjVRA9dcHMbrBAg0VpBoFvvrzv+k71jcKWbZUH7QtwTkzuspQ4+2VJ0WkhQkxsaa2m
                  EdL5ll03y5qEmoaciCBdrudGDcEbyIQNZJLz2Lu6x0/qjtSeVBfko9jcwynnhJLSbTuKNEWNaNPG
                  9XkbhXXrC0tLd5V/dUDzDYxF24/uqix37vM6MoEoJn1K7LLVqm05Zm26HG2GBRmOcrSFq5GjoYF3
                  DSXjyDDv8NqHoLgBbjDx+6oQXzWXaV1OGvh7eN8/aPpcTdTuW+HPBQjsBU+YBqNCu4k6LDw5WtLk
                  F9RDMZqOVVHv8j1ggUaLUs6H1zwMzQv4znbQC1yJO/EhmrveMBaGPGkGuwrNdBxmXLwiQHBbfasD
                  0B1qg5HNZ6QwjY1lWCNFsrHcS0m+gqVUMneodITOs+GzCBNAJhLeXXepUy1vkXfz3jiSlNNzu53x
                  0cEwgYSMJXOIJ3FspSxvX9jXckFD6Wdm+aOOAYowywyuZnaXBW5ZlKCA63zH4cvNL4Vn3wQEfKm5
                  P4ffWryt7IgzuAb/lbjRwgwnAon2rCWDYTagZ9cAH1FPx781RiX4C0GhNR0lW0oKSjQqUnMgXV5o
                  BifzxgzHQ/CK6znkZMHP5YXoJS42ow9w4/7cFotQVJy/qUjD3S++i7ie7SZjgVEgY/ImjEvVTMVr
                  56C/YWr5eDOMNMucOSfDMc2itXBPX0M8//wm7RZDnp5Z7Df+Y+JCRkzXNrWruTY5HK7xM/Dnbiif
                  Jvm0aa3/qTkCmelKPzOTybBmDxjR1FBaX6mhinFJ/d04MkrgekI/3nM7l1af2G3tje0TQPHw9E/V
                  mpKTRRe/vmRPO8w7fbDyVIsyl+ZwDap2n95zuqJs9PFj58vOCXWnTNFZG1fkZWpCSD2y4EaoRTtP
                  ba866Ny99NtJc+etWbSCdobrUGaThFVB8YozAP2TzYWcATxgZJtagIMl/DScNh49xiqR9rXz6ZCb
                  AUkZbK68Z2BhFYS96v6RHKVWJiPge0iDCFuTJUUkLb/gqeyDvN/h2/z4C/ik/ljbvrB3IA9awv5l
                  Fu62beoqlO6+UPjnkydGH6+oO3ZOOFtmWJHzRdwfdJoFpJbmcQX276ze/e3RitGV5ZeO1wo1x5N0
                  a/MMeZ9rAslDOt8EjWhHeWF1hXPn3GMBQfOlSJ26Ze2SslBhbmj84uXUBoir3HcfzcSq/+5NS/hu
                  7/+rhpir3PMA+VJJvPPVXgs8sShfgZb/1y0YB049Z0L93p9PxpPh7tFXLOrpf+TJe488YAyE9IEX
                  fATqWfeImoQQhniQj6j3ybx0WEiRGsPMjnKMhbsvx8AdnuB59MMneC+7ch+YNioyvufUp95q6xbr
                  13wnrocKav6g/Q/SGgUIeQ1zqPkd5z4mo4KiMoOjaFfmev7Ujmbg/6Hb8qam7aHwV+ViesJcT7Yv
                  NWfrf0iqvpCmoyiMyb0rIx/8taj9YvMhRrH8mwo9DGOIY7V0YKT2UMkyTDFNdEsnxRa6dE3TJWu6
                  /MVIjQo00yG6UERFtFpGjQKLIbgSBEGoe8fdQ2c/Hw/ce853vnO+89Xpffk8y1eybHaGSVdOE351
                  6WXgHYizhHlhCdgyTZf+WyM8Sfn1/oqa7SuCk3E8rTK4LgdfBUovbELqdsrtURogza5xd8D35tjw
                  xOiraff+x0Kf4znveuLodCmECHJarR1WPqeotMAYhzn2AiwacKaKXKbYwo1hYgiXAAsgIj1NkJJD
                  J/0qleqySh2s+lwv5/4E64LmcplBb75UcN73vRtEz452/r5OkvgdkjhFJOuFo9oRBfdVO6IdnJHN
                  Lnpml2ZrDXYAO9QWogdCCdORRNITzZbm4RqWhnKw5RzawFrw64eWjvutMt1c84ogOLsFef8P1G6x
                  2Fv4Ow2uYbez75FbsUoW0C4eCKETcXOtiGsopT/MjVEvcJqHi9k4ym3WnE3jy42+wDOXv3tQ8ZHM
                  w+brYZdtxrYbTbLM6YrtL2uvF/1yuAz1FjX6Cd07NnRirklaxtVTGyTLAG5YY0wDI7pGNSgLf4t5
                  UAQUlO/4m2eiSiIB05yIVnJl0a69509ZWSxDtMkMpMKsSAxqIMjCy/B3M+6ZF6kS9mYopoRQVPeM
                  idjNCTq6kKg7sotJAanaYlVoGzglAmkgXdAojNugJgZ0ChMJs6PkVHYzeMtEbouA9fQDuJUTEKRj
                  ViuWLIaSmTgS85TmompzU2Ml32rqcd1TcHdbCxE39WDA1y7wG2/nP00qklu80ateVu3GZKh3pze2
                  5ZaEksIH6dxhGpb+F2AAAkuVRg0KZW5kc3RyZWFtCmVuZG9iagoxNDAgMCBvYmoKPDwKL1N1YnR5
                  cGUgL1R5cGUxQwovRmlsdGVyIC9GbGF0ZURlY29kZQovTGVuZ3RoIDc4MAo+PgpzdHJlYW0NCkiJ
                  TFBdaBRXFL5jMpNEZcWsk+IP61U3D+rGbN1GEyhCbE2iSYO4aSIhrExmbnYnmZ0ZZ2Z3s7b44otl
                  ta3ZBwMK9aWKWMi++hC0aKAghT701Yf4EPyDYISeGc+UejcB6T1wzvnOPec7370CadxEBEGInU6P
                  jZ4aPjzAjCLzdFUZZgU2NJL2tI6Txsx6h79b8KON/p6tMvbg9x+WP3wjwott8G77o+DPVrJJENb+
                  +8qyy46ezXn0857u7gT3Pcl1n0rQo8nkUdqrWZOMpsuux/IuPW2qlmNbjuIx7QjtNQx6rj7s0nPM
                  ZU6xXvykh+ouVajnKBrLK84Mtab4na4xY5I5WebQr52COpNXXDWnm8ykvf0JymZVo+DqRWaUqaGr
                  zHSZRr2cYxWyOTqkm5ZXthlPJh3FKdP+/ORAgiqmRvNKmXKVDsvqXKfDh3STqszxFB6nC47uarrq
                  6ZbpHunsS4/USb6gGpsi/OwncXKIdJIk6SLHSDP/WzJMbpDn5L2wT7CFn4U/8F5l0X+7KHAfX2yo
                  NPpXg7PhVQl+xCUZT0BVhJcSUnwsQx2Ec02hlFnP4QRyLPmP5HqGdRQZrUAVO6DDv1BqvRIUozY8
                  hKr8F9jidekZ2mK0Fg5gVYaLUtR+8E6EkhSt3W8XYVbC+SAj4owUuQR9/h7oExbAbgiYPyLPQj+S
                  NTx/rRlt3I8HsYBZ+AyPw3fAoAU6IL4XDWngsjnWuzs+vfrmzW+rayu/fHnxp72RcPhOMciUhKec
                  62kb2EEGbSmyUVsCDUqgNSy1gebvui6BFe4SYZq3aGHrDxJqfquIBd79P0FQ40QLEMhoQjsmIc+t
                  HZJggok8Yp4br6MZA7sNUsu1J0+WpzCFqa6pdLqrBqlYhN4p+vdgUACPU4HHRXE4AYP/EhyEiY3n
                  L5aE3/mybP0Hvg0yMtrhTulkJXmAVlb+jvk7OT7ThONAEvXN/7yG8Vjk0u0gcxtz89BdleBuNVTn
                  mzZK0zeb4de51bnw1c0WiG+G8S3XtkaCyo7glvxRgAEApYaPUQ0KZW5kc3RyZWFtCmVuZG9iagox
                  NDEgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNDIgMCBvYmoKPDwKL0hlQm8gOTcg
                  MCBSCj4+CmVuZG9iagoxNDMgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNDQgMCBv
                  YmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNDUgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+
                  CmVuZG9iagoxNDYgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNDcgMCBvYmoKPDwK
                  L0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNDggMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9i
                  agoxNDkgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTAgMCBvYmoKPDwKL0hlQm8g
                  OTcgMCBSCj4+CmVuZG9iagoxNTEgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTIg
                  MCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTMgMCBvYmoKPDwKL0hlQm8gOTcgMCBS
                  Cj4+CmVuZG9iagoxNTQgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTUgMCBvYmoK
                  PDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTYgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVu
                  ZG9iagoxNTcgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNTggMCBvYmoKPDwKL0hl
                  Qm8gOTcgMCBSCj4+CmVuZG9iagoxNTkgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagox
                  NjAgMCBvYmoKPDwKL0hlQm8gOTcgMCBSCj4+CmVuZG9iagoxNjEgMCBvYmoKPDwKL0hlQm8gOTcg
                  MCBSCj4+CmVuZG9iagoxNjIgMCBvYmoKPDwKL1N1YnR5cGUgL0NJREZvbnRUeXBlMEMKL0ZpbHRl
                  ciAvRmxhdGVEZWNvZGUKL0xlbmd0aCA0NjIKPj4Kc3RyZWFtDQpIiXxRz2sTQRTeaZMN6hJRCB7U
                  +tBWhcRaq0J7KYQWm4KWmih4EiY7r5ux+yPOTBoXevQQWRDRQ/Hiyf+iBL34v3jQ8052Q3U2B4/O
                  4XvfN7zv8fEesUpzFiHkxtbTVvvJi/rzkB+ikNTvKHZnF4dyyFVvMwqCPV601fVlfSVxFvRVoi+V
                  9IJTe5sPs9eTD+XfznW9dF7XL+jbzpI+dhatshls2VbV+kMccqvJoi7uMAwVV/Fm1I8F93oK7q2v
                  rTUMrj9swOrKyirMyv1ZN3RiqTCQsBO6kehHgipky9D0fWgXZgltlCgOi89/uYFLoKAEZRhQcQDR
                  PrSQM/S7KDwUsCUG7kFApdvjIYbQ3G4AvnH9gTR+PwafuxhKZKB6Ihp4PXjMw0jFfTSkK6iIYTvo
                  thpAQwYBjcGkFOhxk1MYEw/BRaGoqa8GgkvGXcWjUC7ffdR5Vgx5AAz3/7dj82gBc4TsenqUjPWv
                  MTG4OJ5PSno02ZuO7PR9/qOWb6SfyulPO4f8ey0txPRjZWq/nPF0Izfa1t9qBcsLVc2OcpExcpyx
                  +ayffqmdMn1UPmWVanHXM/qac/Oz/noxSSbvEjsfJpWTsyfn/gowADkxzaMNCmVuZHN0cmVhbQpl
                  bmRvYmoKMTYzIDAgb2JqCjw8Ci9TdWJ0eXBlIC9DSURGb250VHlwZTBDCi9GaWx0ZXIgL0ZsYXRl
                  RGVjb2RlCi9MZW5ndGggMzQyCj4+CnN0cmVhbQ0KSIliZGBhYmBkZBTyDA4Pc/XTdkzJT0oNyAwu
                  SQGJ6vyQ/iHTzSP3Q5bxhwTLDzke0e7fETIsf36eY73Eo/R9Lv/3xYLfF/Co/uDhUWFgZWRk45u3
                  eivYCM+U1LySzJJKMEfBOT8vLRMskpijB+QVVBZlpmeUKBgZGBgp6IAoY4jC4MriktTcYgXPvOT8
                  ooL8osSS1BQ9BcecHIUgkIZihaDU4tSiMrAgWENApkJmsUKiQklRYkpqbmJRtkJ+mgIes/TdgkMq
                  C1IVLBRSUtOQPAsEbiCCiZHRL+VHR/feH2/2MgJJlb3M3Sw/On4G/Olg+973+6job7vvk1m/v2D7
                  rfD7gOh3EOfPJPY/bHFg9ne730A+24/9oiDWbxCP75fAgjLGzT/3Mf98JvZH82fgH82/gax8oNDl
                  /CHPozbjh6RQ0ZKfmUt+9y1h28u1lxsgwADo+5vHDQplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCAx
                  NjQKMDAwMDAwMDAwMCA2NTUzNSBmDQowMDAwMDAwMDE1IDAwMDAwIG4NCjAwMDAwMDA0NjYgMDAw
                  MDAgbg0KMDAwMDAwMDUyOSAwMDAwMCBuDQowMDAwMDAwODI3IDAwMDAwIG4NCjAwMDAwMDAwOTYg
                  MDAwMDAgbg0KMDAwMDAwMjIxMiAwMDAwMCBuDQowMDAwMDAyNjg3IDAwMDAwIG4NCjAwMDAwMDI5
                  NTEgMDAwMDAgbg0KMDAwMDAwMzEzOSAwMDAwMCBuDQowMDAwMDAzMzQwIDAwMDAwIG4NCjAwMDAw
                  MDM1NDEgMDAwMDAgbg0KMDAwMDAwMzc4MyAwMDAwMCBuDQowMDAwMDAzOTc0IDAwMDAwIG4NCjAw
                  MDAwMDQyMTUgMDAwMDAgbg0KMDAwMDAwNDQwOCAwMDAwMCBuDQowMDAwMDA0NjAwIDAwMDAwIG4N
                  CjAwMDAwMDQ3OTQgMDAwMDAgbg0KMDAwMDAwNDk4NiAwMDAwMCBuDQowMDAwMDA1MTc5IDAwMDAw
                  IG4NCjAwMDAwMDUzNjggMDAwMDAgbg0KMDAwMDAwNTU1OCAwMDAwMCBuDQowMDAwMDA1NzUwIDAw
                  MDAwIG4NCjAwMDAwMDU5NDEgMDAwMDAgbg0KMDAwMDAwNjEzMCAwMDAwMCBuDQowMDAwMDA2MzM2
                  IDAwMDAwIG4NCjAwMDAwMDY1MTkgMDAwMDAgbg0KMDAwMDAwNjcyNyAwMDAwMCBuDQowMDAwMDA2
                  OTE3IDAwMDAwIG4NCjAwMDAwMDcxMTAgMDAwMDAgbg0KMDAwMDAwNzI5OSAwMDAwMCBuDQowMDAw
                  MDA3NTU5IDAwMDAwIG4NCjAwMDAwMDc4MjAgMDAwMDAgbg0KMDAwMDAwODA3OSAwMDAwMCBuDQow
                  MDAwMDA4MzQ2IDAwMDAwIG4NCjAwMDAwMDg2MDUgMDAwMDAgbg0KMDAwMDAwODg1NyAwMDAwMCBu
                  DQowMDAwMDA5MDU2IDAwMDAwIG4NCjAwMDAwMDkxMTcgMDAwMDAgbg0KMDAwMDAxNTA5NSAwMDAw
                  MCBuDQowMDAwMDE1MjU4IDAwMDAwIG4NCjAwMDAwMTU0MDUgMDAwMDAgbg0KMDAwMDAxNjYxNSAw
                  MDAwMCBuDQowMDAwMDE3ODI0IDAwMDAwIG4NCjAwMDAwMTkwMzQgMDAwMDAgbg0KMDAwMDAyMDI0
                  MiAwMDAwMCBuDQowMDAwMDIxNDUwIDAwMDAwIG4NCjAwMDAwMjgzMzIgMDAwMDAgbg0KMDAwMDAy
                  OTUzOCAwMDAwMCBuDQowMDAwMDMwNzUxIDAwMDAwIG4NCjAwMDAwMzA5NTQgMDAwMDAgbg0KMDAw
                  MDAzMTE4MCAwMDAwMCBuDQowMDAwMDMxNDIxIDAwMDAwIG4NCjAwMDAwMzE3MjIgMDAwMDAgbg0K
                  MDAwMDAzMTkyMiAwMDAwMCBuDQowMDAwMDMyMjIxIDAwMDAwIG4NCjAwMDAwMzI0NDAgMDAwMDAg
                  bg0KMDAwMDAzMjY1NyAwMDAwMCBuDQowMDAwMDMyODgxIDAwMDAwIG4NCjAwMDAwMzMxMDIgMDAw
                  MDAgbg0KMDAwMDAzMzMyMyAwMDAwMCBuDQowMDAwMDMzNTM5IDAwMDAwIG4NCjAwMDAwMzM3NTYg
                  MDAwMDAgbg0KMDAwMDAzMzk3MiAwMDAwMCBuDQowMDAwMDM0MTgxIDAwMDAwIG4NCjAwMDAwMzQz
                  OTggMDAwMDAgbg0KMDAwMDAzNDYyMiAwMDAwMCBuDQowMDAwMDM0ODI1IDAwMDAwIG4NCjAwMDAw
                  MzUwNjcgMDAwMDAgbg0KMDAwMDAzNTI3NiAwMDAwMCBuDQowMDAwMDM1NTAxIDAwMDAwIG4NCjAw
                  MDAwMzU2MTEgMDAwMDAgbg0KMDAwMDAzNTg3MiAwMDAwMCBuDQowMDAwMDM1OTgyIDAwMDAwIG4N
                  CjAwMDAwMzYyNzkgMDAwMDAgbg0KMDAwMDAzNjQ1NiAwMDAwMCBuDQowMDAwMDM2NzE3IDAwMDAw
                  IG4NCjAwMDAwMzY4MjcgMDAwMDAgbg0KMDAwMDAzNzEyNCAwMDAwMCBuDQowMDAwMDM3MzAxIDAw
                  MDAwIG4NCjAwMDAwMzc1NjIgMDAwMDAgbg0KMDAwMDAzNzY3MiAwMDAwMCBuDQowMDAwMDM3OTY5
                  IDAwMDAwIG4NCjAwMDAwMzgxNDYgMDAwMDAgbg0KMDAwMDAzODQwOCAwMDAwMCBuDQowMDAwMDM4
                  NTE4IDAwMDAwIG4NCjAwMDAwMzg4MTMgMDAwMDAgbg0KMDAwMDAzODk4NSAwMDAwMCBuDQowMDAw
                  MDM5MjQ2IDAwMDAwIG4NCjAwMDAwMzkzNTYgMDAwMDAgbg0KMDAwMDAzOTY1MyAwMDAwMCBuDQow
                  MDAwMDM5ODMwIDAwMDAwIG4NCjAwMDAwNDAwODYgMDAwMDAgbg0KMDAwMDA0MDE5MyAwMDAwMCBu
                  DQowMDAwMDQwNDgyIDAwMDAwIG4NCjAwMDAwNDA2NTEgMDAwMDAgbg0KMDAwMDA0MDc1OCAwMDAw
                  MCBuDQowMDAwMDQwODY4IDAwMDAwIG4NCjAwMDAwNDA5NzQgMDAwMDAgbg0KMDAwMDA0MTA2MCAw
                  MDAwMCBuDQowMDAwMDQxMjYxIDAwMDAwIG4NCjAwMDAwNDE1NjcgMDAwMDAgbg0KMDAwMDA0MTc2
                  NyAwMDAwMCBuDQowMDAwMDQyMDc0IDAwMDAwIG4NCjAwMDAwNDI2NjIgMDAwMDAgbg0KMDAwMDA0
                  MzAxMSAwMDAwMCBuDQowMDAwMDQzMzc3IDAwMDAwIG4NCjAwMDAwNDM5MDEgMDAwMDAgbg0KMDAw
                  MDA0NDI5NSAwMDAwMCBuDQowMDAwMDQ0Njk2IDAwMDAwIG4NCjAwMDAwNDUwMjMgMDAwMDAgbg0K
                  MDAwMDA0NTA2MCAwMDAwMCBuDQowMDAwMDQ1MDk3IDAwMDAwIG4NCjAwMDAwNDUxMzQgMDAwMDAg
                  bg0KMDAwMDA0NTE3MSAwMDAwMCBuDQowMDAwMDQ1MjA4IDAwMDAwIG4NCjAwMDAwNDUyNDUgMDAw
                  MDAgbg0KMDAwMDA0NTI4MiAwMDAwMCBuDQowMDAwMDQ1MzE5IDAwMDAwIG4NCjAwMDAwNDUzNTYg
                  MDAwMDAgbg0KMDAwMDA0NTM5MyAwMDAwMCBuDQowMDAwMDQ1NDMwIDAwMDAwIG4NCjAwMDAwNDU0
                  NjcgMDAwMDAgbg0KMDAwMDA0NTUwNCAwMDAwMCBuDQowMDAwMDQ1NTQxIDAwMDAwIG4NCjAwMDAw
                  NDU1NzggMDAwMDAgbg0KMDAwMDA0NTYxNSAwMDAwMCBuDQowMDAwMDQ1NjUyIDAwMDAwIG4NCjAw
                  MDAwNDU2ODkgMDAwMDAgbg0KMDAwMDA0NTcyNiAwMDAwMCBuDQowMDAwMDQ1NzYzIDAwMDAwIG4N
                  CjAwMDAwNDU4MDAgMDAwMDAgbg0KMDAwMDA0NzEyNiAwMDAwMCBuDQowMDAwMDQ3NDMzIDAwMDAw
                  IG4NCjAwMDAwNDc3MDYgMDAwMDAgbg0KMDAwMDA1MjE5OCAwMDAwMCBuDQowMDAwMDUzMTQ0IDAw
                  MDAwIG4NCjAwMDAwNTQ5MTcgMDAwMDAgbg0KMDAwMDA1ODk0MyAwMDAwMCBuDQowMDAwMDYxNDUz
                  IDAwMDAwIG4NCjAwMDAwNjQyNzcgMDAwMDAgbg0KMDAwMDA2NTE1MCAwMDAwMCBuDQowMDAwMDY1
                  MTg2IDAwMDAwIG4NCjAwMDAwNjUyMjIgMDAwMDAgbg0KMDAwMDA2NTI1OCAwMDAwMCBuDQowMDAw
                  MDY1Mjk0IDAwMDAwIG4NCjAwMDAwNjUzMzAgMDAwMDAgbg0KMDAwMDA2NTM2NiAwMDAwMCBuDQow
                  MDAwMDY1NDAyIDAwMDAwIG4NCjAwMDAwNjU0MzggMDAwMDAgbg0KMDAwMDA2NTQ3NCAwMDAwMCBu
                  DQowMDAwMDY1NTEwIDAwMDAwIG4NCjAwMDAwNjU1NDYgMDAwMDAgbg0KMDAwMDA2NTU4MiAwMDAw
                  MCBuDQowMDAwMDY1NjE4IDAwMDAwIG4NCjAwMDAwNjU2NTQgMDAwMDAgbg0KMDAwMDA2NTY5MCAw
                  MDAwMCBuDQowMDAwMDY1NzI2IDAwMDAwIG4NCjAwMDAwNjU3NjIgMDAwMDAgbg0KMDAwMDA2NTc5
                  OCAwMDAwMCBuDQowMDAwMDY1ODM0IDAwMDAwIG4NCjAwMDAwNjU4NzAgMDAwMDAgbg0KMDAwMDA2
                  NTkwNiAwMDAwMCBuDQowMDAwMDY2NDY4IDAwMDAwIG4NCnRyYWlsZXIKPDwKL1R5cGUgL1hSZWYK
                  L1NpemUgMTY0Ci9Sb290IDEgMCBSCi9JbmZvIDUgMCBSCi9JRCBbPDE2QjA4N0M2MzI3NTdENkE1
                  RkQzMzREOEM4OThCMDE5PiA8MTZCMDg3QzYzMjc1N0Q2QTVGRDMzNEQ4Qzg5OEIwMTk+XQovVyBb
                  MSAyIDBdCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlCi9MZW5ndGggMzM5Cj4+CnN0YXJ0eHJlZgo2Njkx
                  MAolJUVPRgo=
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch Document Data
      summary: Update a Document's Export Status
      description: Update a document's export status
      tags:
        - Documents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the Document in Blend's system. The static identifier
            that should be used to connect the document's identity across Blend
            and external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Document export status parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exportedTime:
                  type: string
                  format: date-time
                  description: Document export time (UTC ISO Timestamp)
                  example: '2018-10-03T20:07:27+00:00'
                losId:
                  type: string
                  description: Identifier of indicated document in the LOS
                  example: '11111'
            example:
              exportedTime: '2018-10-03T20:07:27+00:00'
              losId: '11111'
      responses:
        '200':
          description: Successful Update
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /documents/{id}/metadata:
    get:
      operationId: Get Document Metadata
      summary: Get Document Metadata
      description: Get all metadata associated with a document
      tags:
        - Documents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the Document in Blend's system. The static identifier
            that should be used to connect the document's identity across Blend
            and external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Document Metadata
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DocumentSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /documents/{id}/export-statuses:
    get:
      operationId: Get Document Export Statuses
      summary: List Document Export Statuses
      description: Get all export statuses of the document
      tags:
        - Documents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the Document in Blend's system. The static identifier
            that should be used to connect the document's identity across Blend
            and external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: exportedTo
          description: Static identifier of this document in the LOS
          schema:
            type: string
            example: Document-12345
        - in: query
          name: exportedBefore
          description: Returns only documents uploaded before this time (UTC ISO Timestamp)
          schema:
            type: string
            format: date-time
            example: '2018-10-03T20:07:27+00:00'
        - in: query
          name: exportedAfter
          description: Returns only documents uploaded after this time (UTC ISO Timestamp)
          schema:
            type: string
            format: date-time
            example: '2018-10-03T20:07:27+00:00'
      responses:
        '200':
          description: List of document export statuses
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  exportStatuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentExportStatusSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /tax-transcripts:
    get:
      parameters:
        - name: documentId
          in: query
          required: true
          description: The documentId of the 4506C form
          schema:
            $ref: '#/components/schemas/DocumentId'
          example: 300c9f4c-c90b-40a4-94d4-f2a718b9be61
      operationId: Get Tax Transcripts
      summary: Gets Tax Transcripts structured data for a particular 4506C document
      description: Gets Tax Transcripts structured data for a particular 4506C document
      tags:
        - Tax transcripts
      responses:
        '200':
          description: Tax transcript data was successfully retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TaxTranscriptResponseSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /packages:
    post:
      parameters:
        - name: idempotency-key
          in: header
          required: true
          description: >-
            Idempotency keys are a common way to remove the ambiguity of similar
            API calls. If two API calls share the same idempotency key, only the
            first API call will succeed and the subsequent duplicate request
            will return the previous response. The idempotency key is passed in
            the idempotency-key header. We recommend passing a GUID, but any
            string value with a max length of 128 charaters will be accepted.
          schema:
            type: string
          example: 9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d
      operationId: Post a package
      summary: Post a package
      description: Post a package to an application.
      tags:
        - Packages
      requestBody:
        description: Package creation body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackagePostSchema'
            example: null
      responses:
        '200':
          description: >-
            Package was successfully created; request contains the same
            idempotency key and package is currently issuing or already been
            sent/delivered
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720687d243
                  status:
                    type: string
                    enum:
                      - ISSUING
                      - SENT
                      - DELIVERED
                    example: ISSUING
        '202':
          description: Package is created and is currently issuing
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720687d243
                  status:
                    type: string
                    enum:
                      - ISSUING
                    example: ISSUING
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      All recipient party IDs must be present on loan
                      b2006a70-a19c-4b9f-973d-3a561e159061. Please check party
                      IDs: d1d33889-475-4a6e-8e45-6346f33631b7.
                  trackingId:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720687d244
                  display:
                    type: string
                    example: Invalid request
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    get:
      operationId: Retrieve all packages for an application
      summary: Retrieve all packages
      description: >-
        Retrieve all packages for an application. Optional query parameters
        available to filter.
      tags:
        - Packages
      parameters:
        - in: query
          name: applicationId
          required: true
          schema:
            type: string
          description: Application UUID
          example: 9250f84b-c2a1-4cab-b225-vd720685d221
        - in: query
          name: foreignPackageId
          schema:
            type: string
          description: External package id provided by partner
          example: 1230f84b-c2a1-4cab-b225-vd720685d244
        - in: query
          name: status
          schema:
            type: string
            enum:
              - DRAFT
              - ISSUING
              - SENT
              - DELIVERED
              - VIEWED
              - PENDING_COMPLETION
              - COMPLETED
              - FAILED_TO_ISSUE
              - CANCELLED
              - DECLINED
          description: Package status
          example: SENT
      responses:
        '200':
          description: Package details
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  packages:
                    type: array
                    items:
                      $ref: '#/components/schemas/PackageResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Invalid request. Validation error occurred at field
                      applicationId.
                  trackingId:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720685d244
                  display:
                    type: string
                    example: Invalid request
  /packages/{id}/issue:
    post:
      operationId: Retry issuing a package
      summary: Retry issuing a package
      description: Retry issuing a package using the package id
      tags:
        - Packages
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Package UUID
          example: 9250f84b-c2a1-4cab-b225-vd720685d221
      responses:
        '200':
          description: Package is issuing or already has been sent or delivered
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720687d243
                  status:
                    type: string
                    enum:
                      - SENT
                      - ISSUING
                      - DELIVERED
                    example: ISSUING
        '202':
          description: Package is created and is currently issuing
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720687d243
                  status:
                    type: string
                    enum:
                      - ISSUING
                    example: ISSUING
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Package in state SENT cannot be ISSUED
                  trackingId:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720685d244
                  display:
                    type: string
                    example: Invalid request
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /packages/{id}:
    get:
      operationId: Retrieve a package
      summary: Retrieve a single package
      description: Retrieve details about a package
      tags:
        - Packages
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Package UUID
          example: 9250f84b-c2a1-4cab-b225-vd720685d221
      responses:
        '200':
          description: Package details
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PackageResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Invalid request. Validation error occurred at field
                      applicationId.
                  trackingId:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720685d244
                  display:
                    type: string
                    example: Invalid request
    patch:
      operationId: Update a package
      summary: Update a package
      description: >-
        Update a package to CANCELLED status, set a papered at date, set/update
        a due date or set/update a expiry date
      tags:
        - Packages
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Package UUID
          example: 2d0c89e4-0247-45e6-9f77-ab00d1d74ac0
      requestBody:
        description: Update package body
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - CANCELLED
                  example: CANCELLED
                dueDate:
                  type: string
                  description: >-
                    The ISO timestamp of when the lender has indicated a package
                    is due
                  example: '2020-04-19T02:35:00.789Z'
                paperedAt:
                  type: string
                  description: >-
                    The ISO timestamp of when the lender decides to mail a
                    package and not pursue electronic delivery
                  example: '2020-04-19T21:04:08.859Z'
                expiryDate:
                  type: string
                  description: >-
                    The ISO timestamp of when the lender indicates a package
                    should be cancelled by, it cannot be a date in the past.
                    Pass in null in order to unset an expiry date for a package.
                  nullable: true
                  example: '2023-08-08T18:09:05.735Z'
      responses:
        '200':
          description: No response body provided
        '400':
          description: Bad Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Package b4ff0178-76da-4630-83ff-2772bcb07825 has already
                      been cancelled
                  trackingId:
                    type: string
                    example: 1530f84b-c2a1-4cab-b225-vd720685d244
                  display:
                    type: string
                    example: Invalid request
  /parties/{id}/employers:
    get:
      operationId: Get Party Employers
      summary: List a Party's Employers
      description: Get details about party employers.
      tags:
        - Parties
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Party UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Employers for the party
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EmployerResponseSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      operationId: Post Party Employers
      summary: Add Employers to a Party
      description: Create employers and incomes for party.
      tags:
        - Parties
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Party UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Party employers creation body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerIngestSchema'
      responses:
        '200':
          description: Employers for the party
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  employers:
                    type: array
                    items:
                      type: string
                    example:
                      - c33452bf-6eff-4b6d-adc7-a89eaa24013a
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /parties/{id}/other-incomes:
    post:
      operationId: Post Party Other Incomes
      summary: Add Other Incomes to a Party
      description: Create other incomes for party.
      tags:
        - Parties
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Party UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Party other incomes creation body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherIncomeIngestSchema'
      responses:
        '200':
          description: Other incomes for the party
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  otherIncomes:
                    type: array
                    description: An array of UUIDs of the other incomes created.
                    items:
                      type: string
                    example:
                      - c33452bf-6eff-4b6d-adc7-a89eaa24013a
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Party Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /follow-ups:
    post:
      operationId: Post Follow-Up
      summary: Add a Follow-Up to an Application
      description: Create a follow-up for an applicant on a specific application.
      tags:
        - Follow-Ups
      requestBody:
        description: Follow-ups creation body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFollowUpSchema'
            example:
              applicationId: 9250f84b-c2a1-4cab-b265-bd720685c361
              type: DOCUMENT_REQUEST
              context:
                partyId: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                document:
                  type: IRS1120
      responses:
        '200':
          description: New Follow-Up
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FollowUpSchema'
              example:
                id: 50557b61-c4ec-4639-9781-a5efe5d29946
                applicationId: 9250f84b-c2a1-4cab-b265-bd720685c361
                status: REQUESTED
                type: DOCUMENT_REQUEST
                context:
                  partyId: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                  document:
                    type: IRS1120
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    get:
      operationId: Get Follow-Ups
      summary: List Follow-Ups for an Application
      description: Get follow-ups on a specific application.
      tags:
        - Follow-Ups
      parameters:
        - name: applicationId
          in: query
          required: true
          description: Application ID to filter follow-ups by
          schema:
            type: string
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - name: type
          in: query
          required: false
          description: Follow-up type to filter by
          schema:
            $ref: '#/components/schemas/FollowUpType'
      responses:
        '200':
          description: Array of follow-up objects
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  followUps:
                    type: array
                    items:
                      $ref: '#/components/schemas/FollowUpSchema'
                example:
                  followUps:
                    id: 50557b61-c4ec-4639-9781-a5efe5d29946
                    applicationId: 9250f84b-c2a1-4cab-b265-bd720685c361
                    status: REQUESTED
                    type: DOCUMENT_REQUEST
                    context:
                      partyId: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                      document:
                        type: IRS1120
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /follow-ups/{id}:
    get:
      operationId: Get Follow-Up
      summary: Get a Specific Follow-Up
      description: Get specific follow-up.
      tags:
        - Follow-Ups
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Follow-up UUID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: JSON follow-up object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FollowUpSchema'
              example:
                id: 50557b61-c4ec-4639-9781-a5efe5d29946
                applicationId: 9250f84b-c2a1-4cab-b265-bd720685c361
                status: REQUESTED
                type: DOCUMENT_REQUEST
                context:
                  partyId: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
                  document:
                    type: IRS1120
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch Follow-Up
      summary: Update a Specific Follow-Up
      description: Update specific follow-up.
      tags:
        - Follow-Ups
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Follow-up UUID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        description: Follow-up Update Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchFollowUpSchema'
            example:
              status: COMPLETED_EXTERNALLY
              comments: Please upload the requested document by the end of the week.
              clientFollowUpReferenceId: internalID-187f5efc-0b82-4480-84a5-e23d8c3c9a32
              dueDate: '2018-10-03T20:07:27+00:00'
              context:
                document:
                  title: Custom title
      responses:
        '200':
          description: Follow-Up Updated Successfully
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    delete:
      operationId: Delete Follow-Up
      summary: Remove a Specific Follow-Up
      description: Delete specific follow-up.
      tags:
        - Follow-Ups
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Follow-up UUID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: Successful Deletion
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '422':
          description: Invalid Update
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidUpdateErrorSchema'
              example:
                error: The requested update is invalid
                display: Completed follow-ups cannot be deleted.
                trackingId: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /lenders:
    post:
      operationId: Post Lenders
      summary: Create Lenders in Blend
      description: Bulk route used to create Lender Users in Blend
      tags:
        - Lenders
      requestBody:
        description: Lender parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lenders:
                  type: array
                  items:
                    $ref: '#/components/schemas/LenderCreationRequestSchema'
            example:
              lenders:
                - name: Ashley Lender
                  email: ashley.lender@blend.com
                  permittedSolutionSubTypes:
                    - MORTGAGE
                  requireTwoFactorAuth: false
                  loginMethod: email
                  roleNames:
                    - Loan Officer
                  phone:
                    number: '1112223333'
                    extension: '1234'
                  nmlsId: '39179'
                  losUsername: ashleylender
                  employeeId: '12314'
                  branchId: west branch
                  creditInternalAccountIdentifiers:
                    - pullType: Hard
                      creditPullScenario: MORTGAGE
                      creditProvider: INFORMATIVE_RESEARCH
                      creditAccountIdentifier: test
                  licensedStates:
                    - CA
                    - NY
      responses:
        '200':
          description: All Lender Users Successfully Created
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LenderRecordSchema'
                  error:
                    type: array
                    items:
                      type: object
                    maxItems: 0
        '207':
          description: Some Lender Users Successfully Created
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LenderRecordSchema'
                  error:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - code
                        - reason
                      properties:
                        email:
                          type: string
                          example: bademail
                        code:
                          type: number
                          example: 400
                        reason:
                          type: string
                          example: Invalid lender params.
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
    get:
      operationId: Query Lenders
      summary: List Lenders in Blend
      description: Get a paginated list of all Lender Users in the Blend account
      tags:
        - Lenders
      parameters:
        - in: query
          name: ids
          description: Lender User IDs to query for
          schema:
            type: array
            items:
              type: string
              description: >-
                The UUID of the Lender User in Blend's system. The static
                identifier that should be used to connect the user's identity
                across Blend and external integrations.
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
          example:
            - 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: employeeIds
          description: Lender user Employee IDs to query for
          schema:
            type: array
            items:
              type: string
              description: The lender user's employee ID.
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
          example:
            - 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: cursor
          description: >-
            An opaque string used for pagination, pass the cursor back to start
            at this position
          schema:
            type: string
            example: >-
              biwxNTI0MTcwNDEwMTAwLDI2OTU0N2ZmLWY2NDMtNDA0ZC1hYTQzLTEzOGI2NTA2OTdjMg
        - in: query
          name: limit
          description: >-
            The number of Users to be returned for this call. Minimum is 1,
            maximum is 100, default is 50.
          schema:
            type: number
            example: 25
        - in: query
          name: emails
          description: Lender emails to query for (comma separated string).
          schema:
            type: string
            example: lender@example.bank.com
        - in: query
          name: roles
          description: Lender roles to query for (comma separated string).
          schema:
            type: string
            example: Loan Officer,Loan Processor,User Admin
      responses:
        '200':
          description: >-
            List of paginated Lender Users, with cursors to go the next or
            previous pages.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LenderRecordSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of Users
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of Users
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
                  error:
                    type: array
                    maxItems: 0
                    items:
                      type: object
        '207':
          description: Lenders
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/LenderRecordSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of lenders
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of lenders
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/BulkRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
    patch:
      operationId: Patch Lenders
      summary: Update Lenders in Blend
      description: Bulk endpoint to update some information on an array of lender users
      tags:
        - Lenders
      requestBody:
        description: Lender parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lenders:
                  type: array
                  items:
                    $ref: '#/components/schemas/LenderUpdateRequestSchema'
            example:
              lenders:
                - id: 9250f84b-c2a1-4cab-b265-bd720685c361
                  name: Ashley Lender
                  email: ashley.lender.new.email@blend.com
                  permittedSolutionSubTypes:
                    - MORTGAGE
                  requireTwoFactorAuth: false
                  loginMethod: email
                  roleNames:
                    - Loan Officer
                  phone:
                    number: '1112223333'
                    extension: '1234'
                  nmlsId: '39179'
                  losUsername: ashleylender
                  employeeId: '12314'
                  branchId: west branch
                  creditInternalAccountIdentifiers:
                    pullType: Hard
                    creditPullScenario: MORTGAGE
                    creditProvider: INFORMATIVE_RESEARCH
                    creditAccountIdentifier: test
                  licensedStates:
                    - CA
                    - NY
      responses:
        '200':
          description: All Lender Users Successfully Updated
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    description: Lender user UUIDs
                    items:
                      type: string
                      example: 9250f84b-c2a1-4cab-b265-bd720685c361
                  error:
                    type: array
                    items:
                      type: object
                      maxItems: 0
        '207':
          description: Some Lender Users Successfully Updated
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    description: Lender user UUIDs
                    items:
                      type: string
                      example: 9250f84b-c2a1-4cab-b265-bd720685c361
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/BulkRequestErrorSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InvalidRequestErrorSchema'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: Invalid Request. Duplicate lender ids.
                      display:
                        type: string
                        example: Please provide a valid list of lender updates.
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
    delete:
      operationId: Delete Lenders
      summary: Remove Lenders in Blend
      description: Bulk endpoint to remove one or more lender users from the Blend account
      tags:
        - Lenders
      parameters:
        - name: ids
          in: query
          required: true
          description: UUIDs of lenders to delete
          schema:
            type: array
            items:
              type: string
              description: >-
                The UUID of the lender user in Blend's system. The static
                identifier that should be used to connect the user's identity
                across Blend and external integrations.
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
          example:
            - 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: All Lender Users Successfully Deleted
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: string
                      example: 9250f84b-c2a1-4cab-b265-bd720685c361
                      description: Lender user UUIDs
                  error:
                    type: array
                    items:
                      type: object
                      maxItems: 0
        '207':
          description: Some Lender Users Successfully Deleted
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: string
                      example: 9250f84b-c2a1-4cab-b265-bd720685c361
                      description: Lender user UUIDs
                  error:
                    type: array
                    items:
                      $ref: '#/components/schemas/BulkRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
  /realtors:
    post:
      operationId: Post Realtor
      summary: Add a Realtor to a Specific Application
      description: Add realtor to application
      tags:
        - Realtors
      requestBody:
        description: Realtor parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealtorRequestSchema'
            example:
              applicationId: 9250f84b-c2a1-4cab-b265-bd720685c361
              name:
                firstName: Danielle
                lastName: Realtor
              contact:
                email: danielle@realtor.com
                phoneNumber: 2225557878
      responses:
        '200':
          description: Realtor created
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 4ab61cfd-e4f0-47af-bdfa-06901e2bf180
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /parties:
    post:
      operationId: Post Parties
      summary: Add a Party to a Specific Application
      description: Add a party to a specific application.
      tags:
        - Parties
      requestBody:
        description: Party parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationId
                - name
                - type
              properties:
                applicationId:
                  $ref: '#/components/schemas/ApplicationId'
                name:
                  $ref: '#/components/schemas/NameSchema'
                email:
                  type: string
                  example: spouse@mail.com
                type:
                  type: string
                  description: ENUM describing the type of party
                  enum:
                    - COBORROWER
                    - APPRAISER
                    - ATTORNEY_IN_FACT
                    - AUTHORIZED_REPRESENTATIVE
                    - AUTHORIZED_THIRD_PARTY
                    - BUILDER
                    - GIFT_DONOR
                    - HAZARD_INSURANCE_AGENT
                    - LANDLORD
                    - NON_APPLICANT_USER
                    - NON_TITLE_NON_SPOUSE_OWNERSHIP_INTEREST
                    - NON_TITLE_SPOUSE
                    - OTHER
                    - PROPERTY_SELLER
                    - REAL_ESTATE_AGENT
                    - REAL_ESTATE_LISTING_AGENT
                    - REAL_ESTATE_SELLING_AGENT
                    - SETTLOR
                    - SETTLOR_TRUSTEE
                    - SPOUSE
                    - TITLE_HOLDER
                    - TITLE_HOLDER_SETTLOR_TRUSTEE
                    - TITLE_HOLDER_TRUSTEE
                    - TRUSTEE
                    - UNSPECIFIED
                  example: SPOUSE
                verificationData:
                  $ref: '#/components/schemas/VerificationDataSchema'
                taxpayerIdentifier:
                  $ref: '#/components/schemas/TaxpayerIdentifierSchema'
                dateOfBirth:
                  type: string
                  format: date-time
                  description: UTC Timestamp of Date of Birth
                  example: '2018-10-03T20:07:27+00:00'
                homePhone:
                  type: string
                  description: Nine-digit home phone number
                  example: '1112223333'
                currentAddress:
                  $ref: '#/components/schemas/AddressParamSchema'
                mailingAddress:
                  $ref: '#/components/schemas/AddressParamSchema'
                econsent:
                  $ref: '#/components/schemas/PostEconsentSchema'
                losPartyId:
                  $ref: '#/components/schemas/LOSPartyIdSchema'
                username:
                  $ref: '#/components/schemas/UsernameSchema'
                maritalStatus:
                  type: string
                  description: ENUM describing the marital status of Party
                  enum:
                    - MARRIED
                    - NOT_PROVIDED
                    - SEPARATED
                    - UNKNOWN
                    - UNMARRIED
                  example: MARRIED
                customFields:
                  $ref: '#/components/schemas/CustomFields'
                customMetadata:
                  $ref: '#/components/schemas/CustomMetadata'
                veteranStatus:
                  $ref: '#/components/schemas/VeteranStatusSchema'
                noEmailYet:
                  type: boolean
                  default: false
                  description: >-
                    Indicates that the party's email address is not known yet,
                    and generates a unique placeholder email ending with
                    `@interim.sso.blend.com`.
            example:
              applicationId: 4ab61cfd-e4f0-47af-bdfa-06901e2bf180
              name:
                firstName: John
                middleName: Angel
                lastName: Hernandez
                suffixName: Jr.
              email: john@email.com
              type: SPOUSE
              verificationData:
                code: '1234'
                hint: Verification hint
              losPartyId: externalId1
              username: testUsername123
              econsent:
                status: Declined
              customFields:
                fieldName: fldValue
              customMetadata:
                fieldName: fldValue
      responses:
        '200':
          description: Created Party
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PartyResponseSchema'
              example:
                id: bca86e3e-ce8b-4e04-b841-bf7e31f91eb3
                applicationId: a5ded618-3a1d-44d3-ba34-9df57eb72c26
                name:
                  firstName: John
                  middleName: Angel
                  lastName: Hernandez
                  suffixName: Jr.
                email: john@email.com
                type: SPOUSE
                losPartyId: externalId1
                username: testUsername123
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /parties/{id}:
    patch:
      operationId: Patch Party
      summary: Update a Party's Details
      description: Update a party's details.
      tags:
        - Parties
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Party id
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Party update parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/NameSchema'
                email:
                  type: string
                  example: johnhernandez@mail.com
                verificationData:
                  $ref: '#/components/schemas/VerificationDataSchema'
                taxpayerIdentifier:
                  $ref: '#/components/schemas/TaxpayerIdentifierSchema'
                dateOfBirth:
                  type: string
                  format: date-time
                  description: UTC Timestamp of Date of Birth
                  example: '2018-10-03T20:07:27+00:00'
                phoneNumbers:
                  type: array
                  items:
                    $ref: '#/components/schemas/PhoneNumberSchema'
                currentAddress:
                  $ref: '#/components/schemas/AddressParamSchema'
                mailingAddress:
                  $ref: '#/components/schemas/AddressParamSchema'
                econsent:
                  $ref: '#/components/schemas/PostEconsentSchema'
                creditConsentGiven:
                  $ref: '#/components/schemas/PostEconsentSchema'
                creditConsentGivenSoft:
                  $ref: '#/components/schemas/PostEconsentSchema'
                creditConsentType:
                  type: string
                  description: Type of hard credit consent
                  enum:
                    - VERBAL
                    - WRITTEN
                    - ELECTRONIC
                creditConsentTypeSoft:
                  type: string
                  description: Type of soft credit consent
                  enum:
                    - VERBAL
                    - WRITTEN
                    - ELECTRONIC
                losPartyId:
                  $ref: '#/components/schemas/LOSPartyIdSchema'
                username:
                  $ref: '#/components/schemas/UsernameSchema'
                relationship:
                  $ref: '#/components/schemas/RelationshipSchema'
                customFields:
                  type: string
                  description: field name of the custom field
                customMetadata:
                  type: string
                  description: field name of the custom metadata
                veteranStatus:
                  $ref: '#/components/schemas/VeteranStatusSchema'
                language:
                  $ref: '#/components/schemas/LanguageSchema'
            example:
              name:
                firstName: James
                middleName: William
                lastName: Horton
                suffixName: 3rd
              email: james@email.com
              verificationData:
                code: '4321'
                hint: Different verification hint
              losPartyId: losParty2
              username: testUsername123
              econsent:
                status: Accepted
                ip: 0.0.0.0
                date: '2018-08-30T19:31:38.902Z'
              customFields:
                fieldName: fldValue
              customMetadata:
                fieldName: fldValue
      responses:
        '200':
          description: Updated Party
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PartyResponseSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    delete:
      operationId: Delete Party
      summary: Remove a Party from a Specific Application
      description: Delete party from a specific application.
      tags:
        - Parties
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Party id
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Successful Deletion
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /account-applications/{id}:
    get:
      operationId: Get Account Opening Application Data
      summary: Get Account Application Data
      description: Get JSON object containing application data for account opening.
      tags:
        - Account Opening
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Application ID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: JSON Account Application Object
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                $ref: '#/components/schemas/AccountApplicationSchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch Account Opening Application
      summary: Update Account Application Data
      description: Update application data.
      tags:
        - Account Opening
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Application ID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      requestBody:
        description: Application update parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchApplicationSchema'
      responses:
        '200':
          description: Updated Application
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /reporting/loans:
    get:
      tags:
        - Reporting
      description: Return a paginated list of loans data.
      summary: Retrieve Basic Loan Data
      operationId: Get Loans Report
      parameters:
        - name: deleted
          in: query
          required: false
          description: >-
            If true, returns a list of all loans that have been deleted by the
            user; If false, return all loans that have not been deleted; If
            omitted, return a list of all loans independent of deleted field.
          schema:
            type: boolean
          example: false
        - name: archived
          in: query
          required: false
          description: >-
            If true, returns a list of all loans that have been archived by
            Blend, If false, return all loans that have not been archived; If
            omitted, returns a list of all loans independent of archived field.
          schema:
            type: boolean
          example: false
        - name: appSourceName
          in: query
          required: false
          description: >-
            Canonical name of where this application came from, such as the name
            of the LOS or CRM. e.g. ["Velocify", "NetOxygen", "Empower", etc.]
            If set, returns a list of all loans that match the given
            appSourceName.
          schema:
            type: string
          example: Empower
        - name: appLeadSource
          in: query
          required: false
          description: >-
            The method by which the application was created. e.g. ["LENDER",
            "BORROWER", "PUBLIC_API", "OTHER"] If set, returns a list of all
            loans that match the given appLeadSource.
          schema:
            type: string
            enum:
              - LENDER
              - BORROWER
              - PUBLIC_API
              - INGEST
              - OTHER
          example: LENDER
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "CANADA_MORTGAGE", "ACCOUNT_OPENING", "AUTO",
            "MORTGAGE_MODIFICATION", "PERSONAL_LOC", "PERSONAL_LOAN",
            "PROGRAM_LOAN", "SPECIALTY_VEHICLE", "ALL" ] If set, returns a list
            of all loans that match the given loanType
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - CANADA_MORTGAGE
              - ACCOUNT_OPENING
              - AUTO
              - MORTGAGE_MODIFICATION
              - PERSONAL_LOC
              - PERSONAL_LOAN
              - PROGRAM_LOAN
              - SPECIALTY_VEHICLE
              - ALL
          example: MORTGAGE
        - name: loanCreatedStartDate
          in: query
          required: false
          description: >-
            Gets all loans created on or after this date. Compares to
            createdDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanCreatedEndDate
          in: query
          required: false
          description: >-
            Gets all loans created on or before this date. Compares to
            createdDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: borrowerStartedStartDate
          in: query
          required: false
          description: >-
            Gets all loans started by the borrower on or after this date.
            Compares to borrowerStartedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: borrowerStartedEndDate
          in: query
          required: false
          description: >-
            Gets all loans started by the borrower on or before this date.
            Compares to borrowerStartedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: borrowerSubmittedStartDate
          in: query
          required: false
          description: >-
            Gets all loans submitted by the borrower on or after this date.
            Compares to borrowerSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: borrowerSubmittedEndDate
          in: query
          required: false
          description: >-
            Gets all loans submitted by the borrower on or before this date.
            Compares to borrowerSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanExportedStartDate
          in: query
          required: false
          description: >-
            Gets all loans exported on or after this date. Compares to
            estExportedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanExportedEndDate
          in: query
          required: false
          description: >-
            Gets all loans exported on or before this date. Compares to
            estExportedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanTridTriggeredStartDate
          in: query
          required: false
          description: >-
            Gets all loans that triggered TRID within Blend on or after this
            date in UTC. Compares to estTridTriggeredDatetime. DO NOT USE FOR
            COMPLIANCE AND RECONCILIATION PURPOSES
          schema:
            type: string
            format: date
          example: '2023-06-30T19:31:38.902Z'
        - name: loanTridTriggeredEndDate
          in: query
          required: false
          description: >-
            Gets all loans that triggered TRID within Blend on or before this
            date in UTC. Compares to estTridTriggeredDatetime. DO NOT USE FOR
            COMPLIANCE AND RECONCILIATION PURPOSES
          schema:
            type: string
            format: date
          example: '2023-06-30T19:31:38.902Z'
        - name: loanDeletedStartDate
          in: query
          required: false
          description: >-
            Gets all loans deleted on or after this date. Compares to
            applicationDeletionDatetime. DO NOT USE FOR COMPLIANCE AND
            RECONCILIATION PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanDeletedEndDate
          in: query
          required: false
          description: >-
            Gets all loans deleted on or before this date. Compares to
            applicationDeletionDatetime. DO NOT USE FOR COMPLIANCE AND
            RECONCILIATION PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanArchivedStartDate
          in: query
          required: false
          description: >-
            Gets all loans archived on or after this date. Compares to
            estArchivedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanArchivedEndDate
          in: query
          required: false
          description: >-
            Gets all loans archived on or before this date. Compares to
            estArchivedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanLastUpdatedStartDate
          in: query
          required: false
          description: >-
            Gets all loans last updated on or after this date. Compares to
            estLastUpdatedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanLastUpdatedEndDate
          in: query
          required: false
          description: >-
            Gets all loans last updated on or before this date. Compares to
            estlastUpdatedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION
            PURPOSES
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - createdDatetime
              - borrowerStartedDatetime
              - borrowerSubmittedDatetime
              - estExportedDatetime
              - estDeletedDatetime
              - estArchivedDatetime
              - estPurgedDatetime
              - estLastUpdatedDatetime
          example: createdDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of loans to be returned for this API call. Maximum is
            10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated loans, with cursors to go to the next or previous
            set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  loans:
                    description: An array of loans
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingLoanSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of loans
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of loans
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/borrowers:
    get:
      tags:
        - Reporting
      description: Return a paginated list of borrower data.
      summary: Retrieve Borrower Users
      operationId: Get Borrowers Report
      parameters:
        - name: lastUpdatedStartDate
          in: query
          required: false
          description: >-
            Gets all rows that have had any of the fields in the report updated
            on or after this date (if all other timestamp fields are null, this
            field defaults to the timestamp the borrower user was created).
            Compares to lastUpdatedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: lastUpdatedEndDate
          in: query
          required: false
          description: >-
            Gets all rows that have had any of the fields in the report updated
            on or before this date (if all other timestamp fields are null, this
            field defaults to the timestamp the borrower user was created).
            Compares to lastUpdatedDatetime
          schema:
            type: string
            format: date
          example: '2018-09-01T19:31:38.902Z'
        - name: activationStartDate
          in: query
          required: false
          description: >-
            Gets all borrowers activated on or after this date. Compares to
            activationDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: activationEndDate
          in: query
          required: false
          description: >-
            Gets all borrowers activated on or before this date. Compares to
            activationDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: invitedStartDate
          in: query
          required: false
          description: >-
            Gets all borrowers invited on or after this date. Compares to
            invitedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: invitedEndDate
          in: query
          required: false
          description: >-
            Gets all borrowers invited on or before this date. Compares to
            invitedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "CANADA_MORTGAGE", "ACCOUNT_OPENING", "AUTO",
            "MORTGAGE_MODIFICATION", "PERSONAL_LOC", "PERSONAL_LOAN",
            "PROGRAM_LOAN", "SPECIALTY_VEHICLE", "ALL" ]
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - CANADA_MORTGAGE
              - ACCOUNT_OPENING
              - AUTO
              - MORTGAGE_MODIFICATION
              - PERSONAL_LOC
              - PERSONAL_LOAN
              - PROGRAM_LOAN
              - SPECIALTY_VEHICLE
              - ALL
          example: MORTGAGE
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - activationDatetime
              - invitedDatetime
          example: activationDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of borrowers to be returned for this API call. Maximum is
            10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated borrower, with cursors to go to the next or
            previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  users:
                    description: An array of borrowers
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingBorrowerSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of borrower
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of borrower
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/lenders:
    get:
      tags:
        - Reporting
      description: Return a paginated list of lenders data.
      summary: Retrieve Lender Users and usage metrics
      operationId: Get Lenders Report
      parameters:
        - name: userMetricsStartDate
          in: query
          required: true
          description: >-
            Required for user metric fields - this is the start date that will
            apply to the timestamps for each user metric field.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: userMetricsEndDate
          in: query
          required: true
          description: >-
            Required for user metric fields - this is the end date that will
            apply to the timestamps for each user metric field.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: invitedStartDate
          in: query
          required: false
          description: >-
            Gets all lender users invited on or after this date. Compares to
            invitedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: invitedEndDate
          in: query
          required: false
          description: >-
            Gets all lender users invited on or before this date. Compares to
            invitedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: activationStartDate
          in: query
          required: false
          description: >-
            Gets all lender users activated on or after this date. Compares to
            activationDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: activationEndDate
          in: query
          required: false
          description: >-
            Gets all lender users activated on or before this date. Compares to
            activationDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: lastLoginStartDate
          in: query
          required: false
          description: >-
            Gets all lender users that last logged in on or after this date.
            Compares to lastLoginDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: lastLoginEndDate
          in: query
          required: false
          description: >-
            Gets all lender users that last logged in on or before this date.
            Compares to lastLoginDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: lastBorrowerSubmitStartDate
          in: query
          required: false
          description: >-
            Gets all lender users who had their last loan submitted by a
            borrower on or after this date. Compares to
            lastBorrowerSubmitDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: lastBorrowerSubmitEndDate
          in: query
          required: false
          description: >-
            Gets all lender users who had their last loan submitted by a
            borrower on or before this date. Compares to
            lastBorrowerSubmitDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - activationDatetime
              - invitedDatetime
              - lastBorrowerSubmitDatetime
              - lastLoginDatetime
          example: activationDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of lenders to be returned for this API call. Maximum is
            10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated lenders, with cursors to go to the next or
            previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  lenders:
                    description: An array of lenders
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingLenderSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of lenders
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of lenders
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/activities:
    get:
      tags:
        - Reporting
      description: >-
        This captures only the borrower's activity within Blend on the
        process-level.
      summary: Retrieve Borrower Workflows
      operationId: Get Activities Report
      parameters:
        - name: processStartedStartDate
          in: query
          required: false
          description: >-
            Get all borrower processes started on or after this date. Compares
            to startedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: processStartedEndDate
          in: query
          required: false
          description: >-
            Get all borrower processes started on or after this date. Compares
            to startedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: processCompletedStartDate
          in: query
          required: false
          description: >-
            Get all borrower processes completed on or after this date. Compares
            to completedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: processCompletedEndDate
          in: query
          required: false
          description: >-
            Get all borrower processes completed on or after this date. Compares
            to completedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - startedDatetime
              - completedDatetime
          example: startedDatetime
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "CANADA_MORTGAGE", "ACCOUNT_OPENING", "AUTO",
            "MORTGAGE_MODIFICATION", "PERSONAL_LOC", "PERSONAL_LOAN",
            "PROGRAM_LOAN", "SPECIALTY_VEHICLE", "ALL" ]
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - CANADA_MORTGAGE
              - ACCOUNT_OPENING
              - AUTO
              - MORTGAGE_MODIFICATION
              - PERSONAL_LOC
              - PERSONAL_LOAN
              - PROGRAM_LOAN
              - SPECIALTY_VEHICLE
              - ALL
          example: MORTGAGE
        - name: limit
          in: query
          required: false
          description: >-
            The number of activities to be returned for this API call. Maximum
            is 10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated activities, with cursors to go to the next or
            previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  activities:
                    description: An array of activities
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingActivitySchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of activities
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of activities
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid status value
  /reporting/nps:
    get:
      tags:
        - Reporting
      description: Return a paginated list of nps data.
      summary: Retrieve NPS and Comments
      operationId: Get NPS Report
      parameters:
        - name: startDate
          in: query
          required: false
          description: Get all nps on or after this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: endDate
          in: query
          required: false
          description: Gets all nps on or before this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "AUTO", "ACCOUNT_OPENING"]
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - AUTO
              - ACCOUNT_OPENING
          example: MORTGAGE
        - name: limit
          in: query
          required: false
          description: >-
            The number of nps to be returned for this API call. Maximum is
            10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated NPS, with cursors to go to the next or previous
            set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  nps:
                    description: An array of nps
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingNPSSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of NPS
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of NPS
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid status value
  /reporting/documents:
    get:
      tags:
        - Reporting
      description: Return a paginated list of documents data.
      summary: Retrieve Document Metadata
      operationId: Get Documents Report
      parameters:
        - name: type
          in: query
          required: false
          description: The type of documents to be retrieved
          schema:
            type: string
          example: LOE_PUBLIC_RECORD:BANKRUPTCY
        - name: createdAfter
          in: query
          required: true
          description: Get all documents created after this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: createdBefore
          in: query
          required: false
          description: Gets all documents created before this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "CANADA_MORTGAGE", "ACCOUNT_OPENING", "AUTO",
            "MORTGAGE_MODIFICATION", "PERSONAL_LOC", "PERSONAL_LOAN",
            "PROGRAM_LOAN", "SPECIALTY_VEHICLE", "ALL" ]
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - CANADA_MORTGAGE
              - ACCOUNT_OPENING
              - AUTO
              - MORTGAGE_MODIFICATION
              - PERSONAL_LOC
              - PERSONAL_LOAN
              - PROGRAM_LOAN
              - SPECIALTY_VEHICLE
              - ALL
          example: MORTGAGE
        - name: limit
          in: query
          required: false
          description: >-
            The number of documents to be returned for this API call. Maximum is
            10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated documents, with cursors to go to the next or
            previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  documents:
                    description: An array of documents
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingDocumentSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of documents
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of documents
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid status value
  /reporting/data-verification-usage:
    get:
      tags:
        - Reporting
      description: Returns a paginated list of connectivity metrics data.
      summary: Retrieve Connectivity Metrics
      operationId: Get Data Verification Usage Report
      parameters:
        - name: startDate
          in: query
          required: false
          description: Gets metrics for connectivity data on or after this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: endDate
          in: query
          required: false
          description: Gets metrics for connectivity data on or before this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: limit
          in: query
          required: false
          description: >-
            The number of rows of metrics to be returned for this API call.
            Maximum is 10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated data verification metrics, with cursors to go to
            the next or previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  dataVerificationUsage:
                    description: An array of connectivity metrics
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/ReportingDataVerificationUsageSchema
                  nextCursor:
                    description: >-
                      Cursor to use to get to the next set of connectivity
                      metrics
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: >-
                      Cursor to use to get to the previous set of connectivity
                      metrics
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/follow-ups:
    get:
      tags:
        - Reporting
      description: Return a paginated list of individual follow-up data.
      summary: Retrieve Follow-ups data
      operationId: Get Follow-ups Report
      parameters:
        - name: loanType
          in: query
          required: false
          description: >-
            The type of the loan application. e.g. ["MORTGAGE", "HELOC",
            "HELOAN", "CANADA_MORTGAGE", "ACCOUNT_OPENING", "AUTO",
            "MORTGAGE_MODIFICATION", "PERSONAL_LOC", "PERSONAL_LOAN",
            "PROGRAM_LOAN", "SPECIALTY_VEHICLE", "ALL" ]
          schema:
            type: string
            enum:
              - MORTGAGE
              - HELOC
              - HELOAN
              - CANADA_MORTGAGE
              - ACCOUNT_OPENING
              - AUTO
              - MORTGAGE_MODIFICATION
              - PERSONAL_LOC
              - PERSONAL_LOAN
              - PROGRAM_LOAN
              - SPECIALTY_VEHICLE
              - ALL
          example: MORTGAGE
        - name: followUpCreatedStartDate
          in: query
          required: false
          description: >-
            Get all followups created on or after this date. Compares to
            followUpCreatedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: followUpCreatedEndDate
          in: query
          required: false
          description: >-
            Gets all followups created on or before this date. Compares to
            followUpCreatedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: requestedStartDate
          in: query
          required: false
          description: >-
            Get all followups requested on or after this date. Compares to
            requestedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: requestedEndDate
          in: query
          required: false
          description: >-
            Gets all followups requested on or before this date. Compares to
            requestedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: completedStartDate
          in: query
          required: false
          description: >-
            Get all followups completed on or after this date. Compares to
            completedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: completedEndDate
          in: query
          required: false
          description: >-
            Gets all followups completed on or before this date. Compares to
            completedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: reviewedStartDate
          in: query
          required: false
          description: >-
            Get all followups reviewed on or after this date. Compares to
            reviewedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: reviewedEndDate
          in: query
          required: false
          description: >-
            Gets all followups reviewed on or before this date. Compares to
            reviewedDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: cancelledStartDate
          in: query
          required: false
          description: >-
            Get all followups cancelled on or after this date. Compares to
            cancelledDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: cancelledEndDate
          in: query
          required: false
          description: >-
            Gets all followups cancelled on or before this date. Compares to
            cancelledDatetime
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - followUpCreatedDatetime
              - requestedDatetime
              - completedDatetime
              - reviewedDatetime
              - cancelledDatetime
          example: followUpCreatedDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of individual followups to be returned for this API call.
            Maximum is 10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated individual followups, with cursors to go to the
            next or previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  followups:
                    description: An array of followups
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingFollowupsSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set of followups
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of followups
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/lender-pab-activities:
    get:
      tags:
        - Reporting
      description: Return a paginated list of PAB Activities
      summary: Retrieve PAB activities
      operationId: Get Lender PAB Activities Report
      parameters:
        - name: activityStartDate
          in: query
          required: false
          description: Gets all PAB activities on or after this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: activityEndDate
          in: query
          required: false
          description: Gets all PAB activities on or before this date
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: limit
          in: query
          required: false
          description: >-
            The number of activities to be returned for this API call. Maximum
            is 10,000
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated pab activities, with cursors to go to the next or
            previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  pabActivities:
                    description: An array of PAB Activities
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingLenderPabActivitiesSchema'
                  nextCursor:
                    description: Cursor to use to get to the next set activities
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: Cursor to use to get to the previous set of activities
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /reporting/deposit-account-applications:
    get:
      tags:
        - Reporting
      description: Return a paginated list of Deposit Account Applications
      summary: Retrieve Deposit Account Application Data
      operationId: Get Deposit Account Applications
      parameters:
        - name: applicationId
          in: query
          required: false
          description: Gets data for the specific Application UUID entered.
          schema:
            type: string
          example: 6afa5110-342b-43bc-9304-d24f5e4015cc
        - name: appSourceMarketingTag
          in: query
          required: false
          description: Gets all applications with the specified appSourceMarketingTag.
          schema:
            type: string
          example: google
        - name: appLeadSource
          in: query
          required: false
          description: >-
            Gets all applications that were created by the specified party
            type/method. Currently all deposit applications have an
            appLeadSource of "BORROWER" or null.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appCreatedStartDate
          in: query
          required: false
          description: >-
            Gets all applications created on or after this date. Compares to
            applicationCreatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appCreatedEndDate
          in: query
          required: false
          description: >-
            Gets all applications created on or before this date. Compares to
            applicationCreatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: hasActivityBeyondInitialDetailsTask
          in: query
          required: false
          description: >-
            If true, returns a list of all applications that have evidence of at
            least some activity beyond the first application details screen; if
            false, returns all applications that have no evidence of any
            activity beyond the first application details screen; if omitted,
            returns a list of all applications independent of whether there is
            or is not activity beyond that threshold.
          schema:
            type: boolean
          example: 'true'
        - name: appSubmittedStartDate
          in: query
          required: false
          description: >-
            Gets all applications submitted on or after this date. Compares to
            applicationSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appSubmittedEndDate
          in: query
          required: false
          description: >-
            Gets all applications submitted on or before this date. Compares to
            applicationSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoApprovedStartDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated approval decision on or
            after this date. Compares to firstAutomatedApprovalDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoApprovedEndDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated approval decision on or
            before this date. Compares to firstAutomatedApprovalDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoReferredStartDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated referral for manual review
            on or after this date. Compares to firstAutomatedReferralDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoReferredEndDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated referral for manual review
            on or before this date. Compares to firstAutomatedReferralDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appManuallyApprovedStartDate
          in: query
          required: false
          description: >-
            Gets all applications with a manual approval decision on or after
            this date. Compares to firstManualApprovalDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appManuallyApprovedEndDate
          in: query
          required: false
          description: >-
            Gets all applications with a manual approval decision on or before
            this date. Compares to firstManualApprovalDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoRejectedStartDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated rejection decision on or
            after this date. Compares to firstAutomatedRejectionDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appAutoRejectedEndDate
          in: query
          required: false
          description: >-
            Gets all applications with an automated rejection decision on or
            before this date. Compares to firstAutomatedRejectionDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appManuallyRejectedStartDate
          in: query
          required: false
          description: >-
            Gets all applications with a manual rejection decision on or after
            this date. Compares to firstManualRejectionDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appManuallyRejectedEndDate
          in: query
          required: false
          description: >-
            Gets all applications with a manual rejection decision on or before
            this date. Compares to firstManualRejectionDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: accountBookedStartDate
          in: query
          required: false
          description: >-
            Gets all applications where the applied for account(s) were booked
            to the core banking system on or after this date. Compares to
            accountBookedToCoreDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: accountBookedEndDate
          in: query
          required: false
          description: >-
            Gets all applications where the applied for account(s) were booked
            to the core banking system on or before this date. Compares to
            accountBookedToCoreDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: accountFundedStartDate
          in: query
          required: false
          description: >-
            Gets all applications where an opening deposit into the newly booked
            account(s) was made on or after this date. Compares to
            firstOpeningDepositTransactionSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: accountFundedEndDate
          in: query
          required: false
          description: >-
            Gets all applications where an opening deposit into the newly booked
            account(s) was made on or before this date. Compares to
            firstOpeningDepositTransactionSubmittedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appLastUpdatedStartDate
          in: query
          required: false
          description: >-
            Gets all applications last updated on or after this date. Compares
            to applicationLastUpdatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appLastUpdatedEndDate
          in: query
          required: false
          description: >-
            Gets all applications last updated on or before this date. Compares
            to applicationLastUpdatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: archived
          in: query
          required: false
          description: >-
            If true, returns a list of all applications that have been archived
            by Blend; if false, returns all applications that have not been
            archived; if omitted, returns a list of all applications independent
            of applicationArchivedDatetime field.
          schema:
            type: boolean
          example: 'true'
        - name: appArchivedStartDate
          in: query
          required: false
          description: >-
            Gets all applications archived on or after this date. Compares to
            applicationArchivedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appArchivedEndDate
          in: query
          required: false
          description: >-
            Gets all applications archived on or before this date. Compares to
            applicationArchivedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: deleted
          in: query
          required: false
          description: >-
            If true, returns a list of all applications that have been deleted
            by the user; if false, returns all applications that have not been
            deleted; if omitted, return a list of all applications independent
            of applicationDeletedDatetime field.
          schema:
            type: boolean
          example: 'true'
        - name: appDeletedStartDate
          in: query
          required: false
          description: >-
            Gets all applications deleted on or after this date. Compares to
            applicationDeletedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appDeletedEndDate
          in: query
          required: false
          description: >-
            Gets all applications deleted on or before this date. Compares to
            applicationDeletedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appPurgedStartDate
          in: query
          required: false
          description: >-
            Gets all applications purged on or after this date. Compares to
            applicationPurgedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appPurgedEndDate
          in: query
          required: false
          description: >-
            Gets all applications purged on or before this date. Compares to
            applicationPurgedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - applicationCreatedDatetime
              - applicationSubmittedDatetime
              - firstAutomatedReferralDatetime
              - firstAutomatedApprovalDatetime
              - firstManualApprovalDatetime
              - firstAutomatedRejectionDatetime
              - firstManualRejectionDatetime
              - accountBookedToCoreDatetime
              - firstOpeningDepositTransactionSubmittedDatetime
              - applicationLastUpdatedDatetime
              - applicationArchivedDatetime
              - applicationDeletedDatetime
              - applicationPurgedDatetime
            example: applicationCreatedDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of results to be returned for this API call. Maximum is
            10,000.
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results.
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated Deposit Account Data, with cursors to go to the
            next or previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  depositAccountApplications:
                    description: An array of deposit account data
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/ReportingDepositAccountApplicationsSchema
                  nextCursor:
                    description: >-
                      Cursor to use to get to the next set of deposit account
                      application data
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: >-
                      Cursor to use to get to the previous set of deposit
                      account data
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid status value
  /reporting/configurable-products-applications:
    get:
      tags:
        - Reporting
      description: Returns a paginated list of configurable products applications
      summary: Retrieve configurable products applications data
      operationId: Get Configurable Products Applications
      parameters:
        - name: applicationId
          in: query
          required: false
          description: Gets application data based on the id provided.
          schema:
            type: string
          example: d56f1433-5184-4730-bb4a-4b634230feec
        - name: productName
          in: query
          required: false
          description: >-
            Gets application data based on the product for which the applicant
            is applying.
          schema:
            type: string
          example: Personal Loan
        - name: appCreatedStartDate
          in: query
          required: false
          description: >-
            Gets application data for apps created on or after this date.
            Compares to applicationCreatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appCreatedEndDate
          in: query
          required: false
          description: >-
            Gets application data for apps created on or before this date.
            Compares to applicationCreatedDatetime.
          schema:
            type: string
            format: date
          example: '2018-08-30T19:31:38.902Z'
        - name: appDeletedStartDate
          in: query
          required: false
          description: >-
            Gets application data for apps deleted from Blend's production
            database on or after this date. Compares to
            applicationDeletionDatetime.
          schema:
            type: string
            format: date
          example: '2022-12-01T00:00:00.000Z'
        - name: appDeletedEndDate
          in: query
          required: false
          description: >-
            Gets application data for apps deleted from Blend's production
            database on or before this date. Compares to
            applicationDeletionDatetime.
          schema:
            type: string
            format: date
          example: '2023-01-01T00:00:00.000Z'
        - name: orderBy
          in: query
          required: false
          description: >-
            The timestamp you wish you order the results by. Required if passing
            in multiple date query parameters.
          schema:
            type: string
            enum:
              - applicationCreatedDatetime
              - applicationDeletionDatetime
            example: applicationCreatedDatetime
        - name: limit
          in: query
          required: false
          description: >-
            The number of results to be returned for this API call. Maximum is
            10,000.
          schema:
            type: integer
          example: 100
        - name: cursor
          in: query
          required: false
          description: The cursor to retrieve the next/previous page of results.
          schema:
            type: string
          example: >-
            cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
      responses:
        '200':
          description: >-
            List of paginated configurable products applications, with cursors
            to go to the next or previous set.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  configurableProductsApplications:
                    description: An array of configurable products applications
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/ReportingConfigurableProductsApplicationsSchema
                  nextCursor:
                    description: >-
                      Cursor to use to get to the next set of configurable
                      products applications
                    type: string
                    example: >-
                      biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA
                  prevCursor:
                    description: >-
                      Cursor to use to get the previous set of configurable
                      products applications
                    type: string
                    example: >-
                      cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg
        '400':
          description: Invalid Request
  /events:
    get:
      parameters:
        - name: bons-profile
          in: header
          required: true
          description: >-
            The profile can be configured per customer. This supports use cases
            like multiple tenants, or multiple instances of the same tenant.
            Unless otherwise requested, this value will be "default".
          schema:
            type: string
          example: default
        - name: limit
          in: query
          required: false
          description: The page size to return. Default and maximum are 250.
          schema:
            type: integer
          example: 25
        - name: status
          in: query
          required: false
          description: >-
            An event status. If this is set, all events with the given status
            are returned.
          schema:
            type: string
            enum:
              - EMITTED
              - ACKNOWLEDGED
              - PROCESSING
              - SUCCEEDED
              - FAILED
              - NO_ACTION
          example: EMITTED
        - name: created-at-max
          in: query
          required: false
          description: ISO date format.
          schema:
            type: string
          example: '2018-08-30T19:31:38.902Z'
        - name: created-at-min
          in: query
          required: false
          description: ISO date format.
          schema:
            type: string
          example: '2018-08-30T19:31:38.902Z'
      operationId: Get Events
      summary: List Event Summaries
      description: >-
        Returns a list of events for the given query parameters with a maximum
        of 250 events per call.
      tags:
        - Events
      responses:
        '200':
          description: List of events
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSchema'
        '400':
          description: Invalid query params
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInvalidRequestSchema'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventUnauthorizedSchema'
        '404':
          description: EventId is not valid
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventMissingObjectSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInternalErrorSchema'
  /events/{id}:
    get:
      parameters:
        - name: bons-profile
          in: header
          required: true
          description: >-
            The profile can be configured per customer. This supports use cases
            like multiple tenants, or multiple instances of the same tenant.
            Unless otherwise requested, this value will be "default".
          schema:
            type: string
          example: default
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Event UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        - in: query
          name: includeData
          schema:
            type: boolean
          description: When true, includes the original event data payload.
          example: false
      operationId: Get Event
      summary: Get a Specific Event
      description: Get an event and its current status
      tags:
        - Events
      responses:
        '200':
          description: Event and corresponding status
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventWithDataSchema'
        '400':
          description: Invalid event UUID
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInvalidRequestSchema'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventUnauthorizedSchema'
        '404':
          description: EventId is not valid
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventMissingObjectSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInternalErrorSchema'
  /events/{id}/status-updates:
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Event UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      operationId: Set Event Status
      summary: Set the Status of a Specific Event
      description: Set a status for an event
      tags:
        - Events
      requestBody:
        description: Status update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventStatusRequestSchema'
            example:
              status: SUCCEEDED
      responses:
        '200':
          description: Successfully set the status
        '400':
          description: Invalid status or error object
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInvalidRequestSchema'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventUnauthorizedSchema'
        '404':
          description: EventId is not valid
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventMissingObjectSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInternalErrorSchema'
  /events/describe:
    get:
      parameters:
        - name: version
          in: query
          required: true
          description: The BONS Event Version to describe.
          schema:
            type: string
            enum:
              - v1
              - v2
          example: v1
        - in: query
          name: schema
          schema:
            type: boolean
          description: >-
            When true, adds the full schema description with data types to the
            provided event metadata.
          example: false
      operationId: Get Event Description
      summary: Describe Event Schemas
      description: >-
        Get the set of all events available in the provided version, their
        available decorators, and optionally their schemas.
      tags:
        - Events
      responses:
        '200':
          description: Event and corresponding status
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSchema'
        '400':
          description: Invalid event UUID
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInvalidRequestSchema'
        '401':
          description: Unauthorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventUnauthorizedSchema'
        '404':
          description: EventId is not valid
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventMissingObjectSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventInternalErrorSchema'
  /assets:
    get:
      parameters:
        - name: applicationId
          in: query
          required: true
          description: The application to retrieve an Assets summary for.
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
      operationId: Get Assets
      summary: Get Assets from an Application
      description: Gets a summary of Assets data for an Application
      tags:
        - Assets
      responses:
        '200':
          description: Assets Summary for Application was successfully retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AssetsSummarySchema'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /assets/refresh:
    post:
      operationId: Post Assets Refresh
      summary: Initiate Refresh of Assets data
      description: >-
        Initiates an asynchronous attempt to refresh Assets data for the
        specified application and accounts. Refreshes can only be initiated once
        per hour for an application. Refreshes can take up to 20 minutes to
        complete.
      tags:
        - Assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsRefreshRequestSchema'
      responses:
        '200':
          description: >-
            An attempt to refresh Assets data on the application has been
            initiated. This does not necessarily mean that Assets will be
            successfully refreshed.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings:
    get:
      operationId: Get Closings
      summary: List Closings
      description: Returns a list of all closings for a given application.
      tags:
        - Close
      parameters:
        - name: applicationId
          in: query
          required: true
          description: Application ID
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
      responses:
        '200':
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingList'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      operationId: Post Closings
      summary: Create a Closing
      description: Creates a new closing for a given application.
      tags:
        - Close
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingPostRequest'
      responses:
        '200':
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingCreatedResponse'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}:
    get:
      operationId: Get Closing
      summary: Get a Specific Closing
      description: Returns the specified closing.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Closing'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch Closing
      summary: Update a Specific Closing
      description: >-
        Updates a closing for a given loan. This endpoint can update multiple
        elements at once.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingPatchRequest'
      responses:
        '200':
          description: The closing has been updated.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Closing'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/documents:
    put:
      operationId: Put Closing Documents
      summary: Add or Update Closing Documents
      description: >-
        Adds documents to a closing or updates their metadata, like their
        closing designation.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingDocumentsPutRequest'
      responses:
        '200':
          description: The closing documents have been updated.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    delete:
      operationId: Delete Closing Documents
      summary: Remove Closing Documents
      description: Remove documents from a closing.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
        - in: query
          name: ids
          required: true
          description: >-
            List of document IDs. The corresponding documents will be removed
            from the closing.
          schema:
            type: array
            items:
              type: string
              description: Blend Document ID.
              example: a5e69a6f-a522-4750-a740-7c748f71d4d5
          example:
            - a5e69a6f-a522-4750-a740-7c748f71d4d5
      responses:
        '200':
          description: The closing documents have been removed.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/enote:
    post:
      operationId: Post Closing eNote
      summary: Create eNote for Closing
      description: Creates an eNote for a closing.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingENotePostRequest'
      responses:
        '200':
          description: The eNote has been created.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    delete:
      operationId: Delete Closing eNote
      summary: Remove the eNote from a Closing
      description: Removes the eNote from the Closing to make way for a paper note.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: The eNote has been successfully removed.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/send:
    post:
      operationId: Post Closing Send
      summary: Submit Closing
      description: Submits or Resubmits a closing.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingSendPostRequest'
      responses:
        '200':
          description: The closing has been submitted.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/redraw:
    post:
      operationId: Post Closing Redraw
      summary: Initiate Closing Redraw
      description: >-
        Places submitted closing back into a draft state so that changes can be
        made.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: >-
            The closing has been successfully cancelled and reverted to a draft
            state.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/pre-closing-documents:
    put:
      operationId: Put Pre-closing Documents
      summary: Add or Update Draft Pre-closing Documents
      description: >-
        Adds draft pre-closing documents to a closing or updates their document
        type if it has changed since their last addition. After successful
        completion of this request, the document references that were added to
        this closing will have a `closingDesignation` of `DRAFT_PRE_CLOSING` and
        a `sourceType` of `LENDER`. In addition, any pre-closing document
        references with a `sourceType` of `LENDER` that were previously sent to
        the settlement agent using the `POST
        close/closings/{id}/pre-closing-documents/send` endpoint will be
        automatically duplicated with a `closingDesignation` of
        `DRAFT_PRE_CLOSING`.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreClosingDocumentsPutRequest'
      responses:
        '200':
          description: The pre-closing documents have been added or updated.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/pre-closing-documents/send:
    post:
      operationId: Post Pre-Closing Documents Send
      summary: Send or Re-Send Pre-Closing Documents
      description: >-
        Moves any pre-closing documents out of a draft state and sends them to
        the settlement agent.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      responses:
        '200':
          description: >-
            The pre-closing documents have been set and sent to the settlement
            agent assigned to the loan.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/closings/{id}/external-enote:
    post:
      operationId: Post External ENote
      summary: Add Externally Managed ENote
      description: Adds an ENote from a vault managed outside of blend.
      tags:
        - Close
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Closing ID
          example: 50557b61-c4ec-4639-9781-a5efe5d29946
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosingExternallyManagedENotePostRequest'
      responses:
        '200':
          description: The external ENote has successfully been added to the closing.
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Closing Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingNotFoundError'
        '429':
          description: Rate Limited
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /close/ron-eligibility-check:
    post:
      operationId: Retrieve full RON eligibility object.
      summary: Retrieves full RON eligibility information for property address.
      description: >-
        Retrieves state, jurisdiction (county) and underwriter RON eligibility
        information for provided property address.
      tags:
        - Close
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveRonEligibilityPostRequest'
      responses:
        '200':
          description: RON eligibilities successfully been retrieved
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RetrieveRonEligibilityResponse'
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Internal server error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /consumer-lending/applications/{id}:
    get:
      operationId: Get consumer lending application data
      summary: Get consumer lending application data
      description: Get consumer lending application data in JSON.
      tags:
        - Consumer Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: 42bd6564-edd6-47a7-a5c6-0deaf5ee23d5
      responses:
        '200':
          description: Consumer Lending Application
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConsumerLendingApplicationSchema'
                discriminator:
                  propertyName: id
              example:
                id: 563b6780-a0f9-40ec-9ab9-eaf841602927
                loanIdentifiers:
                  losId: 9d668c9c-be9b-4305-a690-8f3c9dd136d2
                  crmId: e6b6e5f6-65ae-4af6-9f39-8bab094f4763
                  referenceNumber: '34992'
                loanType: AUTO
                loanPurposeType: PURCHASE
                borrowers:
                  - id: 1e20343f-d8a8-423e-aac1-def4c56a9f99
                    type: BORROWER
                    name:
                      firstName: Betsy
                      lastName: Borrower
                    email: scotti+riv@blend.com
                    phoneNumbers:
                      - type: HOME
                        number: 5558302938
                    birthDate: '1990-11-11T00:00:00.000Z'
                    ssn: 000-00-0000
                    citizenshipStatus: US_CITIZEN
                    residences:
                      - type: MAILING
                        address:
                          streetAddressLine1: 435 East Pete Rose Way
                          city: Cincinnati
                          county: Hamilton County
                          state: OH
                          zipCode: '45202'
                      - type: CURRENT
                        residencyType: LIVING_RENT_FREE
                        address:
                          streetAddressLine1: 435 East Pete Rose Way
                          city: Cincinnati
                          county: Hamilton County
                          state: OH
                          zipCode: '45202'
                        moveInDate: '2010-05-05T00:00:00.000Z'
                        residencyDurationYears: 9
                    ownedProperties: []
                    employers:
                      - type: GENERAL_EMPLOYMENT
                        name: Starbucks
                        title: Barista
                        startDate: '2010-01-01T00:00:00.000Z'
                        monthsOnJob: 123
                        employerSEGCode: '1234'
                        incomes:
                          - type: BASE
                            yearlyIncome: 70000
                    otherIncomes: []
                    declarations:
                      - type: US_CITIZEN
                        indicator: true
                      - type: PERMANENT_RESIDENT_ALIEN
                        indicator: false
                      - type: NON_PERMANENT_US_RESIDENT
                        indicator: false
                  - id: 94c58a6a-2265-4b71-a144-ff9ffc3fa71c
                    type: COBORROWER
                    name:
                      firstName: Bailey
                      middleName: Frisco
                      lastName: Dog
                      suffix: Jr.
                    email: baileydog1234@blend.com
                    phoneNumbers:
                      - type: HOME
                        number: 2321312323
                    birthDate: '1990-11-11T00:00:00.000Z'
                    ssn: 000-00-0000
                    citizenshipStatus: US_CITIZEN
                    residences:
                      - type: MAILING
                        address:
                          streetAddressLine1: 3401 South Harbor Boulevard
                          city: Santa Ana
                          county: Orange County
                          state: CA
                          zipCode: '92704'
                      - type: CURRENT
                        residencyType: OWN
                        address:
                          streetAddressLine1: 3401 South Harbor Boulevard
                          city: Santa Ana
                          county: Orange County
                          state: CA
                          zipCode: '92704'
                        moveInDate: '2010-01-02T00:00:00.000Z'
                        residencyDurationYears: 10
                    ownedProperties:
                      - usageType: INVESTMENT
                        address:
                          streetAddressLine1: 343 Austin Street
                          city: Houston
                          county: Harris County
                          state: TX
                          zipCode: '77002'
                        monthlyMortgagePayments:
                          - 875
                          - 230
                        mortgageBalance: 21000
                        grossRentalIncome: 340
                    employers:
                      - type: GENERAL_EMPLOYMENT
                        name: Chipotle
                        address:
                          streetAddressLine1: 343 East 1st Street
                          city: Los Angeles
                          county: Los Angeles County
                          state: CA
                          zipCode: '90012'
                        title: Manager
                        startDate: '2017-04-28T00:00:00.000Z'
                        monthsOnJob: 35
                        ownership:
                          ownershipType: null
                          ownershipPercentage: null
                        incomes:
                          - type: BASE
                            yearlyIncome: 80000
                    otherIncomes:
                      - type: ALIMONY
                        yearlyIncome: 2400
                        description: ''
                    declarations:
                      - type: US_CITIZEN
                        indicator: true
                      - type: PERMANENT_RESIDENT_ALIEN
                        indicator: false
                      - type: NON_PERMANENT_US_RESIDENT
                        indicator: false
                    econsent:
                      status: Accepted
                      date: '2021-08-12T13:25:15.902Z'
                    creditConsent:
                      status: Accepted
                      date: '2021-08-12T13:25:15.902Z'
                    creditConsentSoft:
                      status: Pending
                loanAmount: 12500
                loanTermMonths: 72
                collaterals: []
                appSource: AdCampaign_10_15_2021
                primaryAssignedLoanOfficer:
                  fullName: Lo Nofficer
                  branchId: Branch 4
                  employeeId: Employee 15
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    patch:
      operationId: Patch consumer lending application
      summary: Patch consumer lending application
      description: Update some properties on a specific consumer lending application.
      tags:
        - Consumer Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: b8c94013-e344-4d77-b55d-8a8538e69afe
      requestBody:
        description: Application Update Body
        content:
          application/json:
            schema:
              type: object
              properties:
                losId:
                  $ref: '#/components/schemas/LosId'
                crmId:
                  $ref: '#/components/schemas/CrmId'
                referenceNumber:
                  $ref: '#/components/schemas/ReferenceNumber'
            example:
              losId: 9d668c9c-be9b-4305-a690-8f3c9dd136d2
              crmId: e6b6e5f6-65ae-4af6-9f39-8bab094f4763
              referenceNumber: '34992'
      responses:
        '200':
          description: Application Updated Successfully
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /consumer-lending/applications/{id}/documents:
    get:
      operationId: Get consumer lending application documents
      summary: List documents for a consumer lending application
      description: >-
        Get a list of all the uploaded and signature complete documents on a
        specific application.
      tags:
        - Consumer Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: b8c94013-e344-4d77-b55d-8a8538e69afe
      responses:
        '200':
          description: List of documents
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentSchema'
              example:
                documents:
                  - id: 08ca1e6f-a4c2-4085-9a52-5160a474136b
                    type: COMPLIANCE_REPORT
                    name: World - Compliance Report - 060721 61420pm
                    downloadUrl: >-
                      https://blend-borrower-master-consumer-lending.sandbox.centrio.com/v1/documents/08ca1e6f-a4c2-4085-9a52-5160a474136b
                    created: '2021-06-07T18:14:23.326Z'
                    customFields: {}
                    customMetadata: {}
                    lastExportedAt: null
                    applicationId: 42bd6564-edd6-47a7-a5c6-0deaf5ee23d5
                    partyIds:
                      - 96b6b15f-2797-4dec-b176-ed68f842d52e
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /consumer-lending/applications/{id}/decision:
    get:
      operationId: Get application decision
      summary: Get application decision
      description: Get decision for a specific application.
      tags:
        - Consumer Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: b8c94013-e344-4d77-b55d-8a8538e69afe
      responses:
        '200':
          description: Application Decision
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConsumerLendingApplicationDecisionSchema'
              example:
                status: APPROVE
                updatedDate: '2021-06-07T21:12:00.451Z'
                source: IDV
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApplicationId'
          example: b8c94013-e344-4d77-b55d-8a8538e69afe
      operationId: Set application decision
      summary: Set application decision
      description: Send decision information to Blend
      tags:
        - Consumer Lending - Applications
      requestBody:
        description: Application Decision Body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - APPROVE
                    - IN_REVIEW
                    - DECLINE
                  example: APPROVE
                amount:
                  type: number
                  example: 120000
                apr:
                  type: number
                  example: 4.75
                monthlyPayment:
                  type: number
                  example: 1243
                termMonths:
                  type: number
                  example: 120
                productOffering:
                  type: string
                  example: Standard HELOC
      responses:
        '200':
          description: Decision Updated Successfully
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /income/verifications:
    get:
      operationId: Get verified income data
      summary: List of Party's Incomes verified.
      description: Get verified income data for a party.
      tags:
        - Incomes
      parameters:
        - in: query
          name: partyId
          required: true
          schema:
            type: string
          description: Party UUID
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
      responses:
        '200':
          description: Incomes for the party verified.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetVerifiedIncomeDataResponse'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
    post:
      operationId: Post Income Verification
      summary: Performs income verification or reverification for a party.
      description: >-
        Based on the operation selected, this API runs through the income
        verification waterfall.
      tags:
        - Incomes
      requestBody:
        description: Income verification request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIncomeVerificationRequest'
            example:
              partyId: 3ce9acbb-6f14-4c29-8a32-63761171cf44
              operation: VERIFY_INCOME_AND_EMPLOYMENT
      responses:
        '201':
          description: Income verification request accepted
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PostIncomeVerificationResponse'
        '400':
          description: This error is returned when there is an error with the request data.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorSchema'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: >-
            Forbidden. This error is returned if either income verification is
            not enabled or if consent wasn't collected or if the API credentials
            is not authorized to use this endpoint.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: Not Found. This error is returned when the id is not found.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '409':
          description: >-
            Conflict. This error is returned if the requested operation is
            VERIFY_INCOME_AND_EMPLOYMENT but the party is already verified.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConflictErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /income/verifications/{id}/status:
    get:
      operationId: Get income verification status
      summary: >-
        Get the status of the income verification that was created through the
        POST /income/verifications API.
      description: Get status of income verification.
      tags:
        - Incomes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            Identifier for income verification request. This is returned in the
            POST /income/verifications API response.
          example: bfb89c83-d107-49b7-9d5c-ffd8d83e5b83
      responses:
        '200':
          description: Status of income verification.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetIncomeVerificationStatusResponse'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthenticationRequiredErrorSchema'
        '403':
          description: >-
            Forbidden. This error is returned if the API credentials is not
            authorized to use this endpoint.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedErrorSchema'
        '404':
          description: >-
            Not Found. This error is returned when the verification request is
            not found.
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApplicationNotFoundErrorSchema'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerErrorSchema'
  /oauth-token:
    post:
      operationId: Create OAuth Token
      summary: Create OAuth Token
      description: >-
        Creates a new OAuth Token for use in authenticating requests given a
        client ID and password
      tags:
        - Auth
      requestBody:
        description: OAuth Token creation body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthTokenRequestSchema'
            example:
              client_id: 50557b61-c4ec-4639-9781-a5efe5d29946
              client_secret: somePassword123
              grant_type: client_credentials
      responses:
        '200':
          description: New OAuth Token
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponseSchema'
              example:
                access_token: sometoken
                token_type: Bearer
                expires_in: 1800
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuthErrorSchema'
              example:
                error: invalid_request
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuthErrorSchema'
              example:
                error: invalid_client
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuthErrorSchema'
              example:
                error: server_error
  /authentication-status:
    get:
      operationId: Get Current User
      summary: Get Current User
      description: Get Current User
      tags:
        - Auth
      responses:
        '200':
          description: Current User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingInvalidRequestErrorSchema'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingNotAuthorizedErrorSchema'
  /home-lending/applications/{id}/export-requests:
    post:
      operationId: Post Application Export
      summary: Initiate Application Export
      description: Initiate an asynchronous application export
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
          schema:
            type: string
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                synchronous:
                  description: >-
                    Allows SPI export users to trigger an export and event-based
                    export users to wait for a response synchronously
                  type: boolean
              required:
                - synchronous
      responses:
        '200':
          description: Export Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostExportRequestResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthRequiredError'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedError'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Conflict
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      operationId: Get Export Requests
      summary: Get Multiple Export Requests
      description: Get all export requests for a given application
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
      responses:
        '200':
          description: Export Requests
          content:
            application/json:
              schema:
                type: object
                required:
                  - exportRequests
                properties:
                  exportRequests:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/GetExportRequestResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthRequiredError'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedError'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /home-lending/applications/{id}/export-requests/{exportRequestId}:
    get:
      operationId: Get Export Request
      summary: Get Export Request By Id
      description: Get a single export request for a given application
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
        - in: path
          name: exportRequestId
          required: true
          schema:
            type: string
          description: The UUID of the export request.
      responses:
        '200':
          description: Export Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportRequestResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthRequiredError'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedError'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      operationId: Patch Export Request
      summary: Patch Export Request
      description: Patch the status of an export request
      tags:
        - Home Lending - Applications
      parameters:
        - in: path
          name: id
          required: true
          example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
          schema:
            type: string
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
        - in: path
          name: exportRequestId
          required: true
          schema:
            type: string
          description: The UUID of the export request.
      requestBody:
        required: true
        description: Patch Export Request Body
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - SUCCESS
                    - FAILED
                message:
                  type: string
              minProperties: 1
      responses:
        '200':
          description: Export Request Modified
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestError'
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/AuthRequiredError'
        '403':
          description: Not Authorized
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotAuthorizedError'
        '404':
          description: Application Not Found
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /home-lending/applications/{id}/title/orders:
    get:
      operationId: Get Title Orders for an Application
      summary: Get Title Orders for an Application
      description: >-
        Looks up active Title orders. Only applicable for customers with Title
        Exchange enabled.
      tags:
        - Home Lending - Applications
      parameters:
        - name: id
          in: path
          required: true
          description: application UUID
          schema:
            type: string
      responses:
        '200':
          description: Orders for Application
          content:
            application/json; charset=utf-8:
              schema:
                required:
                  - orders
                type: object
                properties:
                  orders:
                    type: array
                    description: Title Orders for this application
                    items:
                      type: object
                      required:
                        - id
                        - status
                      properties:
                        id:
                          description: UUID of the created order
                          type: string
                          format: uuid
                        status:
                          description: status of the created order
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        deletedAt:
                          type: string
                          format: date-time
                          nullable: true
                        applicationId:
                          description: UUID of the application
                          type: string
                          format: uuid
                        externalSystemId:
                          description: identifier of the title order in external system
                          type: string
                          nullable: true
                        commitmentDocumentId:
                          description: UUID of the title commitment document
                          type: string
                          format: uuid
                          nullable: true
                        titleAgencyName:
                          description: the basic name for this agency
                          type: string
                        commitmentInfo:
                          description: details related to title commitment
                          type: object
                          properties:
                            legalDescription:
                              type: string
                            parcelNumber:
                              type: string
                            policyAmount:
                              type: number
                            proposedInsured:
                              type: string
                            vesting:
                              type: string
                            effectiveDate:
                              type: string
                              format: date-time
                        titleAgencyInfo:
                          description: >-
                            title agency contact information, may vary based on
                            the loan property location
                          type: object
                          properties:
                            legalName:
                              description: the legal name for this agency
                              type: string
                            email:
                              type: string
                            streetAddressLine1:
                              type: string
                            streetAddressLine2:
                              type: string
                            city:
                              type: string
                            state:
                              type: string
                            zipCode:
                              type: string
                            phone:
                              type: string
                            licenseNumber:
                              type: string
                            bankAccountInfo:
                              description: bank wiring info for title transactions
                              type: object
                              properties:
                                accountNumber:
                                  type: string
                                routingNumber:
                                  type: string
        '400':
          description: Invalid Request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: request.body.applicationID should be string
        '401':
          description: Invalid Credentials
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: An error occurred during authentication
        '404':
          description: Not Found
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Order not found
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Internal Server Error
  /home-lending/applications/{id}/activities:
    get:
      operationId: Get Application Activities
      summary: Get Activities for an Application
      description: Get a paginated list of activities for a loan application
      tags:
        - Home Lending - Applications
      parameters:
        - name: id
          in: path
          required: true
          description: >-
            The UUID of the loan application in Blend's system. The static
            identifier that should be used to connect the application's identity
            across Blend and external integrations.
          schema:
            type: string
            format: uuid
        - name: verbs
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Verb'
          description: A list of activity verbs. Default is all verbs.
          required: false
        - name: cursor
          in: query
          schema:
            type: string
          description: >-
            An opaque string used for pagination, pass the cursor back to start
            at this position
          required: false
        - name: createdAfter
          in: query
          schema:
            type: string
            format: date-time
            example: '2022-08-03T20:07:27+00:00'
          description: Get activities created after this timestamp
          required: false
        - name: createdBefore
          in: query
          schema:
            type: string
            format: date-time
            example: '2022-08-03T20:07:27+00:00'
          description: Get activities created before this timestamp
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
          description: >-
            The number of activities to be provided for this call. Minimum is 1,
            maximum is 200, default is 100.
          required: false
      responses:
        '200':
          description: >-
            List of paginated activities, with a cursor to go to the previous
            page
          content:
            application/json:
              schema:
                type: object
                properties:
                  activities:
                    description: An list of activities
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'
                  prevCursor:
                    description: Cursor to use to get to the previous set of activities
                    type: string
                required:
                  - activities
                  - prevCursor
        '400':
          description: Invalid request
        default:
          description: Unexpected error
  /close/ron/{applicationId}/recordings:
    get:
      operationId: Get Remote Online Notary session recording file IDs
      summary: Get all recording file IDs associated with an application
      description: >-
        Returns an array of published file IDs for RON session video
        recording(s) associated with an application.
      tags:
        - Close
      parameters:
        - name: applicationId
          in: path
          required: true
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordingFiles:
                    description: >-
                      List of RON recording file IDs associated with an
                      application
                    type: array
                    items:
                      $ref: '#/components/schemas/SessionsListResponse'
                required:
                  - recordingFiles
        '404':
          description: Closing not found
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                  - display
                properties:
                  error:
                    type: string
                  display:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                  - message
                properties:
                  error:
                    type: string
                    example: Internal Server Error
                  display:
                    type: string
                    example: Something went wrong. Please try again later.
                  trackingId:
                    type: string
                    example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
  /close/ron/{applicationId}/recordings/{fileId}/download-url:
    get:
      operationId: Get Remote Online Notary session recording download url
      summary: Get download URL for RON session recording
      description: >-
        Returns a limited time URL to download the RON recording associated with
        a file ID.
      tags:
        - Close
      parameters:
        - name: applicationId
          in: path
          required: true
          description: >-
            The UUID of the loan in Blend's system. The static identifier that
            should be used to connect the loan's identity across Blend and
            external integrations.
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          required: true
          description: The ID of the file for the RON session recording in Blend's system.
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadUrl:
                    description: The url to download the RON recording session file
                    type: string
                  expiresAt:
                    description: >-
                      The date when the download url expires provided as an ISO
                      string
                    type: string
                required:
                  - downloadUrl
                  - expiresAt
        '403':
          description: Unauthorized request
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                  - display
                properties:
                  error:
                    type: string
                  display:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - error
                  - message
                properties:
                  error:
                    type: string
                    example: Internal Server Error
                  display:
                    type: string
                    example: Something went wrong. Please try again later.
                  trackingId:
                    type: string
                    example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
components:
  schemas:
    RawApplicationExportData:
      type: string
      description: The raw Fannie or Mismo file without any encoding (utf-8).
    ApplicationId:
      type: string
      description: >-
        The UUID of the application in Blend's system. The static identifier
        that should be used to connect the application's identity across Blend
        and external integrations.
      example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
    DocumentId:
      type: string
      description: >-
        The UUID of the document in Blend's system. The static identifier that
        should be used to access documents across Blend and external
        integrations.
      example: 300c9f4c-c90b-40a4-94d4-f2a718b9be61
    FollowUpId:
      type: string
      description: >-
        The UUID of the followup in Blend's system. This field will be
        deprecated in next major release, therefore it is recommended to use id
        instead.
      example: 0057e00b-15fd-4d3a-8389-18a3ca937bee
    PartyId:
      type: string
      description: The UUID of the party in Blend's system. Equivalent to borrowerId
      example: 592e17e5-0392-41e5-aca3-b0351914e60d
    ReferenceNumber:
      type: string
      description: >-
        A mutable identifier of the application. Not safe to use to connect the
        application's identity across Blend and external systems because it can
        and (for most implementations) will change. Default value is an
        incremented ID set by Blend. Other Values could be LOS GUID after export
        of the loan to LOS (may be the same as the losID field or different),
        Can be manually set to anything by lenders in the UI or programmatically
        via the API.
      example: 124123
    LosId:
      type: string
      description: >-
        The UUID or GUID of the current resource in the LOS AFTER initial export
        to the LOS. For loans this may match the loan reference number depending
        on the LOS and if the customer has selected to use only GUIDs instead of
        UUIDs in their LOS settings. For all other resources, it is the static
        identifier of this resource in the LOS.
      example: Loan-12391
    CrmId:
      type: string
      description: >-
        The unique identifier of the application in a lender's Customer
        Relationship Management (CRM) system (e.g. Salesforce, Velocify, etc.).
        This value should not change over time and should be used to connect the
        application's identity between Blend and the CRM.
      example: crmLead1
    LosPrimaryKey:
      type: string
      description: >-
        The unique identifier of the loan in a lender's Loan Origination System,
        or LOS (e.g. Empower, Encompass, etc.). This value should not change
        over time and should be used to connect the loan's identity between
        Blend and the LOS.
      example: Loan-234
    DocumentType:
      type: string
      description: Blend document type
      enum:
        - LOE_PUBLIC_RECORD:BANKRUPTCY
        - LOE_PUBLIC_RECORD:TAX_LIEN
        - LOE_PUBLIC_RECORD:JUDGMENT
        - LOE_LARGE_DEPOSITS:TRANSFER
        - LOE_LARGE_DEPOSITS:SALE_OF_ASSET
        - LOE_LARGE_DEPOSITS:INCOME
        - LOE_LARGE_DEPOSITS:GIFT
        - LOE_LARGE_DEPOSITS:OTHER
        - BANK_STATEMENT
        - BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT
        - BANK_STATEMENT:_STOCK_ACCOUNT
        - FINANCIAL_STATEMENT:_BALANCE_SHEET
        - FINANCIAL_STATEMENT:_INCOME
        - IRS1040
        - IRS1041
        - IRS1120
        - IRS1120_S
        - LLC_BTR_DOC
        - IRSW2
        - CRAT4
        - '1003'
        - 4506t
        - TAX_TRANSCRIPT
        - DOCUSIGN_CERT_OF_COMP
        - PAY_STUB
        - PROPERTY_INSURANCE_POLICY:_GENERAL
        - PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE
        - PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION
        - PROPERTY_INSURANCE_POLICY:_HOMEOWNERS
        - PROPERTY_INSURANCE_POLICY:_VOLCANO
        - PROPERTY_INSURANCE_POLICY:_FLOOD
        - PROPERTY_INSURANCE_POLICY:_HAZARD
        - INSURANCE_AGENT_CONTACT_INFO
        - PURCHASE_AGREEMENT
        - OTHER_DISCLOSURES
        - REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T
        - RETIREMENT_ACCOUNT_STATEMENT
        - SOCIAL_SECURITY_AWARD_LETTER
        - TRUST_AGREEMENT
        - VERIFICATION_OF_EMPLOYMENT
        - VERIFICATION_OF_EMPLOYMENT_REVERIFY
        - VERIFICATION_OF_EMPLOYMENT_RETRIEVED
        - VERIFICATION_OF_INCOME
        - PENSION_AWARD_LETTER
        - ANNUITY_AWARD_LETTER
        - DEFERRED_COMPENSATION_AWARD_LETTER
        - VERIFICATION_OF_MORTGAGE_OR_RENT
        - VERIFICATION_OF_RENT
        - VERIFICATION_OF_MORTGAGE
        - RETIREMENT_LIQUIDITY_TERMS
        - LETTER_OF_EXPLANATION:_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT
        - LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION:_JOB_GAP
        - LETTER_OF_EXPLANATION:_LARGE_DEPOSITS
        - LETTER_OF_EXPLANATION:SHORT_SALE
        - PROPERTY_TAX_BILL
        - MORTGAGE_STATEMENT
        - BORROWER_CONSENT_FORM
        - BORROWER_INCOME_VERIFICATION_CONSENT_FORM
        - APPRAISAL_WAIVER
        - INTENT_TO_PROCEED
        - NATIONAL_IDENTIFICATION
        - PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN
        - MARRIAGE_CERTIFICATE
        - DEATH_CERTIFICATE
        - DIVORCE_DECREE
        - NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD
        - CONDOMINIUM_OCCUPANCY_CERTIFICATE
        - HOMEOWNERS_ASSOCIATION_CERTIFICATION
        - BANK_DEPOSIT_SLIP
        - PROPERTY_INSURANCE_POLICY:_HURRICANE
        - PROPERTY_INSURANCE_POLICY:_LEASEHOLD
        - PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY
        - PROPERTY_INSURANCE_POLICY:_STORM
        - PROPERTY_INSURANCE_POLICY:_TORNADO
        - PROPERTY_INSURANCE_POLICY:_WIND
        - CREDIT_REPORT
        - PERMANENT_RESIDENT_IDENTIFICATION
        - PROPERTY_INSURANCE_POLICY:_CONDOMINIUM
        - APPRAISAL_REPORT_SINGLE FAMILY
        - APPRAISAL_REPORT_2_-_4_UNIT
        - APPRAISAL_REPORT_MANUFACTURED_HOME
        - APPRAISAL_REPORT_COOP
        - APPRAISAL_REPORT_EXTERIOR_ONLY
        - APPRAISAL_REPORT_AVM
        - APPRAISAL_REPORT_RENT_SURVEY
        - APPRAISAL_REPORT_OPERATING_INCOME_SCHEDULE
        - APPRAISAL_REPORT_MARKET_CONDITIONS_ADDENDUM
        - APPRAISAL_REPORT_UPDATE_AND_OR_COMPLETION_REPORT
        - APPRAISAL_REPORT_PROPERTY_CONDITION_REPORT
        - APPRAISAL_REPORT_DESK_REVIEW
        - SETTLEMENT_STATEMENT_HUD1
        - VISA
        - PASSPORT
        - NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT
        - DD_214
        - VA_STATEMENT_OF_SERVICE
        - VA_CERTIFICATE_OF_ELIGIBILITY
        - CREDIT_AUTHORIZATION
        - CREDIT_CARD_AUTHORIZATION
        - BIRTH_CERTIFICATE
        - INVOICE_UTILITY_BILL
        - ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION_NAME_VARIATION
        - POWER_OF_ATTORNEY
        - RENTAL_AGREEMENT
        - RENTAL_SECURITY_DEPOSIT
        - VERIFICATION_OF_EMPLOYMENT_LETTER
        - VERIFICATION_OF_EMPLOYMENT_WRITTEN
        - BUSINESS_LICENSE
        - IRS1099
        - K1
        - IRS1065
        - SOCIAL_SECURITY_PROOF_OF_RECEIPT
        - EMPLOYMENT_OFFER_LETTER
        - RENTAL_INCOME_PROOF_OF_RECEIPT
        - RETIREMENT_AWARD_LETTER
        - VA_CHILD_CARE_CERTIFICATE
        - VA_AWARD_LETTER
        - BONUS_AND_COMMISSION_DOCUMENTATION
        - CHILD_SUPPORT_INCOME
        - ALIMONY_INCOME
        - CHILD_SUPPORT_LIABILITY
        - ALIMONY_LIABILITY
        - GENERATED_ASSET_STATEMENT
        - ACHDEBIT_AUTHORIZATION
        - GIFT_LETTER
        - PROOF_OF_LIQUIDATION
        - CREDIT_REPORT_NON_TRADITIONAL
        - CREDIT_SUPPLEMENT
        - BANKRUPTCY_DISCHARGE_NOTICE
        - BANKRUPTCY_FILING
        - SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE
        - FRAUD_ALERT
        - STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT
        - JUDGMENT
        - COSIGNED_LIABILITY
        - PURCHASE_AGREEMENT_ADDENDUM
        - HOME_INSPECTION_REPORT
        - PEST_INSPECTION_REPORT
        - ROOF_INSPECTION_REPORT
        - POOL_INSPECTION_REPORT
        - EARNEST_MONEY_DEPOSIT
        - FLOOD_HAZARD_NOTICE
        - FLOOD_CERTIFICATION
        - TAX_CERTIFICATE
        - AMENDATORY_CLAUSE
        - PAYOFF_STATEMENT
        - CLOSING_PROTECTION_LETTER
        - SCHEDULE_OF_REAL_ESTATE
        - BORROWER_CERTIFICATION
        - OCCUPANCY_CERTIFICATION
        - TRUTH_IN_LENDING
        - GOOD_FAITH_ESTIMATE
        - ESCROW_WAIVER
        - LOAN_ESTIMATE
        - CLOSING_DISCLOSURE
        - GENERAL_LOAN_ACKNOWLEDGMENT
        - HUD_VA_ADDENDUM
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT
        - MORTGAGE_INSURANCE
        - NET_TANGIBLE_BENEFIT
        - NOTE
        - HOA_BILL
        - ARTICLES_OF_INCORPORATION
        - BYLAWS_OPERATING_AGREEMENT
        - AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE
        - DISCLOSURES_TRACKING_REPORT
        - ENERGY_EFFICIENT_MORTGAGE_WORKSHEET
        - IMPORTANT_NOTICE_TO_HOMEBUYER
        - FAIR_LENDING_NOTICE
        - FOR_YOUR_PROTECTION_HOME_INSPECTION
        - RATE_LOCK_AGREEMENT
        - BOND_CERTIFICATE
        - CUSTOMER_IDENTIFICATION_VERIFICATION
        - VERIFICATION_OF_SSN
        - RESIDUAL_INCOME_LETTER
        - OTHER
        - DU_UNDERWRITING_FINDINGS
        - DU_UNDERWRITING_LOG
        - DU_UNDERWRITING_DEFAULTS
        - OTHER_APPLICATION
        - PRE_QUALIFICATION_LETTER
        - APPRAISAL
        - PRE_APPROVAL_LETTER
        - PRE_APPROVAL_LETTER:_PREVIEW
        - COMPLIANCE_REPORT
        - LOAN_SNAPSHOT
        - HMDA_REPORT
        - ATTACHMENT
        - LETTER_OF_EXPLANATION:_GENERATED_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_GENERATED_ADDRESS_VERIFICATION
        - GENERATED_GIFT_LETTER
        - LETTER_OF_EXPLANATION:_GENERATED_LATE_PAYMENT
        - LETTER_OF_EXPLANATION:_GENERATED_PUBLIC_RECORD
        - LETTER_OF_EXPLANATION:_GENERATED_LARGE_DEPOSIT
        - MEDICAL_RESIDENCY_FELLOWSHIP
        - MEDICAL_LICENSE_DIPLOMA
        - NEAREST_LIVING_RELATIVE
        - EMPLOYMENT_CONTRACT
        - GENERATED_COST_WORKSHEET
        - FNMA_NETPAY_REPORT_ASSETS
        - FNMA_NETPAY_REPORT_INCOME
        - FNMA_NETPAY_BORROWERS_REQUEST
        - FNMA_NETPAY_GSE_API_XML
        - KNOW_YOUR_CUSTOMER
        - CLOSING_PACKAGE
        - PROMISSORY_NOTE
        - DEED_OF_TRUST
        - TITLE_DOCUMENT
        - CLOSING_SETTLEMENT_ONLY
    ApplicationExperienceType:
      type: string
      description: ENUM describing the type of borrower experience for this application
      enum:
        - FULL_APPLICATION
        - LENDER_ENTERED
        - POST_SUBMISSION
      example: POST_SUBMISSION
    HomeLendingSolutionSubType:
      type: string
      description: ENUM describing the solution sub type of home lending applications
      enum:
        - CANADA_MORTGAGE
        - HELOAN
        - HELOC
        - MORTGAGE
        - MORTGAGE_MODIFICATION
        - OTHER
      example: MORTGAGE
    AffordabilityRangeSchema:
      type: array
      items:
        type: object
        required:
          - debtToIncomeRatio
          - purchasePrice
        properties:
          debtToIncomeRatio:
            type: number
            description: >-
              The combined debt to income ratio (DTI) of all borrowers on the
              loan
            example: 0.36
          purchasePrice:
            type: number
            description: >-
              The max purchase price a borrower could afford at the specified
              DTI
            example: 375000
    ArchiveStatusSchema:
      type: boolean
      description: If set to true, will archive the referenced application
      example: false
    ArchivedStatusSchema:
      type: boolean
      description: True if the application has been archived
      example: false
    ApplicationLinks:
      type: object
      properties:
        mismo:
          type: object
          properties:
            href:
              type: string
              description: File export URL
              example: >-
                https://api.blendlabs.com/home-lending/applications/58d20dba-9dca-44b7-b72b-15debfd23301/file-export?format=mismo
            meta:
              type: object
              properties:
                version:
                  type: string
                  description: File export version
                  example: 3.3.1
        fannie:
          type: object
          properties:
            href:
              type: string
              description: File export URL
              example: >-
                https://api.blendlabs.com/home-lending/applications/58d20dba-9dca-44b7-b72b-15debfd23301/file-export?format=fannie
            meta:
              type: object
              properties:
                version:
                  type: string
                  description: File export version
                  example: '3.2'
    PropertyUsageType:
      type: string
      description: ENUM describing the property's intended usage category
      enum:
        - PRIMARY_RESIDENCE
        - SECOND_HOME
        - PRIMARY_AND_INVESTMENT
        - INVESTMENT
    EstimatedClosingDate:
      type: string
      format: date-time
      description: UTC timestamp of the estimated date to close on the subject property
      example: '2019-06-02T00:00:00.000Z'
    LoanAmount:
      type: number
      description: >-
        The amount of money (dollars and cents) for which the applicant is
        applying
      example: 95001.75
    LosMilestoneSchema:
      type: object
      properties:
        losMilestone:
          $ref: '#/components/schemas/LosMilestoneName'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
    SingleLosMilestoneSchema:
      type: object
      required:
        - losMilestone
      properties:
        losMilestone:
          $ref: '#/components/schemas/LosMilestoneName'
    LosMilestoneName:
      type: string
      description: >-
        ENUM describing that status of the application. The following milestones
        can be configured to be displayed to the Borrower on their landing page
        after submitting their application in Blend (SUBMITTED, PROCESSING,
        UNDERWRITING, CONDITIONAL APPROVAL, APPROVED, CLOSING, CLOSED, FUNDED).
        The other milestones are only visible to the lender application.
      enum:
        - SUBMITTED
        - PREQUALIFIED
        - PREAPPROVED
        - PROCESSING
        - UNDERWRITING
        - CONDITIONAL_APPROVAL
        - APPROVED
        - CLOSING
        - CLOSED
        - APPRAISAL_ORDERED
        - APPRAISAL_RECEIVED
        - CLEAR_TO_CLOSE
        - DOCS_SENT
        - FUNDED
        - SET_UP
        - DECISIONED
        - CONDITIONS_SUBMITTED
        - APPRAISAL_APPROVED
        - RATE_LOCKED
        - CLOSING_DISCLOSURE_SENT
        - DENIED
    TaxpayerIdentifierSchema:
      oneOf:
        - type: object
          title: Social Security Number
          properties:
            value:
              type: string
              description: A social security number
              pattern: ^\d{9}$
              example: '000113933'
            type:
              type: string
              description: ENUM describing the type of identifier being used.
              enum:
                - SOCIAL_SECURITY_NUMBER
          required:
            - value
            - type
        - type: object
          title: Other
          properties:
            value:
              type: string
              description: The identifier value.
              example: '000113933'
            type:
              type: string
              description: ENUM describing the type of identifier being used.
              enum:
                - EMPLOYER_IDENTIFICATION_NUMBER
                - INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER
                - PREPARER_TAXPAYER_IDENTIFICATION_NUMBER
                - TAXPAYER_IDENTIFICATION_NUMBER_FOR_PENDING_USADOPTIONS
          required:
            - value
            - type
    AddressSchema:
      type: object
      required:
        - streetAddressLine1
        - city
        - state
        - zipCode
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          type: string
          description: Two-character US state code
          example: IL
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
        zipCodePlusFour:
          type: string
          description: Four-digit additional US zip code numbers
          example: '1000'
        countyName:
          type: string
          description: County name
          example: Cook County
    PartialAddressSchema:
      type: object
      required:
        - city
        - state
        - zipCode
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          type: string
          description: Two-digit US state code
          example: IL
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
        zipCodePlusFour:
          type: string
          description: Four-digit additional US zip code numbers
          example: '1000'
        countyName:
          type: string
          example: DuPage
    AddressWithCountyNameSchema:
      type: object
      required:
        - streetAddressLine1
        - city
        - state
        - zipCode
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          type: string
          description: Two-character US state code
          example: IL
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
        zipCodePlusFour:
          type: string
          description: Four-digit additional US zip code numbers
          example: '1000'
        countyName:
          type: string
          example: Cook County
    NameSchema:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: Tanya
        middleName:
          type: string
          example: M
        lastName:
          type: string
          example: Williams
        suffixName:
          type: string
          example: III
    TaxTranscriptNameSchema:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: Tanya
        middleName:
          type: string
          example: Marie
        lastName:
          type: string
          example: Williams
    BorrowerPairSchema:
      type: object
      properties:
        primaryBorrowerId:
          type: string
          description: UUID of the first applicant on a specific 1003
          example: 1001db24-14b2-4179-8e1e-08bbb2fb94b3
        secondaryBorrowerId:
          type: string
          description: UUID of the second applicant on a specific 1003
          example: 56632a12-1bd7-4014-8571-cff53c346738
    SignerInfoSchema:
      type: object
      required:
        - name
        - partyId
        - status
        - completedAt
      properties:
        name:
          type: string
          description: Full name of signer
          example: Homer Loanseeker
        partyId:
          type: string
          format: guid
          description: Party UUID of signer
          example: fecbc83e-7fd2-421d-b21d-3b5634d5c5f0
        status:
          type: string
          description: Signing status
          enum:
            - SIGNED
            - DECLINED
        completedAt:
          type: string
          format: date-time
          description: UTC Timestamp of signature
          example: '2018-10-03T20:07:27+00:00'
    DocumentAdditionalEntities:
      type: object
      description: Additional entities ids associated with the document
      properties:
        entityType:
          type: array
          description: Entities ids of a given entity type
          items:
            type: string
            example: 5efd5f3e-b527-4aed-a671-6689d2893683
    ApplicationRequestPartySchema:
      type: object
      required:
        - name
      properties:
        name:
          type: object
          $ref: '#/components/schemas/NameSchema'
        email:
          type: string
          description: Party's email
          example: johnhernandez@mail.com
        taxpayerIdentifier:
          $ref: '#/components/schemas/TaxpayerIdentifierSchema'
        dateOfBirth:
          type: string
          format: date-time
          description: UTC Timestamp of the Date of Birth
          example: '2018-10-03T20:07:27+00:00'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumberSchema'
        currentAddress:
          $ref: '#/components/schemas/AddressParamSchema'
        mailingAddress:
          $ref: '#/components/schemas/AddressParamSchema'
        noEmailYet:
          type: boolean
          default: false
          description: >-
            Indicates that the party's email address is not known yet, and
            generates a unique placeholder email ending with
            `@interim.sso.blend.com`.
    IncomeSchema:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: >-
            ENUM describing what type of income this is. Please note that these
            are all available income types, some of them may not valid for your
            selected loan type.
          enum:
            - ALIMONY
            - ANNUITY
            - AUTOMOBILE_ALLOWANCE
            - AUTOMOBILE_EXPENSE_ACCOUNT
            - BASE
            - BOARDER_INCOME
            - BONUS
            - BORROWER_ESTIMATED_TOTAL_MONTHLY_INCOME
            - CAPITAL_GAINS
            - CAR_ALLOWANCE
            - CHILD_SUPPORT
            - COMMISSIONS
            - CONTRACT_BASIS
            - DEFERRED_COMPENSATION
            - DEFINED_CONTRIBUTION_PLAN
            - DISABILITY
            - DIVIDENDS_INTEREST
            - EMPLOYMENT_RELATED_ASSETS
            - FOREIGN_INCOME
            - FOSTER_CARE
            - HOUSING_ALLOWANCE
            - HOUSING_OR_PARSONAGE
            - MILITARY_BASE_PAY
            - MILITARY_CLOTHES_ALLOWANCE
            - MILITARY_COMBAT_PAY
            - MILITARY_ENTITLEMENTS
            - MILITARY_FLIGHT_PAY
            - MILITARY_HAZARD_PAY
            - MILITARY_OVERSEAS_PAY
            - MILITARY_PROP_PAY
            - MILITARY_QUARTERS_ALLOWANCE
            - MILITARY_RATIONS_ALLOWANCE
            - MILITARY_VARIABLE_HOUSING_ALLOWANCE
            - MISCELLANEOUS_INCOME
            - MORTGAGE_CREDIT_CERTIFICATE
            - MORTGAGE_DIFFERENTIAL_PAYMENTS
            - NET_RENTAL_INCOME
            - NON_BORROWER_CONTRIBUTION
            - NOTES_RECEIVABLE
            - OTHER
            - OVERTIME
            - PENSION
            - PROPOSED_GROSS_RENT_FOR_SUBJECT_PROPERTY
            - PUBLIC_ASSISTANCE
            - REAL_ESTATE_OWNED_GROSS_RENTAL_INCOME
            - RETIREMENT
            - ROYALTY_PAYMENT
            - SEASONAL_INCOME
            - SEPARATE_MAINTENANCE
            - SOCIAL_SECURITY
            - SUBJECT_PROPERTY_NET_CASH_FLOW
            - TEMPORARY_LEAVE
            - TIP_INCOME
            - TRAILING_CO_BORROWER_INCOME
            - TRUSTS
            - UNEMPLOYMENT_BENEFITS
            - VABENEFITS_NON_EDUCATIONAL
            - VA_COMPENSATION
            - WORKERS_COMPENSATION
        yearlyIncome:
          type: object
          required:
            - code
            - amount
          properties:
            code:
              type: string
              description: ISO code of the currency.
              example: USD
            amount:
              type: number
              description: Amount of the currency.
              example: 1234
        description:
          type: string
          description: A description of this income.
          example: Sole income
    EmployerSchemaBase:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: ENUM describing whether this employer is current or previous
          enum:
            - PREVIOUS
            - CURRENT
        name:
          type: string
          description: The employer's name.
          example: Blend
        type:
          type: string
          description: Employment type
          enum:
            - GENERAL_EMPLOYMENT
            - MILITARY
            - SELF_EMPLOYED
            - INDEPENDENT_CONTRACTOR
        address:
          description: Employer address
          $ref: '#/components/schemas/AddressSchema'
        phoneNumber:
          description: Employer phone number
          type: number
          example: 1112223333
        startDate:
          type: string
          format: date-time
          description: UTC Timestamp of the start of employment
          example: '2018-10-03T20:07:27+00:00'
        endDate:
          type: string
          format: date-time
          description: UTC Timestamp of the end of employment
          example: '2018-11-03T20:07:27+00:00'
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/IncomeSchema'
    OtherIncomeSchema:
      type: object
      required:
        - type
        - amount
        - frequency
      properties:
        type:
          type: string
          description: >-
            ENUM describing what type of income this is. Please note that these
            are all available income types, some of them may not valid for your
            selected loan type.
          enum:
            - ALIMONY
            - ANNUITY
            - AUTOMOBILE_ALLOWANCE
            - AUTOMOBILE_ALLOWANCE
            - CAPITAL_GAINS
            - CAR_ALLOWANCE
            - CHILD_SUPPORT
            - DISABILITY
            - DEFERRED_COMPENSATION
            - DIVIDENDS_INTEREST
            - HOUSING_OR_PARSONAGE
            - MORTGAGE_CREDIT_CERTIFICATE
            - MORTGAGE_DIFFERENTIAL_PAYMENTS
            - NOTES_RECEIVABLE
            - OTHER
            - PENSION
            - SOCIAL_SECURITY
            - PUBLIC_ASSISTANCE
            - ROYALTY_PAYMENT
            - SEPARATE_MAINTENANCE
            - TRUSTS
            - UNEMPLOYMENT_BENEFITS
            - VA_COMPENSATION
            - RETIREMENT
        amount:
          type: number
          description: Amount of the currency
          example: 1000
        frequency:
          type: string
          description: ENUM describing how often this income is received
          enum:
            - MONTHLY
            - YEARLY
            - WEEKLY
    EmployerResponseSchema:
      type: object
      properties:
        employers:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EmployerSchemaBase'
              - type: object
                properties:
                  id:
                    type: string
                    description: >-
                      The UUID of the Employer in Blend's system. The static
                      identifier that should be used to connect the employer's
                      identity across Blend and external integrations.
                    example: 338f3da4-9251-4c49-b97d-f503f7f179a2
    EmployerIngestSchema:
      type: object
      properties:
        employers:
          type: array
          items:
            $ref: '#/components/schemas/EmployerSchemaBase'
    OtherIncomeIngestSchema:
      type: object
      properties:
        otherIncomes:
          type: array
          items:
            $ref: '#/components/schemas/OtherIncomeSchema'
    BorrowerAddressSchema:
      type: object
      properties:
        type:
          type: string
          description: Type of address
          enum:
            - CURRENT
            - FORMER
            - MAILING
            - OTHER
          example: CURRENT
        address:
          $ref: '#/components/schemas/AddressSchema'
    PartyAddressSchema:
      type: object
      properties:
        type:
          type: string
          description: Type of address
          enum:
            - CURRENT
            - FORMER
            - MAILING
            - OTHER
          example: CURRENT
        address:
          $ref: '#/components/schemas/AddressSchema'
        moveInDate:
          type: string
          format: date-time
          description: UTC Timestamp of the move in for current address
          example: '2018-10-03T20:07:27+00:00'
    AddressParamSchema:
      allOf:
        - $ref: '#/components/schemas/AddressSchema'
        - type: object
          properties:
            moveInDate:
              type: string
              format: date-time
              description: UTC Timestamp of the move in for current address
              example: '2018-10-03T20:07:27+00:00'
    UserAssignmentRequestSchema:
      type: object
      properties:
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserAssignmentSchema'
    UserAssignmentResponseSchema:
      type: array
      items:
        $ref: '#/components/schemas/UserAssignmentSchema'
    UserAssignmentSchema:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: UUID of a valid lender user
          example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
        role:
          type: string
          description: Assignment role (defaults to ASSIGNEE)
          enum:
            - PRIMARY_ASSIGNEE
            - ASSIGNEE
    LOSPartyIdSchema:
      type: string
      description: Party ID in LOS
      example: Party1
    UsernameSchema:
      type: string
      description: A unique identifier of the party passed to Blend during SSO login
      example: testUsername123
    PartySchema:
      type: object
      required:
        - id
        - applicationId
        - type
      properties:
        id:
          type: string
          description: >-
            The UUID of the Party in Blend's system. The static identifier that
            should be used to connect the party's identity across Blend and
            external integrations.
          example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        type:
          type: string
          description: Identifying type of party to the application
          enum:
            - BORROWER
            - COBORROWER
            - APPRAISER
            - ATTORNEY_IN_FACT
            - AUTHORIZED_REPRESENTATIVE
            - AUTHORIZED_THIRD_PARTY
            - BUILDER
            - GIFT_DONOR
            - HAZARD_INSURANCE_AGENT
            - LANDLORD
            - NON_APPLICANT_USER
            - NON_TITLE_NON_SPOUSE_OWNERSHIP_INTEREST
            - NON_TITLE_SPOUSE
            - OTHER
            - PROPERTY_SELLER
            - REAL_ESTATE_AGENT
            - REAL_ESTATE_LISTING_AGENT
            - REAL_ESTATE_SELLING_AGENT
            - SETTLOR
            - SETTLOR_TRUSTEE
            - SPOUSE
            - TITLE_HOLDER
            - TITLE_HOLDER_SETTLOR_TRUSTEE
            - TITLE_HOLDER_TRUSTEE
            - TRUSTEE
            - UNSPECIFIED
          example: SPOUSE
        name:
          $ref: '#/components/schemas/NameSchema'
        email:
          type: string
          description: Party email
          example: party@email.com
        status:
          type: string
          description: An ENUM for the status of the party in the application.
          enum:
            - CREATED
            - INVITED
            - IN_APPLICATION
            - SUBMITTED
          example: INVITED
        dateOfBirth:
          type: string
          format: date-time
          description: UTC timestamp representing the date of birth
          example: '2018-10-03T20:07:27+00:00'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumberSchema'
        econsent:
          $ref: '#/components/schemas/EconsentSchema'
        relationship:
          $ref: '#/components/schemas/RelationshipSchema'
        veteranStatus:
          $ref: '#/components/schemas/VeteranStatusSchema'
        losPartyId:
          type: string
          description: The UUID or GUID of the current party in the LOS.
          example: Party-54312
        username:
          $ref: '#/components/schemas/UsernameSchema'
        credit:
          $ref: '#/components/schemas/PartyCreditSchema'
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/PartyLiabilitySchema'
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingIncomeSchema'
        verificationRefId:
          description: >-
            Object containing a reference UUID for a party's verified assets,
            income and/or employment.
          $ref: '#/components/schemas/VerificationRefIdSchema'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/PartyAddressSchema'
        taxpayerIdentifier:
          $ref: '#/components/schemas/TaxpayerIdentifierSchema'
        firstTimeHomeBuyer:
          type: boolean
          description: Indicates whether borrower is a first-time home buyer.
          example: true
        language:
          $ref: '#/components/schemas/LanguageSchema'
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
    EconsentSchema:
      type: object
      properties:
        status:
          type: string
          description: State of econsent
          enum:
            - Accepted
            - Declined
            - Pending
          example: Accepted
        date:
          type: string
          format: date-time
          description: UTC Timestamp of when Econsent was last updated
          example: '2018-08-30T19:31:38.902Z'
        ip:
          type: string
          description: IP Address from which econsent was given
          example: 8.8.8.8
    CustomFields:
      type: object
      description: Custom fields on GET responses for supported resources
      properties:
        fieldName:
          $ref: '#/components/schemas/CustomFieldSchema'
    CustomMetadata:
      type: object
      description: Custom metadata on GET responses for supported resources
      properties:
        fieldName:
          $ref: '#/components/schemas/CustomFieldSchema'
    CustomFieldSchema:
      type: object
      properties:
        fieldValue:
          type: string
          description: value of the field
          example: fldValue
        createdAt:
          type: string
          format: date-time
          description: UTC Timestamp of when the field was created or updated
          example: '2018-08-30T19:31:38.902Z'
    RequestCustomFields:
      type: object
      description: Custom fields on PATCH or POST requests for supported resources
      example:
        fieldName_1: fieldValue_1
        fieldName_2: fieldValue_2
      additionalProperties:
        type: string
        description: value of the field
        example: fldValue
    RequestCustomMetadata:
      type: object
      description: Custom metadata on PATCH or POST requests for supported resources
      example:
        metadataName_1: metadataValue_1
        metadataName_2: metadataValue_2
      additionalProperties:
        type: string
        description: value of the metadata
        example: metadataValue
    PostEconsentSchema:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: State of econsent
          enum:
            - Accepted
            - Declined
          example: Accepted
        date:
          type: string
          format: date-time
          description: >-
            UTC Timestamp of when Econsent was given. Optional. Null is
            accepted.
          example: '2018-08-30T19:31:38.902Z'
        ip:
          type: string
          description: >-
            IP Address from which econsent was given. Optional. Null is
            accepted.
          example: 8.8.8.8
    RelationshipSchema:
      type: object
      properties:
        maritalStatus:
          type: string
          description: Marital Status
          enum:
            - MARRIED
            - NOT_PROVIDED
            - SEPARATED
            - UNKNOWN
            - UNMARRIED
          example: MARRIED
    VeteranStatusSchema:
      type: object
      properties:
        status:
          type: string
          description: Veteran Status
          enum:
            - NotEligible
            - ActiveDuty
            - NationalGuard
            - Reserves
            - Veteran
            - RetiredDischarged
            - SurvivingSpouse
            - ReserveMemberNeverActivated
            - ReserveNationalGuardNeverActivated
            - None
          example: ActiveDuty
    LanguageSchema:
      type: object
      properties:
        preferredLanguage:
          type: string
          description: Preferred Language
          enum:
            - ENGLISH
            - CHINESE
            - KOREAN
            - SPANISH
            - TAGALOG
            - VIETNAMESE
            - OTHER
            - REFUSE_TO_PROVIDE
          example: ENGLISH
        otherLanguage:
          type: string
          description: Other Preferred Language
    OtherMortgageSchema:
      type: object
      properties:
        creditLimit:
          type: number
          description: Credit Limit in dollars and cents
        creditorName:
          type: string
          description: Creditor Name
        lienAmount:
          type: number
          description: Lien Amount
          example: 200000
        lienType:
          type: string
          enum:
            - FIRST
            - SUBORDINATE
          description: Lien Type ENUM
          example: FIRST
        loanAmount:
          type: number
          description: Loan Amount
          example: 300000
        monthlyPayment:
          type: number
          description: Monthly Payment in dollars and cents
          example: 1200.47
        type:
          type: string
          description: Mortgage Type
          enum:
            - CONVENTIONAL
            - FHA
            - OTHER
            - USDARURAL_DEVELOPMENT
            - VA
          example: CONVENTIONAL
        willPayOff:
          type: boolean
          description: Will pay off this mortgage at or before closing
          example: true
    VerificationRefIdSchema:
      type: object
      required:
        - id
        - lastUpdated
      properties:
        id:
          type: string
          description: >-
            The most up to date UUID used to reference verified assets, income,
            and/or employment
          example: db4f3971-68ca-4e0b-98a7-795233249ba2
        lastUpdated:
          type: string
          format: date-time
          description: UTC Timestamp of when this verification reference id was generated.
          example: '2019-05-16T13:12:03.382Z'
    PartyLiabilitySchema:
      type: object
      required:
        - type
        - monthlyPayment
      properties:
        type:
          type: string
          description: ENUM indicating the type of liability
          enum:
            - ALIMONY
            - CHILD_SUPPORT
            - COLLECTIONS_JUDGMENTS_AND_LIENS
            - DEFERRED_STUDENT_LOAN
            - DELINQUENT_TAXES
            - FIRST_POSITION_MORTGAGE_LIEN
            - GARNISHMENTS
            - HELOC
            - HOMEOWNERS_ASSOCIATION_LIEN
            - INSTALLMENT
            - LEASE_PAYMENT
            - MORTGAGE_LOAN
            - OPEN30_DAY_CHARGE_ACCOUNT
            - OTHER
            - PERSONAL_LOAN
            - REVOLVING
            - SECOND_POSITION_MORTGAGE_LIEN
            - TAXES
            - TAX_LIEN
            - THIRD_POSITION_MORTGAGE_LIEN
            - UNSECURED_HOME_IMPROVEMENT_LOAN_INSTALLMENT
            - UNSECURED_HOME_IMPROVEMENT_LOAN_REVOLVING
            - SEPARATE_MAINTENANCE_EXPENSE
            - JOB_RELATED_EXPENSES
        monthlyPayment:
          type: number
          description: Monthly payment amount
          example: 3000
    PartyCreditSchema:
      type: object
      properties:
        creditReferenceNumber:
          type: string
          description: >-
            Unique identifier for the credit pull as returned by the credit
            provider.
          example: ACH45064
        creditPullDate:
          type: string
          format: date-time
          description: UTC Timestamp of when credit was pulled for this party.
          example: 2019-08-01T16:41.168Z
        creditPullType:
          type: string
          description: Pull Type of the active credit report for this party.
          enum:
            - Hard
            - Soft
          example: Hard
        equifaxScore:
          type: number
          description: Party's Equifax credit score.
          example: 745
        experianScore:
          type: number
          description: Party's Experian credit score.
          example: 755
        transUnionScore:
          type: number
          description: Party's TransUnion credit score.
          example: 750
        estimatedCreditScore:
          type: number
          description: Party's self-stated credit score.
          example: 760
    PartyResponseSchema:
      type: object
      required:
        - id
        - applicationId
        - type
      properties:
        id:
          type: string
          description: >-
            The UUID of the Party in Blend's system. The static identifier that
            should be used to connect the party's identity across Blend and
            external integrations.
          example: 2f345acb-6ac4-4bd0-b04a-dc0b9ad76e71
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        type:
          type: string
          enum:
            - COBORROWER
            - APPRAISER
            - ATTORNEY_IN_FACT
            - AUTHORIZED_REPRESENTATIVE
            - AUTHORIZED_THIRD_PARTY
            - BUILDER
            - GIFT_DONOR
            - HAZARD_INSURANCE_AGENT
            - LANDLORD
            - NON_APPLICANT_USER
            - NON_TITLE_NON_SPOUSE_OWNERSHIP_INTEREST
            - NON_TITLE_SPOUSE
            - OTHER
            - PROPERTY_SELLER
            - REAL_ESTATE_AGENT
            - REAL_ESTATE_LISTING_AGENT
            - REAL_ESTATE_SELLING_AGENT
            - SETTLOR
            - SETTLOR_TRUSTEE
            - SPOUSE
            - TITLE_HOLDER
            - TITLE_HOLDER_SETTLOR_TRUSTEE
            - TITLE_HOLDER_TRUSTEE
            - TRUSTEE
            - UNSPECIFIED
          example: SPOUSE
        email:
          type: string
          example: spouse@mail.com
        name:
          $ref: '#/components/schemas/NameSchema'
        losPartyId:
          $ref: '#/components/schemas/LOSPartyIdSchema'
        username:
          $ref: '#/components/schemas/UsernameSchema'
        econsent:
          $ref: '#/components/schemas/EconsentSchema'
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
    PhoneNumberSchema:
      type: object
      properties:
        phoneNumber:
          type: string
          description: String representation of the phone number
          example: '4155504810'
        type:
          type: string
          description: Type of phone number
          enum:
            - HOME
            - WORK
            - MOBILE
            - OTHER
          example: HOME
    RealtorRequestSchema:
      type: object
      required:
        - applicationId
        - name
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        name:
          $ref: '#/components/schemas/NameSchema'
        contact:
          type: object
          properties:
            email:
              type: string
              description: Realtor's email
              example: realtor@email.com
            phoneNumber:
              type: string
              description: Realtor's phone number
              example: '2225557878'
    VerificationDataSchema:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: '1234'
        hint:
          type: string
          example: Last 4 Digits of SSN
    DocumentSchema:
      type: object
      properties:
        id:
          type: string
          description: >-
            The UUID of the Document in Blend's system. The static identifier
            that should be used to connect the document's identity across Blend
            and external integrations.
          example: 528e481b-19b7-4e81-a49e-bbb8258e308d
        name:
          type: string
          description: Document Filename
          example: Paystub.pdf
        type:
          $ref: '#/components/schemas/DocumentType'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        losType:
          type: string
          description: LOS document type (used with Blend document templating)
          example: PAYSTUB_DOC
        losTypeId:
          type: string
          description: LOS document id (used for external tracking)
          example: '12312'
        created:
          type: string
          format: date-time
          description: UTC Timestamp of document creation
          example: '2018-10-02T20:07:27+00:00'
        partyIds:
          type: array
          description: UUIDs of the Parties associated with this document
          items:
            type: string
            example: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
        downloadUrl:
          type: string
          description: URL where the Document can be Downloaded from
          example: >-
            https://api.blendlabs.com/documents/eba0d438-0748-4296-b369-c98210e537f7
        lastExportedAt:
          type: string
          format: date-time
          description: UTC Timestamp of last export for document
          example: '2018-10-03T20:07:27+00:00'
        text:
          type: string
          description: Description used in UI
          example: 'Public Record: Bankruptcy supporting documentation'
        status:
          type: string
          description: Document status
          enum:
            - SIGNATURE_REQUESTED
            - VOIDED
            - READY
            - NONE
            - EXPIRED
            - CANCELLED
            - REJECTED
            - PENDING
            - DO_NOT_EXPORT
          example: READY
        category:
          type: string
          description: Document's hierarchical category
          enum:
            - Assets
            - Borrower Info
            - Credit
            - Disclosures
            - Income
            - Letters of explanations
            - Miscellaneous
            - Property
            - Supporting Docs for Large Deposits
          example: Supporting Docs for Large Deposits
        signerInfo:
          $ref: '#/components/schemas/SignerInfoSchema'
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
        additionalEntities:
          $ref: '#/components/schemas/DocumentAdditionalEntities'
    DocumentRequestSchema:
      type: object
      required:
        - applicationId
        - file
      properties:
        file:
          type: string
          format: binary
          description: the file to be attached to the application
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        type:
          $ref: '#/components/schemas/DocumentType'
        losType:
          type: string
          description: LOS document type (used with Blend document templating)
          example: Verification_of_Income_type
        losTypeId:
          type: string
          description: LOS document id (used for external tracking)
          example: '123123'
        partyIds:
          type: array
          description: UUIDs of the Parties associated with this document
          items:
            type: string
            example: 82479d45-e4c9-4e1a-bfb5-28a7c6160f67
        name:
          type: string
          example: VerificationOfIncome.pdf
        status:
          type: string
          description: ENUM describing the Document Status
          enum:
            - SIGNATURE_REQUESTED
            - READY
          example: SIGNATURE_REQUESTED
        shareWithAllParties:
          type: boolean
          default: false
          example: false
          description: >-
            If set to true, uploaded document becomes accessible to borrowers;
            otherwise, only lender can view the document
        customFields:
          type: string
          description: field name of the custom field
          example: fieldName
        customMetadata:
          type: string
          description: field name of the custom metadata
          example: metadataName
    DocumentExportStatusSchema:
      type: object
      properties:
        exportedAt:
          type: string
          format: date-time
          description: UTC timestamp of export time
          example: '2018-10-03T20:07:27+00:00'
        exportedBy:
          type: string
          description: ID of the user who initiated the export call
          example: system
        partnerId:
          type: string
          description: Role of the user who initiated the export call
          example: api-user
        exportedTo:
          $ref: '#/components/schemas/LosId'
    ApplicationSchema:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/ApplicationId'
        referenceNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        losId:
          $ref: '#/components/schemas/LosId'
        crmId:
          $ref: '#/components/schemas/CrmId'
        status:
          type: string
          description: >-
            An ENUM for the status of the application. This field is being
            deprecated but still controls lender UI and TRID
          enum:
            - Pending Email Invitation
            - Email Invitation Sent
            - Email Invitations Sent
            - Application Ready to Start
            - Application in Progress'
            - Application Completed
            - Underwriting
            - Application Ready to Start
            - 1/2 in Progress
            - 2/2 in Progress
            - 1/2 Submitted
            - Closing
            - Closed
          example: Application Completed
        applicationStatus:
          type: string
          description: >-
            An ENUM for the status of the application. This field and
            Party.status replaces status.
          enum:
            - LENDER_SETUP
            - IN_PROGRESS
            - SUBMITTED
            - FOLLOW_UP_ONLY
            - TAKEN_OVER
            - CLOSED
            - DENIED
          example: SUBMITTED
        parties:
          type: array
          description: An array of all the parties belonging to the application
          items:
            $ref: '#/components/schemas/PartySchema'
        property:
          $ref: '#/components/schemas/PropertySchema'
        leadId:
          type: string
          description: >-
            Lead ID associated with this application in the system that referred
            it to Blend. Primarily used for LeadGen integration use cases.
          example: lead134912
        solutionSubType:
          type: string
          description: >-
            An ENUM for the type of solution to which the application
            corresponds
          enum:
            - MORTGAGE
            - HELOAN
            - HELOC
            - CANADA_MORTGAGE
            - ACCOUNT_OPENING'
            - AUTO
            - OTHER
          example: MORTGAGE
        loanPurposeType:
          type: string
          description: An ENUM describing the purpose of the application
          enum:
            - PURCHASE
            - REFINANCE
            - CONSTRUCTION
            - CONSTRUCTION_PERM
            - MORTGAGE_MODIFICATION'
            - OTHER
          example: REFINANCE
        lienPriorityType:
          type: string
          description: An ENUM describing the lien priority of the application
          enum:
            - FIRST_LIEN
            - SECOND_LIEN
            - THIRD_LIEN
            - FOURTH_LIEN
            - OTHER
          example: FIRST_LIEN
        paymentType:
          type: string
          description: >-
            An ENUM describing the type of HELOC payment the borrower would like
            to make during the draw period
          enum:
            - PRINCIPLE_INTEREST
            - INTEREST_ONLY
          example: PRINCIPLE_INTEREST
        communityId:
          type: string
          example: '12345'
        communityName:
          type: string
          description: The community that the home resides in
          example: 2018 Market
        referralBrokerageConsentGiven:
          description: >-
            A boolean indicating whether the borrower has opted into using Blend
            Realty
          type: boolean
          example: false
        appSource:
          description: >-
            The tag corresponding to a marketing campaign. This identifier can
            be used to gauge which links are most effective within certain
            campaigns.
          type: string
          example: ORGANIC_LEAD
        createdDate:
          type: string
          format: date-time
          description: UTC timestamp of the application creation time
          example: '2019-06-02T00:00:00.000Z'
        createdBy:
          $ref: '#/components/schemas/CreatedByObject'
        estimatedClosingDate:
          $ref: '#/components/schemas/EstimatedClosingDate'
        exportedDate:
          type: string
          format: date-time
          description: UTC timestamp of the application exported time
          example: '2019-06-02T00:00:00.000Z'
        preApprovalLetterDatetime:
          type: string
          format: date-time
          description: UTC timestamp of when the Preapproval Letter was generated
          example: '2019-06-02T00:00:00.000Z'
        applicationExperienceType:
          $ref: '#/components/schemas/ApplicationExperienceType'
        assignees:
          $ref: '#/components/schemas/UserAssignmentResponseSchema'
        applicationTemplateId:
          $ref: '#/components/schemas/ApplicationTemplateIdSchema'
        loanAmount:
          $ref: '#/components/schemas/LoanAmount'
        purchasePrice:
          type: number
          description: The purchase price for the subject property of the loan
          example: 120000
        applicationSource:
          $ref: '#/components/schemas/ApplicationSourceSchema'
        archivedStatus:
          $ref: '#/components/schemas/ArchiveStatusSchema'
        links:
          $ref: '#/components/schemas/ApplicationLinks'
        interestRate:
          type: number
          description: The interest rate in percentage points
          example: 4.25
        mortgageType:
          type: string
          description: ENUM describing the type of the mortgage
          enum:
            - CONVENTIONAL
            - FHA
            - LOCAL_AGENCY
            - OTHER
            - PUBLIC_AND_INDIAN_HOUSING
            - STATE_AGENCY
            - USDARURAL_DEVELOPMENT
            - VA
        tridTriggeredDate:
          type: string
          format: date-time
          description: UTC timestamp of when TRID was triggered on the application
          example: '2019-06-02T00:00:00.000Z'
        debtToIncomeRatio:
          type: number
          description: The combined debt to income ratio (DTI) of all borrowers on the loan
          example: 0.36
        affordabilityRange:
          $ref: '#/components/schemas/AffordabilityRangeSchema'
    PropertySchema:
      type: object
      description: >-
        Object storing information about the property corresponding to a home
        lending application
      properties:
        address:
          description: The property's street address
          $ref: '#/components/schemas/AddressSchema'
        type:
          type: string
          description: >-
            ENUM describing the type of property to which the application
            pertains
          enum:
            - SINGLE_FAMILY
            - CONDOMINIUM
            - TOWNHOUSE
            - TWO_TO_FOUR_UNIT_PROPERTY
            - COOPERATIVE
            - MANUFACTURED_OR_MOBILE_HOME
        usageType:
          $ref: '#/components/schemas/PropertyUsageType'
        searchType:
          type: string
          description: ENUM describing the applicant's search stage
          enum:
            - NOT_STARTED
            - STILL_LOOKING
            - FOUND
            - NOT_IN_CONTRACT
        searchTimeline:
          type: string
          description: >-
            ENUM describing the applicant's timeline for searching for a
            property
          enum:
            - 0_TO_3_MONTHS
            - 3_TO_6_MONTHS
            - 6_TO_12_MONTHS
            - 12_MONTHS_OR_MORE
            - UNKNOWN
        value:
          type: number
          description: The property's value in dollars and cents
          example: 100000.5
        otherMortgages:
          type: array
          description: >-
            Other mortgages on the subject property (only relevant for
            refinances)
          items:
            $ref: '#/components/schemas/OtherMortgageSchema'
        financedUnitCount:
          type: number
          description: The property's number of units
          example: 1
    ApplicationSourceSchema:
      description: >-
        Identifier of where the application originally came from. Used to trace
        which system programmatically created an application in Blend when it
        wasn't initiated by a Lender or a Borrower via Blend's web application.
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - LOS
            - CRM
            - Other
          description: >-
            Type of system the application came from. If set to Other, it is
            recommended to also set a name.
        name:
          type: string
          maxLength: 15
          description: >-
            Name of the system creating the application. For example, Salesforce
            or Empower.
    ApplicationTemplateIdSchema:
      description: >-
        Application template applied to this application. Determines what kind
        and how much information the applicant will be required to enter to
        complete the application.
      type: string
      example: fd658b97-f901-4b14-b693-4654d276c909
    ApplicationRequestSchema:
      type: object
      required:
        - party
      properties:
        solutionSubType:
          type: string
          description: ENUM for the subtype of home loan application being created
          enum:
            - MORTGAGE
            - HELOC
            - HELOAN
        applicationExperienceType:
          $ref: '#/components/schemas/ApplicationExperienceType'
        loanPurposeType:
          type: string
          description: ENUM describing the reason for this home loan application
          enum:
            - CONSTRUCTION
            - PURCHASE
            - REFINANCE
        locPurposeType:
          type: string
          description: >-
            ENUM describing the reason for this home equity line of credit
            application (Only used for HELOC)
          enum:
            - HOME_PURCHASE
            - REFINANCE
            - HOME_IMPROVEMENT
            - DEBT_CONSOLIDATION
            - OTHER
        lienPriorityType:
          type: string
          description: An ENUM describing the lien priority of the application
          enum:
            - FIRST_LIEN
            - SECOND_LIEN
            - THIRD_LIEN
            - FOURTH_LIEN
            - OTHER
        paymentType:
          type: string
          description: >-
            An ENUM describing the type of HELOC payment the borrower would like
            to make during the draw period (Only used for HELOC)
          enum:
            - PRINCIPLE_INTEREST
            - INTEREST_ONLY
        homeEquityLoanPurposeType:
          type: string
          description: >-
            ENUM describing the reason for this home equity loan application
            (Only used for HELOAN)
          enum:
            - HOME_PURCHASE
            - REFINANCE
            - HOME_IMPROVEMENT
            - DEBT_CONSOLIDATION
            - OTHER
        property:
          $ref: '#/components/schemas/PropertySchema'
        loanAmount:
          $ref: '#/components/schemas/LoanAmount'
        purchasePrice:
          type: number
          description: >-
            The purchase price for the subject property of the loan. This field
            is only supported for new URLA mortgage applications.
          example: 120000
        communityId:
          type: string
          example: '12345'
        party:
          $ref: '#/components/schemas/ApplicationRequestPartySchema'
        leadId:
          description: >-
            Lead ID associated with this application in the system that referred
            it to Blend. Primarily used for LeadGen integration use cases.
          type: string
          example: leadId1
        crmId:
          $ref: '#/components/schemas/CrmId'
        losId:
          $ref: '#/components/schemas/LosId'
        referenceNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        sendEmailInvite:
          description: >-
            If set to true, sends an email invite to borrower with a link to
            start the application
          type: boolean
        applicationTemplateId:
          $ref: '#/components/schemas/ApplicationTemplateIdSchema'
        applicationSource:
          $ref: '#/components/schemas/ApplicationSourceSchema'
        interestRate:
          type: number
          description: The interest rate in percentage points
          example: 4.25
        mortgageType:
          type: string
          description: ENUM describing the type of the mortgage
          enum:
            - CONVENTIONAL
            - FHA
            - LOCAL_AGENCY
            - OTHER
            - PUBLIC_AND_INDIAN_HOUSING
            - STATE_AGENCY
            - USDARURAL_DEVELOPMENT
            - VA
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
        branchIdOverride:
          type: string
          description: >-
            A specific branch ID, used for origination attribution, that when
            set takes precedence over the originating user's
          example: '12345'
    TabSchema:
      type: object
      properties:
        approveTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              height:
                type: number
              width:
                type: number
              buttonText:
                type: string
              font:
                type: string
              fontColor:
                type: string
              fontSize:
                type: string
              bold:
                type: boolean
        signHereTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              scaleValue:
                type: number
                minimum: 0.5
                maximum: 1
                default: 1
              optional:
                type: boolean
                description: If true, then the tab is optional for the recipient to act on.
        listTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              value:
                type: string
        dateSignedTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              font:
                type: string
              fontColor:
                type: string
              fontSize:
                type: string
              bold:
                type: boolean
        checkboxTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              selected:
                type: boolean
        textTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              height:
                type: number
              width:
                type: number
              maxLength:
                type: number
              required:
                type: boolean
                default: false
              font:
                type: string
              fontColor:
                type: string
              fontSize:
                type: string
              bold:
                type: boolean
        initialHereTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              scaleValue:
                type: number
              optional:
                type: boolean
        dateTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              font:
                type: string
              fontColor:
                type: string
              fontSize:
                type: string
              bold:
                type: boolean
              required:
                type: boolean
        noteTabs:
          type: array
          items:
            type: object
            required:
              - xPosition
              - yPosition
              - pageNumber
              - value
            properties:
              xPosition:
                type: integer
              yPosition:
                type: integer
              pageNumber:
                type: integer
              tabLabel:
                type: string
              name:
                type: string
              conditionalParentLabel:
                type: string
              conditionalParentValue:
                type: string
              height:
                type: number
              width:
                type: number
              value:
                type: string
              font:
                type: string
              fontColor:
                type: string
              fontSize:
                type: string
              bold:
                type: boolean
        radioGroupTabs:
          type: array
          items:
            type: object
            properties:
              groupName:
                type: string
              radios:
                type: array
                items:
                  type: object
                  required:
                    - tabId
                    - xPosition
                    - yPosition
                    - pageNumber
                  properties:
                    xPosition:
                      type: integer
                    yPosition:
                      type: integer
                    pageNumber:
                      type: integer
                    tabId:
                      type: string
                    value:
                      type: string
                    selected:
                      type: boolean
                      description: Only one in this array may be set to true
                    required:
                      type: boolean
                      default: false
    LenderCreationRequestSchema:
      type: object
      required:
        - name
        - email
        - permittedSolutionSubTypes
        - loginMethod
        - roleNames
      properties:
        name:
          type: string
          description: Lender Full Name
          example: Ashley Lender
        email:
          type: string
          description: Lender Email
          example: ashley.lender@example.com
        permittedSolutionSubTypes:
          type: array
          description: Set of allowable solution types
          items:
            type: string
            description: Valid solutions
            enum:
              - HELOAN
              - HELOC
              - MORTGAGE
            example: MORTGAGE
        requireTwoFactorAuth:
          type: boolean
          description: MFA Required
          example: true
        loginMethod:
          type: string
          description: Login Method
          enum:
            - email
            - SSO
            - borrowerSAML
            - anonymousBorrower
        roleNames:
          type: array
          description: Roles for Lender
          items:
            type: string
            description: Role Name
            example: Loan Officer
        phone:
          type: object
          properties:
            number:
              type: string
              description: Phone Number
              example: '1112223333'
            extension:
              type: string
              description: Phone Extension
              example: '1234'
        nmlsId:
          type: string
          description: Nationwide Multistate Licensing System ID number
          example: '39179'
        losUsername:
          type: string
          description: Lender's LOS Username
          example: ashleylender
        employeeId:
          type: string
          description: Lender's Employee Id
          example: '12314'
        branchId:
          type: string
          description: Lender's Branch Id
        licensedStates:
          type: array
          description: States Lender is licensed in
          items:
            type: string
            description: State Code
            example: CA
          example:
            - NY
            - CA
    LenderUpdateRequestSchema:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: >-
            The UUID of the Lender User in Blend's system. The static identifier
            that should be used to connect the user's identity across Blend and
            external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        email:
          type: string
          description: >-
            Lender Email. This can only be updated for SSO users. Note that you
            must submit a Blend Support request to enable the "Allow SSO lender
            email updates through API" configuration to enable this field.
          example: ashley.lender.new.email@example.com
        name:
          type: string
          description: Lender Full Name
          example: Ashley Lender
        permittedSolutionSubTypes:
          type: string
          description: Allowable solution type
          enum:
            - HELOAN
            - HELOC
            - MORTGAGE
          example: MORTGAGE
        requireTwoFactorAuth:
          type: boolean
          description: MFA Required
          example: true
        loginMethod:
          type: string
          description: Login Method
          enum:
            - email
            - SSO
            - borrowerSAML
            - anonymousBorrower
        roleNames:
          type: array
          description: Roles for Lender
          items:
            type: string
            description: Role Name
            example: Loan Officer
        phone:
          type: object
          properties:
            number:
              type: string
              description: Phone Number
              example: '1112223333'
            extension:
              type: string
              description: Phone Extension
              example: '1234'
        nmlsId:
          type: string
          description: Nationwide Multistate Licensing System ID number
          example: '39179'
        losUsername:
          type: string
          description: Lender's LOS Username
          example: ashleylender
        employeeId:
          type: string
          description: Lender's Employee Id
          example: '12314'
        branchId:
          type: string
          description: Lender's Branch Id
          example: Westfield
        creditInternalAccountIdentifiers:
          $ref: '#/components/schemas/CreditInternalAccountIdentifiers'
        licensedStates:
          type: array
          description: States Lender is licensed in
          items:
            type: string
            description: State Code
            example: CA
          example:
            - NY
            - CA
    LenderRecordSchema:
      type: object
      required:
        - id
        - status
        - requireTwoFactorAuth
      properties:
        name:
          type: string
          description: Lender Full Name
          example: Ashley Lender
        firstName:
          type: string
          description: Lender First Name
          example: Ashley
        lastName:
          type: string
          description: Lender Last Name
          example: Lender
        email:
          type: string
          description: Lender Email
          example: ashley.lender@example.com
        permittedSolutionSubTypes:
          type: array
          description: Loan Subtypes Permitted
          items:
            type: string
            description: Loan Type
            enum:
              - HELOAN
              - HELOC
              - MORTGAGE
            example: MORTGAGE
        requireTwoFactorAuth:
          type: boolean
          description: MFA Required
          example: true
        loginMethod:
          type: string
          description: Login Method
          enum:
            - email
            - SSO
            - borrowerSAML
            - anonymousBorrower
        roleNames:
          type: array
          description: Roles for Lender
          items:
            type: string
            description: Role Name
            example: Loan Officer
        phone:
          type: object
          properties:
            number:
              type: string
              description: Phone Number
              example: '1112223333'
            extension:
              type: string
              description: Phone Extension
              example: '1234'
        nmlsId:
          type: string
          description: Nationwide Multistate Licensing System ID number
          example: '39179'
        losUsername:
          type: string
          description: Lender's LOS Username
          example: ashleylender
        employeeId:
          type: string
          description: Lender's Employee Id
          example: '12314'
        branchId:
          type: string
          description: Lender's Branch Id
        id:
          type: string
          description: >-
            The UUID of the Lender User in Blend's system. The static identifier
            that should be used to connect the user's identity across Blend and
            external integrations.
          example: 9250f84b-c2a1-4cab-b265-bd720685c361
        status:
          type: string
          description: ENUM describing the Lender User's status in Blend
          enum:
            - ACTIVE
            - ACTIVATION_REQUIRED
            - DORMANT
            - DELETED
            - PROVISIONAL
            - LOCKED_OUT
        creditInternalAccountIdentifiers:
          type: array
          description: List of all the active creditInternalAccountIdentifiers
          items:
            $ref: '#/components/schemas/CreditInternalAccountIdentifiers'
        licensedStates:
          type: array
          description: States Lender is licensed in
          items:
            type: string
            description: State Code
            example: CA
          example:
            - NY
            - AL
    AccountApplicationSchema:
      type: object
      required:
        - _id
        - applicants
        - accounts
        - membershipQualification
      properties:
        _id:
          type: string
          description: Internal application ID
          example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
        referenceId:
          type: string
          description: Customer reference ID for application.
          example: '124123'
        productReferenceId:
          type: string
          description: Customer reference ID for product bundle.
          example: '324323'
        applicants:
          type: array
          description: List of applicants applying to open an account. Maximum of two.
          items:
            $ref: '#/components/schemas/ApplicantSchema'
        accounts:
          type: array
          description: List of accounts requested to be opened.
          items:
            $ref: '#/components/schemas/AccountSchema'
        funding:
          type: array
          description: >-
            List of funding sources and amounts to be transferred to new
            accounts.
          items:
            $ref: '#/components/schemas/FundingSchema'
        membershipQualification:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              description: Method of qualification for membership
              example: AFFILIATION
            employerId:
              type: string
              description: >-
                Blend ID of employer object in applicant's employers array.
                Required if qualification is based on employer's address or
                select employee group.
              example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
            accountNumber:
              type: string
              description: Required if qualification is based on current membership.
              example: '111000222'
            familyMemberName:
              type: object
              description: >-
                Required if qualification is based on family or household
                member.
              properties:
                firstName:
                  type: string
                  description: Family or household member's first name.
                  example: Bob
                lastName:
                  type: string
                  description: Family or household member's last name.
                  example: Smith
            answers:
              $ref: '#/components/schemas/MembershipQualificationAnswerSchema'
        dynamicAccountOptions:
          $ref: '#/components/schemas/DynamicAccountOptionsAnswerSchema'
        debitCardIndicator:
          type: boolean
          description: Indicates whether applicant is requesting a debit card.
          example: true
        debitCardDesign:
          type: string
          description: Selected debit card design. Values configured per customer.
          example: BLUE
        promoCode:
          type: string
          description: Promo code for the application.
          example: '1110319'
        overdraftPrivilegeIndicator:
          type: boolean
          description: Indicates whether applicant is requesting overdraft privileges
          example: false
        beneficiariesConsentIndicator:
          type: boolean
          description: Indicates whether applicant consented to adding beneficiaries
          example: false
        approvalStatus:
          type: string
          description: Status of the application approval process.
          enum:
            - APPROVED
            - REFER
            - REJECTED
          example: APPROVED
        rejectedApplicants:
          type: array
          description: >-
            List of applicants removed from the current application via
            customer's decisioning policy.
          items:
            $ref: '#/components/schemas/RejectedApplicantSchema'
        metadata:
          type: object
          description: additional info about the application
          properties:
            primaryAssignedReviewer:
              $ref: '#/components/schemas/AOReviewerSchema'
            decisioningReviewer:
              $ref: '#/components/schemas/AOReviewerSchema'
            appSource:
              type: string
              description: >-
                Identifier of where the application originally came from. Used
                to trace which system programmatically created an application in
                Blend when it wasn't initiated by a banker or an applicant via
                Blend's web application
              example: Velocify
        associatedApplicationId:
          type: string
          description: Application Id of Associated Application from Single App Flow
          example: 771379ec-f232-450d-b4a1-17d7fc0c3a7e
        beneficiaries:
          type: array
          description: Beneficiaries collected at application-level.
          items:
            $ref: '#/components/schemas/BeneficiarySchema'
        createdAt:
          type: string
          format: date-time
          description: The timestamp for when the application is created
          example: '2019-10-29T04:25:30.000Z'
        submittedAt:
          type: string
          format: date-time
          description: The timestamp for when the application is submitted
          example: '2019-10-29T04:45:30.000Z'
    ApplicantSchema:
      type: object
      required:
        - _id
        - type
        - email
        - name
        - dateOfBirth
        - socialSecurityNumber
        - addresses
        - phoneNumbers
      properties:
        _id:
          type: string
          description: Internal applicant ID
          example: 56632a12-1bd7-4014-8571-cff53c346738
        type:
          type: string
          description: Applicant type, primary, secondary or minor
          enum:
            - PRIMARY
            - SECONDARY
            - MINOR
          example: PRIMARY
        email:
          type: string
          description: Applicant email address
          example: jane.smith@company.com
        name:
          description: Applicant name
          $ref: '#/components/schemas/NameSchema'
        dateOfBirth:
          type: string
          description: Applicant birth date, UNIX timestamp (milliseconds)
          example: '1537222722246'
        socialSecurityNumber:
          type: string
          description: Applicant SSN
          example: '111224444'
        creditConsentIndicator:
          type: boolean
          description: >-
            Indicates whether applicant consented to credit policy for Identity
            Verification purposes.
          example: true
        addresses:
          description: List of applicant addresses, current or mailing
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationAddressSchema'
        phoneNumbers:
          description: List of phone numbers associated with applicant
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationPhoneNumberSchema'
        identityVerification:
          $ref: '#/components/schemas/IdentityVerificationSchema'
        identityDocumentation:
          $ref: '#/components/schemas/IdentityDocumentationSchema'
        employmentStatus:
          type: string
          description: current listed employment status
          enum:
            - EMPLOYED
            - SELF_EMPLOYED
            - RETIRED
            - UNEMPLOYED
            - NEVER_EMPLOYED
          example: SELF_EMPLOYED
        employers:
          type: array
          description: List of applicant's employers
          items:
            $ref: '#/components/schemas/EmployerSchema'
        employments:
          type: array
          description: List of applicant's employments
          items:
            $ref: '#/components/schemas/EmploymentSchema'
        coreBankingId:
          type: string
          description: Unique identifier for customer's core banking system.
          example: b258096c-c5f3-410f-ba56-08801f1a8752
        username:
          type: string
          description: SAML nameID sent to Blend.
          example: testUsername123
        maritalStatus:
          type: string
          description: Applicant marital status
          enum:
            - MARRIED
            - SEPARATED
            - UNMARRIED
            - DOMESTIC_PARTNER
          example: MARRIED
        citizenshipStatus:
          type: string
          description: Applicant citizenship status
          enum:
            - US_CITIZEN
            - PERMANENT_RESIDENT_ALIEN
            - NON_PERMANENT_RESIDENT_ALIEN
          example: US_CITIZEN
        sex:
          type: string
          description: Applicant sex
          enum:
            - FEMALE
            - MALE
            - OTHER
            - DO_NOT_WISH_TO_PROVIDE
          example: FEMALE
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
    RejectedApplicantSchema:
      type: object
      required:
        - _id
        - type
        - email
        - name
        - dateOfBirth
        - socialSecurityNumber
        - addresses
        - phoneNumbers
      properties:
        _id:
          type: string
          description: Internal applicant ID
          example: 56632a12-1bd7-4014-8571-cff53c346738
        type:
          type: string
          description: Applicant type
          enum:
            - REJECTED
          example: REJECTED
        email:
          type: string
          description: Applicant email address
          example: jane.smith@company.com
        name:
          description: Applicant name
          $ref: '#/components/schemas/NameSchema'
        dateOfBirth:
          type: string
          description: Applicant birth date, UNIX timestamp (milliseconds)
          example: '1537222722246'
        socialSecurityNumber:
          type: string
          description: Applicant SSN
          example: '111224444'
        creditConsentIndicator:
          type: boolean
          description: >-
            Indicates whether applicant consented to credit policy for Identity
            Verification purposes.
          example: true
        addresses:
          description: List of applicant addresses, current or mailing
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationAddressSchema'
        phoneNumbers:
          description: List of phone numbers associated with applicant
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationPhoneNumberSchema'
        identityVerificationStatus:
          $ref: '#/components/schemas/IdentityVerificationSchema'
        identityDocumentation:
          $ref: '#/components/schemas/IdentityDocumentationSchema'
        employers:
          type: array
          description: List of applicant's employers
          items:
            $ref: '#/components/schemas/EmployerSchema'
        employments:
          type: array
          description: List of applicant's employments
          items:
            $ref: '#/components/schemas/EmploymentSchema'
        coreBankingId:
          type: string
          description: Unique identifier for customer's core banking system.
          example: b258096c-c5f3-410f-ba56-08801f1a8752
        username:
          type: string
          description: SAML nameID sent to Blend.
          example: testUsername123
        maritalStatus:
          type: string
          description: Applicant marital status
          enum:
            - MARRIED
            - SEPARATED
            - UNMARRIED
            - DOMESTIC_PARTNER
          example: MARRIED
        citizenshipStatus:
          type: string
          description: Applicant citizenship status
          enum:
            - US_CITIZEN
            - PERMANENT_RESIDENT_ALIEN
            - NON_PERMANENT_RESIDENT_ALIEN
          example: US_CITIZEN
        sex:
          type: string
          description: Applicant sex
          enum:
            - FEMALE
            - MALE
            - OTHER
            - DO_NOT_WISH_TO_PROVIDE
          example: FEMALE
        customFields:
          $ref: '#/components/schemas/CustomFields'
        customMetadata:
          $ref: '#/components/schemas/CustomMetadata'
    AOReviewerSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal reviewer ID
          example: 56632a12-1bd7-4014-8571-cff53c346738
        fullName:
          type: string
          description: The full name of the reviewer
          example: John Smith
    AccountApplicationAddressSchema:
      type: object
      required:
        - _id
        - type
        - lineText
        - cityName
        - stateCode
        - zipCode
      properties:
        _id:
          type: string
          description: Address ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        type:
          type: string
          description: Address type, current or mailing
          enum:
            - CURRENT
            - MAILING
          example: CURRENT
        lineText:
          type: string
          description: First line of address
          example: 123 Main St.
        additionalLineText:
          type: string
          description: Second (optional) line of address
          example: Apt. 4
        cityName:
          type: string
          description: City name
          example: New York City
        countyName:
          type: string
          description: County name
          example: New York County
        stateCode:
          type: string
          description: 2-digit state or territory code
          example: NY
        zipCode:
          type: string
          description: 5-digit zip code
          example: '10001'
    AccountApplicationPhoneNumberSchema:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          description: Type of phone number
          enum:
            - CELL
            - HOME
            - WORK
          example: CELL
        value:
          type: number
          description: Phone number
          example: 5551112222
    AuthorizedUserSchema:
      type: object
      required:
        - _id
        - email
        - name
        - dateOfBirth
        - socialSecurityNumber
        - phoneNumbers
        - addresses
      properties:
        _id:
          type: string
          description: Internal authorized user ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        email:
          type: string
          description: Authorized User email address
          example: jane.smith@company.com
        name:
          description: Authorized User name
          $ref: '#/components/schemas/NameSchema'
        dateOfBirth:
          type: string
          description: Authorized User birth date, UNIX timestamp (milliseconds)
          example: '1537222722246'
        socialSecurityNumber:
          type: string
          description: Authorized User SSN
          example: '111224444'
        addresses:
          description: List of authorized User addresses, current or mailing
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationAddressSchema'
        phoneNumbers:
          description: List of phone numbers associated with authorized User
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationPhoneNumberSchema'
        identityVerification:
          $ref: '#/components/schemas/IdentityVerificationSchema'
    BeneficiarySchema:
      type: object
      required:
        - _id
        - type
      properties:
        _id:
          type: string
          description: Internal beneficiary ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        type:
          type: string
          description: Beneficiary type, primary or contingent
          enum:
            - PRIMARY
            - CONTINGENT
          example: PRIMARY
        subType:
          type: string
          description: >-
            Beneficiary sub-type, INDIVIDUAL, TRUST, CHARITY, CHURCH, or
            FOUNDATION
          enum:
            - INDIVIDUAL
            - TRUST
            - CHARITY
            - CHURCH
            - FOUNDATION
          example: INDIVIDUAL
        name:
          description: Beneficiary name
          $ref: '#/components/schemas/NameSchema'
        relation:
          type: string
          description: Beneficiary relationship
          example: Husband
        allocation:
          type: number
          description: Percentage allocated to the given beneficiary
          example: 34.7
        address:
          $ref: '#/components/schemas/AccountApplicationAddressSchema'
        email:
          type: string
          description: Beneficiary email address
          example: test@blend.com
        dateOfBirth:
          type: string
          description: Beneficiary birth date, UNIX timestamp (milliseconds)
          example: '1537222722246'
        socialSecurityNumber:
          type: string
          description: Beneficiary SSN
          example: '111224444'
        entityName:
          type: string
          description: >-
            Entity name of the given beneficiary (if the beneficiary is not a
            individual)
          example: MyPerfect Trust
        taxpayerIdentificationNumber:
          type: string
          description: >-
            Taxpayer identification number of the entity (if the beneficiary is
            not a individual)
          example: '123456789'
        phoneNumbers:
          description: List of phone numbers associated with the given beneficiary
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationPhoneNumberSchema'
    CreditInternalAccountIdentifiers:
      type: object
      required:
        - pullType
        - creditPullScenario
        - creditProvider
        - creditAccountIdentifier
      properties:
        pullType:
          type: string
          description: Pull type
          enum:
            - Hard
            - Soft
        creditPullScenario:
          type: string
          description: Credit Pull Scenario
          example: MORTGAGE
        creditProvider:
          type: string
          description: Credit Provider
          example: INFORMATIVE_RESEARCH
        creditAccountIdentifier:
          type: string
          description: Credit Account Identifier
          example: test
    IdentityDocumentationSchema:
      type: object
      description: ID Document
      required:
        - type
        - value
        - issueDate
        - expiryDate
      properties:
        type:
          type: string
          description: Type of ID document provided by applicant
          enum:
            - DRIVERS_LICENSE
            - DRIVERS_PRIVILEGE_CARD
            - CANADIAN_DRIVERS_LICENSE
            - STATE_ID
            - CANADIAN_STATE_ID
            - US_PASSPORT
            - US_PASSPORT_CARD
            - FOREIGN_PASSPORT
            - MILITARY_ID
            - CONSULAR_ID
            - TRIBAL_ID
          example: US_PASSPORT
        value:
          type: string
          description: ID document number
          example: S123000U
        stateCode:
          type: string
          description: 2-digit code of state that issued the ID document
          example: CA
        country:
          type: string
          description: Country that issued the ID document
          example: Taiwan
        province:
          type: string
          description: Province that issued the ID document
          example: British Columbia
        tribe:
          type: string
          description: Tribe that issued the ID document
          example: Spokane Tribe
        issueDate:
          type: number
          description: Date when ID document was issued, UNIX Timestamp (milliseconds)
          example: 1529360743127
        expiryDate:
          type: number
          description: Date when ID document expires, UNIX Timestamp (milliseconds)
          example: 1529360993127
    IdentityVerificationSchema:
      type: object
      description: Information regarding id verification for applicant
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal ID of identity verification process
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        statusType:
          type: string
          description: Result of identity verification process
          enum:
            - VERIFIED
            - REJECT
            - SERVICE_UNAVAILABLE
          example: VERIFIED
        provider:
          type: object
          description: Provider metadata object
          required:
            - _id
          properties:
            _id:
              type: string
              description: Internal _id of the provider
              example: ALLOY
            references:
              type: object
              description: References to external provider
              properties:
                latestEvaluationURL:
                  type: string
                  description: URL for latest evaluation
                latestEvaluationDetails:
                  type: object
                  description: >-
                    additional information regarding the latest identity
                    verification evaluation
                  example:
                    evaluationTimestamp: 1602874133242
        type:
          type: string
          description: Type of identity verification
          enum:
            - IDV
            - STEP_UP
          example: IDV
    FundingAccountSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal account ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        referenceId:
          type: string
          description: External ID or code to reference this account. e.g. share code.
          example: '0051'
        type:
          type: string
          description: Account type
          enum:
            - CHECKING
            - SAVINGS
            - CERTIFICATE_OF_DEPOSIT
            - HSA
          example: CHECKING
        description:
          type: string
          description: Additional text describing account
          example: Premium Checking Account
        accountNumber:
          type: number
          description: Account number
          example: 33112244
        routingNumber:
          type: string
          description: Routing number
          example: '00227799'
    AccountSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal account ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        referenceId:
          type: string
          description: External ID or code to reference this account. e.g. share code.
          example: '0051'
        type:
          type: string
          description: Account type
          enum:
            - CHECKING
            - SAVINGS
            - CERTIFICATE_OF_DEPOSIT
            - HSA
          example: CHECKING
        description:
          type: string
          description: Additional text describing account
          example: Premium Checking Account
        accountNumber:
          type: number
          description: Account number
          example: 33112244
        routingNumber:
          type: string
          description: Routing number
          example: '00227799'
        isPrimary:
          type: boolean
          description: Indicator for primary account on application
          example: true
        authorizedUsers:
          type: array
          description: Authorized Users collected for the given account.
          items:
            $ref: '#/components/schemas/AuthorizedUserSchema'
        beneficiaries:
          type: array
          description: Beneficiaries collected for the given account.
          items:
            $ref: '#/components/schemas/BeneficiarySchema'
    DynamicAccountOptionsAnswerSchema:
      type: object
      description: answers to configured account setup questions
      example:
        securityQuestion: First car owned
        securityQuestionAnswer: Volvo Station Wagon
    MembershipQualificationAnswerSchema:
      type: object
      description: additional info about membership eligibility
      example:
        affiliatedOrganization: REI
    FundingSchema:
      type: object
      required:
        - sourceAccount
        - destinationAccount
        - amount
      properties:
        sourceAccount:
          description: Source account used to transfer funds
          $ref: '#/components/schemas/FundingAccountSchema'
        destinationAccount:
          description: Destination account for funds
          $ref: '#/components/schemas/FundingAccountSchema'
        amount:
          type: number
          description: Amount being transferred
          example: 5000
    EmployerSchema:
      type: object
      required:
        - _id
        - type
        - name
      properties:
        _id:
          type: string
          description: Internal employer ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        type:
          type: string
          description: Type of employment.
          enum:
            - CURRENT
            - FORMER
          example: CURRENT
        referenceId:
          type: string
          description: External employer reference ID. e.g. select employee group number.
          example: '243'
        name:
          type: string
          description: Employer name
          example: Blend
        address:
          description: Employer address
          $ref: '#/components/schemas/AccountApplicationAddressSchema'
    EmploymentSchema:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: Type of employment.
          enum:
            - CURRENT
            - FORMER
          example: CURRENT
        jobTitle:
          type: string
          description: Job Title
          example: Account Executive
        annualIncome:
          type: string
          description: Annual income range for given employment
          enum:
            - BELOW_10K
            - BELOW_25K
            - BELOW_50K
            - BELOW_100K
            - BELOW_150K
            - BELOW_200K
            - ABOVE_200K
          example: BELOW_50K
        hireDate:
          type: string
          description: Date of hire for given employment
          example: '2017-12-12T00:00:00.000Z'
    PatchApplicationSchema:
      type: object
      properties:
        referenceId:
          type: string
          description: >-
            Optional reference ID for matching records with Blend's application
            object
          example: 200ABC123
        approvalStatus:
          type: string
          description: Decision regarding opening the account
          enum:
            - APPROVED
            - REFER
            - REJECTED
          example: APPROVED
        accounts:
          type: array
          description: List of accounts with their account/routing numbers
          items:
            $ref: '#/components/schemas/PatchAccountSchema'
        applicants:
          type: array
          description: List of applicants with their member numbers
          items:
            $ref: '#/components/schemas/PatchApplicantSchema'
        integrationEvent:
          $ref: '#/components/schemas/IntegrationEventSchema'
    PatchAccountSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal account ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        accountNumber:
          type: string
          description: Account number of booked account
          example: '33112244'
        routingNumber:
          type: string
          description: Routing number of booked account
          example: '00227799'
        accessLimits:
          type: array
          description: access limits for the given account
          items:
            type: object
            required:
              - type
              - display
              - value
            properties:
              type:
                type: string
                enum:
                  - ATM
                  - DEBIT_CARD
                  - PROVISIONAL_CREDIT
                description: type of access limit
                example: ATM
              display:
                type: string
                description: access limit display shown to applicants
                example: ATM withdrawal limit per day
              value:
                type: number
                description: limit amount (in dollars)
                example: 500
    PatchApplicantSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal applicant ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        memberNumber:
          type: string
          description: Member number of applicant
          example: '9083409234'
        coreBankingId:
          type: string
          description: Applicant identifier in customer's core banking system
          example: '9876543210'
        customFields:
          $ref: '#/components/schemas/RequestCustomFields'
        customMetadata:
          $ref: '#/components/schemas/RequestCustomMetadata'
    IntegrationEventSchema:
      type: object
      required:
        - type
        - status
      properties:
        type:
          type: string
          description: The type of integration event which is being completed
          enum:
            - applicationSubmitted
            - applicationRejected
            - accountReadyToFund
            - applicantRejected
            - applicantReadyForDecisioning
          example: applicationSubmitted
        status:
          type: string
          description: The final status of the integration event which is being completed
          enum:
            - SUCCEEDED
            - FAILED_NON_RETRYABLE
            - FAILED_RETRYABLE
          example: SUCCEEDED
        failureCode:
          type: string
          description: Corresponding reason for integration event failure
          enum:
            - CORE_DOWN_FOR_MAINTENANCE
            - PARTIAL_CREATION
            - EXISTING_USER
          example: CORE_DOWN_FOR_MAINTENANCE
        failureMessage:
          type: string
          description: >-
            Message explaining why the integration event failed (It's only
            displayed when a failureCode is not provided)
          example: User already exists in the core
    PackageBorrowerMetadataSchema:
      type: object
      required:
        - id
      properties:
        id:
          description: >-
            The UUID of the Party in Blend's system. The static identifier that
            should be used to connect the party's identity across Blend and
            external integrations.
          type: string
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        tabs:
          $ref: '#/components/schemas/TabSchema'
        docDeliveryType:
          type: string
          enum:
            - WET_SIGN
            - VIEW_ONLY
            - ESIGN
            - EMBEDDED_FIELDS
          example: WET_SIGN
    PackageThirdPartyRecipientMetadataSchema:
      type: object
      required:
        - id
      properties:
        id:
          description: >-
            The UUID of the Party in Blend's system. The static identifier that
            should be used to connect the Party's identity across Blend and
            external integrations.
          type: string
          example: 3239635c-6a0b-406a-85b2-e0e8e23c35dc
        tabs:
          $ref: '#/components/schemas/TabSchema'
        docDeliveryType:
          type: string
          enum:
            - VIEW_ONLY'
            - ESIGN
            - EMBEDDED_FIELDS
          example: VIEW_ONLY
    PackageLenderMetadataSchema:
      type: object
      properties:
        tabs:
          $ref: '#/components/schemas/TabSchema'
        docDeliveryType:
          type: string
          enum:
            - ESIGN
            - EMBEDDED_FIELDS
          example: ESIGN
    LosMilestoneErrorSchema:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        code:
          type: number
          enum:
            - 404
            - 409
        reason:
          type: string
          example: application does not exist
    ExportStatusSchema:
      type: object
      required:
        - status
        - applicationId
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        status:
          type: string
          description: >-
            ENUM describing the status of this application's export to an
            external system
          enum:
            - IN_PROGRESS
            - FAILED
            - SUCCESS
        reason:
          type: string
          description: Further explanation for the assigned status
          example: import failed on los
        lastUpdated:
          type: string
          format: date-time
          description: UTC Timestamp of last update to status
          example: '2018-08-30T19:31:38.902Z'
    PostExportStatusSchema:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: >-
            ENUM describing the status of this application's export to an
            external system
          enum:
            - IN_PROGRESS
            - FAILED
            - SUCCESS
        reason:
          type: string
          description: Further explanation for the assigned status
          example: import failed on los
    NotAuthorizedErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Forbidden
        display:
          type: string
          example: You do not have the appropriate permissions to take this action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    InternalServerErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Internal Server Error
        display:
          type: string
          example: Something went wrong. Please try again later.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    BulkRequestErrorSchema:
      type: object
      required:
        - id
        - code
        - reason
      properties:
        id:
          type: string
          description: >-
            The UUID of the referenced resource in Blend's system. The static
            identifier that should be used to connect the resource's identity
            across Blend and external integrations.
          example: 29526148-296e-477d-8a61-5eceb51f4075
        code:
          type: number
          example: 409
        reason:
          type: string
          example: Invalid lender params.
    ApplicationNotFoundErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Not Found
        display:
          type: string
          example: >-
            The action you're trying to take is invalid. Please validate the
            loan details in your Blend lending portal before retrying this
            action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    ConflictErrorSchema:
      required:
        - error
      properties:
        error:
          type: string
          example: Conflict
        display:
          type: string
          example: >-
            The loan that you are trying to access is in an invalid state.
            Please validate the loan details in your Blend lending account
            before retrying this action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    InvalidRequestErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Invalid Request
        display:
          type: string
          example: The action you're trying to take is invalid.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    InvalidUpdateErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: The requested update is invalid
        display:
          type: string
          example: Please provide a valid fieldName.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    AuthenticationRequiredErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Authentication required
        display:
          type: string
          example: Your credentials are invalid.
        trackingId:
          type: string
          example: cbd15fc4-a8cc-45db-ac87-f90802ebbcc3
    RateLimitedErrorSchema:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: Rate Limited
        display:
          type: string
          example: >-
            There have been too many requests for this resource. Please try
            again later.
        trackingId:
          type: string
          example: a62e8b59-5ac7-40a5-a6f8-a0e34a7f2705
    ReportingLoanSchema:
      type: object
      required:
        - loanId
      properties:
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        losPrimaryKey:
          $ref: '#/components/schemas/LosPrimaryKey'
        crmPrimaryKey:
          $ref: '#/components/schemas/CrmId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        creatorUserId:
          type: string
          description: The user ID for the user that originated the loan.
          example: 16dfd1c4-ee17-4b97-9e6e-d0c3718c1656
        primaryAssigneeUserId:
          type: string
          description: The user id of the primary assignee LO on the loan.
          example: 75d3231d-d1d7-4919-94d9-c8041280ad6f
        primaryAssigneeName:
          type: string
          description: The full name of the primary assignee
          example: Carl Sharonson
        primaryAssigneeEmail:
          type: string
          description: The email address of the primary assignee
          example: carl@shar.com
        allCurrentAssignees:
          type: string
          description: >-
            A JSON array containing the user ID, name, and email of all current
            assignees on the loan
          example: >-
            [{"userId:":"4a0cb986-6a88-4a17-87cd-cd7e37eea563", "name:":"Carl
            Sharonson", "email:":"carl@shar.com"}]
        loanType:
          type: string
          description: The subtype of the loan application.
          enum:
            - MORTGAGE
            - HELOC
            - HELOAN
            - CANADA_MORTGAGE
            - ACCOUNT_OPENING
            - AUTO
            - MORTGAGE_MODIFICATION
            - PERSONAL_LOC
            - PERSONAL_LOAN
            - PROGRAM_LOAN
            - SPECIALTY_VEHICLE
            - ALL
          example: MORTGAGE
        loanPurposeType:
          type: string
          enum:
            - REFINANCE
            - CONSTRUCTION_PERM
            - CONSTRUCTION
            - PURCHASE
            - OTHER
          description: The purpose of the loan application.
          example: PURCHASE
        appSourceName:
          type: string
          description: >-
            Canonical name of where this application came from, such as the name
            of the LOS or CRM
          example: Velocify
        appLeadSource:
          type: string
          description: Specifies how an app was created.
          enum:
            - LENDER
            - BORROWER
            - PUBLIC_API
            - INGEST
            - OTHER
          example: PUBLIC_API
        appProgram:
          type: string
          description: >-
            The loan program of the application, possible values include -
            STATE_AGENCY, VA, FHA, CONVENTIONAL, LOCAL_AGENCY,
            USARURAL_DEVELOPMENT, PUBLIC_AND_INDIAN_HOUSING, OTHER
          example: CONVENTIONAL
        appMarketingTag:
          type: string
          description: >-
            The tag corresponding to a marketing campaign. This identifier can
            be used to gauge which links are most effective within certain
            campaigns.
          example: source00_medium00_campaign00_term00_content00
        appLeadRelationshipType:
          type: string
          description: >-
            For customers with SSO enabled, this indicates whether the loan
            application came from an anonymous borrower or a known borrower.
            Possible values are KNOWN_BORROWER and ANONYMOUS_BORROWER.
          example: KNOWN_BORROWER
        assetState:
          type: string
          description: The registered address state on the asset
          example: CA
        assetPurchasePrice:
          type: number
          description: The purchase price of the asset
          example: 10000
        loanApplicationStatus:
          type: string
          description: The current status of the loan application
          example: SUBMITTED
        los_milestone:
          type: string
          description: >-
            An optional enumerated field sent by lenders who have shared this
            data via the home-lending/applications/los-milestones endpoint.
            Possible values include SUBMITTED. UNDERWRITING,
            CONDITIONAL_APPROVAL, APPROVED, CLOSING, CLOSED
          example: SUBMITTED
        losMilestoneLastUpdatedDatetime:
          type: string
          format: date-time
          description: >-
            The UTC timestamp for when an LOS milestone was last posted to Blend
            via the home-lending/applications/los-milestones
          example: 2018-07-24T00:42:00+00:00Z
        firstCreditPulledDatetime:
          type: string
          format: date-time
          description: >-
            The first UTC timestamp of when the borrower’s credit was pulled
            through Blend
          example: 2018-07-24T00:42:00+00:00Z
        primaryBorrowerSsnFlag:
          type: boolean
          description: A flag denoting if the borrower has provided their SSN
          example: true
        primaryBorrowerCreditConsentDatetime:
          type: string
          format: date-time
          description: The date that the borrower provided credit consent
          example: '2019-10-29T04:25:30.000Z'
        primaryBorrowerEconsentFlag:
          type: boolean
          description: A flag denoting that the borrower has provided e-consent
          example: true
        coborrowerSsnFlag:
          type: boolean
          description: A flag denoting if the coborrower has provided their SSN
          example: true
        coborrowerCreditConsentDatetime:
          type: string
          format: date-time
          description: The date that the borrower provided credit consent
          example: '2019-10-29T04:25:30.000Z'
        coborrowerEconsentFlag:
          type: boolean
          description: A flag denoting that the co-borrower has provided e-consent
          example: true
        followUpOnlyFlag:
          type: boolean
          description: >-
            A flag that indicates that the application was a follow-up only loan
            - the lender used Blend to issue follow ups to the borrower
          example: true
        connectivityFlag:
          type: boolean
          description: >-
            A flag that indicates that the borrower successfully generated an
            asset statement
          example: true
        blendIncomeSuccessFlag:
          type: boolean
          description: >-
            A flag that indicates whether the loan had at least one Blend Income
            Report generated (i.e. a borrower's income was successfully
            verified)
          example: true
        twnSuccessFlag:
          type: boolean
          description: >-
            A flag that indicates that a successful match was found on the
            borrower using The Work Number
          example: false
        hasRealtorFlag:
          type: boolean
          description: >-
            A flag that indicates the borrower selected they are working with a
            realtor on their application
          example: true
        unassignedOnSubmitFlag:
          type: boolean
          description: >-
            For Mortgage/Heloc/Heloan only - A flag that indicates the loan was
            unassigned upon submit. This field will not change if a loan is
            assigned. 'TRUE' = the loan was unassigned at submission; 'FALSE' =
            the loan was assigned at submission; NULL = the loan may not have
            been submitted yet, or is is a non home lending product
          example: true
        signupUrl:
          type: string
          description: >-
            For Mortgage/Heloc/Heloan only - The sign-up URL the borrower used
            to apply. Can be used with the unassignedOnsubmitFlag field to
            diagnose faulty referral links
          example: www.examplesignupurl.com
        preApprovalLetterDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp for when a Preapproval Letter was generated in Blend
            (UTC)
          example: 2018-07-14T00:42:00+00:00Z
        createdDatetime:
          type: string
          format: date-time
          description: The creation time of the loan (in UTC)
          example: 2018-07-14T00:42:00+00:00Z
        borrowerStartedDatetime:
          type: string
          format: date-time
          description: The timestamp when the borrower(s) started the loan application
          example: 2018-07-31T00:00:00+00:00Z
        borrowerSubmittedDatetime:
          type: string
          format: date-time
          description: The timestamp when borrower submitted the application
          example: 2018-07-31T00:00:00+00:00Z
        takeOverDatetime:
          type: string
          format: date-time
          description: The timestamp when the loan was first taken over by the LO (in UTC)
          example: 2018-07-31T00:00:00+00:00Z
        estExportedDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp when the application was exported. Field is appended
            with estimated, as this field is not meant to be used for compliance
            and reconciliation purposes
          example: 2018-07-31T00:00:00+00:00Z
        estLastUpdatedDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp the loan was last updated by the system. Can be used
            to filter on to find loans that have been updated. Field is appended
            with estimated, as this field is not meant to be used for compliance
            and reconciliation purposes and specific actions may not be
            considered as a "last updated"
          example: 2018-07-16T00:42:00+00:00Z
        estCompletedDatetime:
          type: string
          format: date-time
          description: The application completion time of the loan (in UTC)
          example: 2018-07-30T00:00:00+00:00Z
        estTridTriggeredDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp in UTC when the loan triggered TRID in Blend. Field is
            appended with estimated, as this field is not meant to be used for
            compliance and reconciliation purposes
          example: 2023-07-01T00:00:00+00:00Z
        estArchivedDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp when the application was archived. Field is appended
            with estimated, as this field is not meant to be used for compliance
            and reconciliation purposes
          example: 2018-07-31T00:00:00+00:00Z
        applicationDeletionDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp when the application was deleted, whether manually or
            by the automated purge process.
          example: 2023-07-31T00:00:00+00:00Z
        applicationDeletionSource:
          type: string
          description: >-
            The source of the application deletion. Either 'AUTOMATIC' if via
            the automated purge process, or 'MANUAL' if the application was
            deleted manually
          example: AUTOMATIC
        appStartToSubmitMinutes:
          type: number
          description: For a submitted loan, the time between app start and app submit
          example: 34
        asOfDate:
          type: string
          format: date-time
          description: The date for when the report was generated
          example: '2019-10-29T04:25:30.000Z'
    ReportingDocumentSchema:
      type: object
      required:
        - loanId
        - documentId
        - type
        - source
        - createdDatetime
        - asOfDate
      properties:
        documentId:
          type: string
          description: The unique ID for the document upload
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        uploadedByUserId:
          type: string
          description: >-
            The User ID for the user who uploaded the document (can be 'system',
            or either a borrower or lender user ID)
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        uploadedByUserType:
          type: string
          description: >-
            The type of user that uploaded the document. Eg "borrower",
            "lender", "system", "internal_api", "external_api". If the source is
            system or from the API, those are generally documents uploaded by
            Blend, or they can also be from internal/third party integrations
            that use the APIs to upload documents
          example: lender
        type:
          $ref: '#/components/schemas/DocumentType'
        source:
          type: string
          description: >-
            The source of where the document came from. Can be 'connectivity'
            for documents pulled through Blend's connectivity, or 'user' for all
            other documents
          enum:
            - user
            - connectivity
          example: user
        createdDatetime:
          type: string
          format: date-time
          description: The UTC timestamp for when the document was uploaded
          example: 2018-07-24T00:42:00+00:00Z
        loanType:
          type: string
          description: The specific product (Mortgage, HELOAN, HELOC, Auto, etc)
          example: MORTGAGE
        asOfDate:
          type: string
          format: date-time
          description: The date for when the report was generated
          example: 2018-08-24T00:42:00+00:00Z
    ReportingBorrowerSchema:
      type: object
      required:
        - userId
        - loanId
        - partyId
      properties:
        userId:
          type: string
          description: User id
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        partyId:
          $ref: '#/components/schemas/PartyId'
        role:
          type: string
          description: The role of the user
          enum:
            - BORROWER
            - COBORROWER
          example: BORROWER
        loginMethod:
          type: string
          description: The method the user used to login
          enum:
            - email
            - SSO
            - borrowerSAML
            - anonymousBorrower
            - shortForm
          example: email
        activationDatetime:
          type: string
          format: date-time
          description: The UTC timestamp of when the borrower activated their Blend user
          example: 2018-07-24T00:42:00+00:00Z
        invitedDatetime:
          type: string
          format: date-time
          description: The UTC timestamp of when the borrower was invited to Blend
          example: 2018-07-24T00:42:00+00:00Z
        creditPulledDatetime:
          type: string
          format: date-time
          description: >-
            The latest UTC timestamp of when the borrower’s credit was pulled
            through Blend
          example: 2018-07-24T00:42:00+00:00Z
        assetsPulledDatetime:
          type: string
          format: date-time
          description: >-
            The latest UTC timestamp of when the borrower connected their assets
            through Blend
          example: 2018-07-24T00:42:00+00:00Z
        incomeVerifiedDatetime:
          type: string
          format: date-time
          description: >-
            The most recent timestamp (in UTC) that a Blend Income Report was
            generated for that borrower (i.e. the borrower's income was
            successfully verified)
          example: 2018-07-24T00:42:00+00:00Z
        workflowMilestone:
          type: string
          description: The latest completed borrower milestone within Blend
          example: Review and Submit Application_0
        latestIdvStatus:
          type: string
          description: The status of the latest IDV evaluation.
          enum:
            - INCOMPLETE
            - ADDITIONAL_INFORMATION_REQUIRED
            - COMPLETED
          example: INCOMPLETE
        latestIdvScore:
          type: string
          description: The overall score of the latest IDV evaluation (out of 1).
          example: '.94'
        latestIdvOutcome:
          type: string
          description: The decision of the latest IDV evaluation.
          enum:
            - APPROVED
            - MANUAL_REVIEW
            - MANUAL_REVIEW_NO_STEP_UP
            - DENIED
          example: APPROVED
        latestIdvRunDatetime:
          type: string
          format: date-time
          description: Timestamp in UTC of the most recent IDV run for the borrowers
          example: 2023-07-24T00:42:00+00:00Z
        userAgent:
          type: string
          description: >-
            The most recent borrower user agent. Can be used to derive the last
            device type used.
          example: >-
            Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like
            Gecko
        lastUpdatedDatetime:
          type: string
          format: date-time
          description: >-
            The timestamp (in UTC) of the latest action occurring for the
            borrower out of fields available in this report. Please note, this
            timestamp only updates if any of the above fields are updated - it
            does not apply to actions outside this report, so this field does
            not necessarily correspond to the last time the borrower took action
            on the loan. If all other timestamp fields are null, this timestamp
            defaults to the time the borrower user was created (and the borrower
            may not yet have been invited by the loan officer)
          example: 2018-07-24T00:42:00+00:00Z
    ReportingLenderSchema:
      type: object
      required:
        - userId
        - fullName
        - email
      properties:
        userId:
          type: string
          description: Unique User ID associated with the Lender User
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        nmlsId:
          type: string
          description: The NMLS ID of the lender
          example: '123123'
        branchId:
          type: string
          description: >-
            The Branch ID entered into the lender user profile (optional field
            maintained manually by the client)
          example: Springfield
        employeeId:
          type: string
          description: >-
            The lender user's employee ID (optional field maintained manually by
            the client)
          example: '2397'
        fullName:
          type: string
          description: The full name of the lender
          example: John Smith
        email:
          type: string
          description: The email address of the lender
          example: john.smith@xyz.com
        userRoles:
          type: string
          description: A comma separated list of user roles attributed to the lender
          example: Loan Officer
        losUsername:
          type: string
          description: The lender user's LOS Username in Blend
          example: jsmith
        activationDatetime:
          type: string
          format: date-time
          description: The UTC timestamp for when the lender user accepted Terms of Service
          example: 2018-07-24T00:42:00+00:00Z
        invitedDatetime:
          type: string
          format: date-time
          description: The invitation time of the lender (in UTC)
          example: 2018-07-24T00:42:00+00:00Z
        lastLoginDatetime:
          type: string
          format: date-time
          description: The UTC timestamp for the last time the account was opened/used
          example: 2018-07-24T00:42:00+00:00Z
        totalCreatedApplications:
          type: number
          description: >-
            The total number of created application applications assigned to the
            lender user in the last 90 days
          example: 230
        borrowerSubmits:
          type: number
          description: >-
            The total number of loans submitted by the borrower with this lender
            as the primary assignee
          example: 100
        percentLoansSubmitted:
          type: number
          description: >-
            The percent of loans submitted out of the total number of created
            applications assigned to the lender user
          example: 89.22
        percentSubmitsWithGas:
          type: number
          description: >-
            The percent of submitted loans with a Generated Asset Statement on
            the previous date
          example: 18.42
        lastBorrowerSubmitDatetime:
          type: string
          format: date-time
          description: The UTC timestamp for the last time the account was opened/used
          example: 2018-07-24T00:42:00+00:00Z
        averageNpsScore:
          type: number
          description: >-
            The average NPS score of all submitted applications assigned to the
            lender user
          example: 9.5
        calculatedNpsScore:
          type: number
          description: >-
            The calculated NPS score of all submitted applications assigned to
            the lender user
          example: 66
        percentLoansUtilizingFollowups:
          type: number
          description: >-
            The percent of the lender user's loans utilizing follow-ups within
            the date filters provided
          example: 24.88
        followupsManuallyRequested:
          type: number
          description: >-
            The number of manually requested follow-ups by the lender user
            within the date filters provided
          example: 35
        followupsBorrowerCompleted:
          type: number
          description: >-
            The number of follow-ups requested by this lender within the date
            filters provided that were completed by borrowers
          example: 29
        followupsPending:
          type: number
          description: >-
            The number of follow-ups requested within the date filters that have
            not been completed by the borrower
        followupsAccepted:
          type: number
          description: >-
            The number of follow-ups requested within the date filters that were
            accepted by this lender
          example: 72
        followupsRejected:
          type: number
          description: >-
            The number of follow-ups requested within the date filters that were
            rejected by this lender
          example: 22
        asOfDate:
          type: string
          format: date-time
          description: The date that the report was generated
          example: '2019-10-29T04:25:30.000Z'
    ReportingActivitySchema:
      type: object
      required:
        - loanId
        - userId
        - activityId
      properties:
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        activityId:
          type: string
          description: Activity id
          example: e4d546b3er0cd64314365x45b390e1e45deee34ca4fa6cf19eb2b7trrrr12345
        userId:
          type: string
          description: User id
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        type:
          type: string
          description: Activity type
          example: Getting To Know You_0
        startedDatetime:
          type: string
          format: date-time
          description: Start time of the activity (in UTC)
          example: '2018-07-24 00:42:00+00:00'
        completedDatetime:
          type: string
          format: date-time
          description: Completion time of the activity (in UTC)
          example: '2018-07-24 00:42:00+00:00'
    ReportingNPSSchema:
      type: object
      required:
        - loanId
        - partyId
      properties:
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        partyId:
          type: string
          description: >-
            Unique ID for the borrower per application (this is different from
            the borrower's userId, which persists across all of an individual
            borrower's applications). Use this field as the primary key.
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        datetime:
          type: string
          format: date-time
          description: submit time of NPS
          example: '2018-07-24 00:42:00+00:00'
        comment:
          type: string
          description: NPS Comment submitted by borrower
          example: very user friendly
        score:
          type: integer
          description: NPS Score (0-10)
          example: 9
        npsType:
          type: string
          description: >-
            Denotes at what point the NPS score was received by the borrower.
            Values include 'AT_APPLICATION_SUBMIT', if the NPS survey was sent
            to the borrower immediately upon submitting their application, or
            'POST_APPLICATION_SUBMIT' if the survey was sent to the borrower
            after completing follow ups (this setting is configurable)
          example: AT_APPLICATION_SUBMIT
    ReportingDataVerificationUsageSchema:
      type: object
      required:
        - week
        - numberGasGenerated
        - numberLoansSubmitted
        - numberLoansWithGas
        - percentSubmitsWithGas
        - numberTwnInstantAttempt
        - numberTwnInstantSuccess
        - asOfDate
      properties:
        week:
          type: string
          format: date-time
          description: The start date of the week
          example: '2019-09-23T00:00:00.000Z'
        numberLoansSubmitted:
          type: number
          description: The total number of borrower submitted loans for the week
          example: 38
        numberGasGenerated:
          type: number
          description: >-
            The total number of Generated Asset Statements (GAS) on submitted
            loans for that week. This only includes instances where a GAS was
            created from source data in a borrower’s bank account that is
            eligible for GSE rep and warrant programs (D1C/AIM). GAS does not
            include successful asset connectivity in cases that Blend is unable
            to access high enough quality source data for the GSE programs, but
            will pull a PDF instead and the borrower will not be prompted to
            upload bank statements (Assets Statement Fallback)
          example: 23
        numberLoansWithGas:
          type: number
          description: >-
            The total number of borrower submitted loans that week that have at
            least one Generated Asset Statement - this number does not include
            Assets Statement (PDF) Fallbacks; see description above
          example: 45
        percentSubmitsWithGas:
          type: number
          description: >-
            The percent of borrower submitted loans that week that have at least
            one Generated Asset Statement - this percentage does not include
            Assets Statement (PDF) Fallbacks; see description above
          example: 18.42
        numberAssetsStatementFallback:
          type: number
          description: >-
            The total number of Assets Statement (PDF) Fallbacks created on
            submitted loans for that week. An Assets Statement Fallback is
            generated in cases where Blend is unable to access high enough
            quality source data for the GSE programs to generate a GAS, but will
            pull a PDF instead and the borrower will not be prompted to upload
            bank statements; this number does not include Generated Asset
            Statements (GAS) that are eligible for GSE rep and warrant programs
            (D1C/AIM)
          example: 23
        numberLoansWithAssetsStatementFallback:
          type: number
          description: >-
            The total number of borrower submitted loans that week that have at
            least one Asset Statement (PDF) Fallback - this number does not
            include Generated Asset Statements; see description above
          example: 45
        percentSubmitsWithAssetsStatementFallback:
          type: number
          description: >-
            The percent of borrower submitted loans that week that have at least
            one Asset Statement (PDF) Fallback - this number does not include
            Generated Asset Statements; see description above
          example: 18.42
        numberAssetVerification:
          type: number
          description: >-
            The total number of Asset Verifications for borrower submitted loans
            that week, including either Generated Asset Statements (GAS) or
            Asset Statement Fallbacks (PDF Fallbacks); see descriptions above
            for details
          example: 38
        numberLoansWithAssetVerification:
          type: number
          description: >-
            The total number of borrower submitted loans that have at least one
            Asset Verification, including either Generated Asset Statements
            (GAS) or Asset Statement Fallbacks (PDF Fallbacks); see descriptions
            above for details
          example: 45
        percentSubmitsWithAssetVerification:
          type: number
          description: >-
            The percent of borrower submitted loans that have at least one Asset
            Verification, including either Generated Asset Statements (GAS) or
            Asset Statement Fallbacks (PDF Fallbacks); see descriptions above
            for details
          example: 18.42
        numberBlendIncomeVerifications:
          type: number
          description: >-
            The total number of Blend Income Reports generated on borrower
            submitted loans in that week
          example: 38
        numberLoansWithBlendIncomeVerification:
          type: number
          description: >-
            The total number of borrower submitted loans for that week with at
            least one Blend Income Verification
          example: 45
        percentSubmitsWithBlendIncomeVerification:
          type: number
          description: >-
            The percent of borrower submitted loans for that week with at least
            one Blend Income Verification
          example: 18.42
        numberTwnInstantAttempt:
          type: number
          description: The total number of TWN instant attempts for that week
          example: 1754
        numberTwnInstantSuccess:
          type: number
          description: The total number of TWN instant successes for that week
          example: 892
        asOfDate:
          type: string
          format: date-time
          description: The effective date of the report
          example: '2019-10-29T04:25:30.000Z'
        deployment:
          type: string
          description: The tenant making the API call
          example: blend
    ReportingFollowupsSchema:
      type: object
      required:
        - followUpId
        - loanId
        - followUpCreationTime
        - asOfDate
      properties:
        followUpId:
          $ref: '#/components/schemas/FollowUpId'
        id:
          type: string
          description: >-
            The external UID of the followup in Blend's system. The static
            identifier that should be used to access followups across Blend and
            external integrations.
          example: 9067d01b-28ec-4d3a-8389-18a3ca937bee
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        loanType:
          type: string
          description: The specific product (Mortgage, HELOAN, HELOC, Auto, etc)
          example: MORTGAGE
        requestType:
          type: string
          description: >-
            The type of request that created the followup. Can be AUTOMATED,
            MANUAL, or SUGGESTED
          example: AUTOMATED
        followUpType:
          type: string
          description: The followup requested
          example: Document Request
        followUpText:
          type: string
          description: >-
            Optional text containing additional details about the follow-up. Can
            be set by Blend, or custom text
          example: Pre-Approval Notice (E-Sign)
        followUpCreatedDatetime:
          type: string
          format: date-time
          description: The timestamp when the followup was created in Blend
          example: '2019-10-29T04:25:30.000Z'
        currentStatus:
          type: string
          description: >-
            The current status of the followup. Can be Suggested, Declined,
            Requested, Pending Review, Completed, Completed Externally,
            Rejected, Cancelled
          example: Requested
        requestedDatetime:
          type: string
          format: date-time
          description: The UTC timestamp when the followup was requested
          example: '2019-10-29T04:25:30.000Z'
        requestedUserId:
          type: string
          description: >-
            The user_id that requested the followup. Can be 'system' or a Lender
            User ID
          example: bf11aa77-eef0-422a-a3f0-884662c33254
        requestedUserName:
          type: string
          description: Full name of the Lender User that requested the followup
          example: Mike Carlson
        requestedUserEmail:
          type: string
          description: Email address of the Lender User that requested the followup
          example: mc@carlson.com
        completedDatetime:
          type: string
          format: date-time
          description: The timestamp when the followup was completed by the borrower
          example: '2019-10-29T04:25:30.000Z'
        completedUserId:
          type: string
          description: >-
            The User ID that completed the followup (generally associated with a
            Borrower)
          example: bf11ks83-eef0-422a-a3f0-8846skeoic24
        reviewAction:
          type: string
          description: The action taken by the reviewing lender. Can be ACCEPT or REJECT.
          example: ACCEPT
        reviewedDatetime:
          type: string
          format: date-time
          description: The timestamp when the follow-up was reviewed (in UTC)
          example: '2019-10-29T04:25:30.000Z'
        reviewedUserId:
          type: string
          description: The Lender User ID that reviewed the followup
          example: bf11aa77-eef0-422a-a3f0-884662c33254
        cancelledDatetime:
          type: string
          format: date-time
          description: The timestamp when the followup was cancelled (in UTC)
          example: '2019-10-29T04:25:30.000Z'
        cancelledUserId:
          type: string
          description: The lender User ID that cancelled the followup
          example: 0005e3dc-ba27-4fe7-bfea-b809912d632c
        asOfDate:
          type: string
          format: date-time
          description: The date that the report was generated
          example: '2019-10-29T04:25:30.000Z'
        clientFollowupReferenceId:
          type: string
          description: Unique id passed by client for referencing follow-up
          example: 0005e3dc-ba27-4fe7-bfea-b809912d632c
    ReportingLenderPabActivitiesSchema:
      type: object
      required:
        - activityId
        - loanId
      properties:
        activityId:
          type: string
          description: Unique ID of the activity
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        loanId:
          $ref: '#/components/schemas/ApplicationId'
        loanNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        loanType:
          type: string
          description: The specific product (Mortgage, HELOAN, HELOC, Auto, etc)
          example: MORTGAGE
        loanPurposeType:
          type: string
          description: >-
            REFINANCE or PURCHASE for Mortgage loans. Will be set to OTHER or
            null for other loan types.
          example: PURCHASE
        appLeadSource:
          type: string
          description: >-
            Specifies how an app was created (BORROWER, LENDER, INGEST,
            PUBLIC_API)
          example: BORROWER
        userId:
          type: string
          description: >-
            User ID for the user that completed the action (can be the user ID
            for a borrower or lender, or 'system')
          example: 002e8da3-e5f9-45b2-ba55-1a2444ad5fd9
        userType:
          type: string
          description: >-
            The type for the user that completed the action. Can be system,
            borrower, or lender
          example: lender
        lenderUserName:
          type: string
          description: >-
            If userType is a lender, the full name of the lender user that
            completed the activity
          example: Vigtor Lamgert
        lenderUserEmail:
          type: string
          description: >-
            If userType is a lender, the email address of the lender user that
            completed the activity
          example: lam@vic.com
        activityType:
          type: string
          description: >-
            Which PAB Activity was done on the loan. Can be 'ecoa updated',
            'pulled credit' 'selected a product' 'sent pre-approval letter' 'ran
            desktop underwriter'
          example: pulled credit
        activityDatetime:
          type: string
          format: date-time
          description: The UTC timestamp for when the activity was done on the loan
          example: 2018-07-24T00:42:00+00:00Z
        activitySuccess:
          type: boolean
          description: Field indicating whether the activity was successful or not
          example: 'true'
        creditPulltype:
          type: string
          description: For credit pull events - the type of credit pull (Hard or Soft)
          example: Hard
        creditBureaus:
          type: string
          description: >-
            For credit pull events - a JSON array containing the bureaus where
            credit was pulled from
          example: '["Experian","TransUnion","Equifax"]'
        creditBureautype:
          type: string
          description: For credit pull events - the type of pull (single or tri)
          example: tri
        creditJoint:
          type: boolean
          description: For credit pull events - if the credit was pulled jointly.
          example: 'true'
        creditActiontype:
          type: string
          description: For credit pull events - the action on the pull
          example: Order
        ausProduct:
          type: string
          description: >-
            For activities 'initiated automated underwriting' or 'ran desktop
            underwriter' - the specific AUS product used ('desktopUnderwriter',
            'loanProductAdvisor')
          example: loanProductAdvisor
        ausRecommendation:
          type: string
          description: >-
            For activities 'initiated automated underwriting' or 'ran desktop
            underwriter' - what the recommendation is ('Approve/Eligible',
            'Approve/Ineligible', 'Refer with Caution', etc )
          example: Approve/Eligible
    ReportingDepositAccountApplicationsSchema:
      type: object
      required:
        - asOfDatetime
        - applicationCreatedDatetime
        - loanId
        - applicationId
      properties:
        asOfDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the data in the report was last refreshed.
          example: 2018-08-24T00:42:00+00:00Z
        applicationCreatedDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the application was created.
          example: '2021-06-01T21:35:54.000Z'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationNumber:
          type: string
          description: Application number displayed in the Blend Workspace.
          example: '123456'
        leadSource:
          type: string
          description: >-
            Type of party that created the application, either "BORROWER" (i.e.
            the applicant) or "LENDER".
          example: BORROWER
        appSourceMarketingTag:
          type: string
          description: >-
            Marketing identifier of the top-of-funnel campaign to which the
            application should be attributed.
          example: google
        applicantSignupUrl:
          type: string
          description: >-
            URL of the page through which the primary applicant first created a
            Blend account. This URL may contain useful referral information if
            the applicant first arrived at the signup page through a
            lender-user's custom link or invitation. If there is no URL
            associated with the primary applicant, this field falls back on the
            first signup URL associated with the application overall (i.e. that
            of a coapplicant), if any.
          example: https://apply.bank.com/?product=BigSpenderAccount
        isSingleAppFlowApplication:
          type: boolean
          description: >-
            Boolean indicator for whether the deposit account application was
            created (and prefilled) via the "Single App Flow" feature, wherein
            the applicant had actually started by submitting an application for
            another product, such as a credit card or a loan, for which the
            applicant must hold a deposit account in order to be eligible. In
            this situation, the applicant would have been taken from that
            original application into a new deposit account application with as
            many fields prefilled as possible based on the applicant's responses
            in preceding application.
          example: 'true'
        prefillSourceApplicationId:
          type: string
          description: >-
            In the case of a "Single App Flow" application, the application_id
            of the applicant's previous credit card or loan application from
            which the new required deposit account application was prefilled.
          example: bdd8b5ab-ecea-41cd-a175-0d19cc240b52
        prefillSourceApplicationType:
          type: string
          description: >-
            IIn the case of a "Single App Flow" application, the product for
            which the applicant was originally applying, i.e. the product
            associated with the prefill_source_application_id; for example
            "Credit Card", "Personal Loan", "Auto Loan", etc.
          example: Personal Line of Credit
        primaryAssignedReviewerUserId:
          type: string
          description: Blend user ID of the application's primary assigned lender-user.
          example: 7b7485d4-15db-4172-88e5-1c92f11b9f67
        primaryAssignedReviewerFullName:
          type: string
          description: Full name in the primary assigned reviewer's user profile.
          example: Leonardo da Vinci
        primaryAssignedReviewerEmail:
          type: string
          description: Email address of the primary assigned reviewer.
          example: leo@renaissance.com
        primaryAssignedReviewerBranchId:
          type: string
          description: Branch ID in the primary assigned reviewer's user profile.
          example: Old Italy
        primaryAssignedReviewerEmployeeId:
          type: string
          description: Employee ID in the primary assigned reviewer's user profile.
          example: '4555'
        primaryAssignedReviewerNmlsId:
          type: string
          description: >-
            Nationwide Multistate Licensing System ID in the primary assigned
            reviewer's user profile.
          example: '987654'
        productBundleReferenceId:
          type: string
          description: >-
            Product bundle ID associated with the application (a single
            application can open multiple accounts, e.g. "Checking & Savings").
          example: CKSV
        totalNumberofAccountsInBundle:
          type: integer
          description: >-
            Number of accounts in the product bundle that will be opened if the
            application is approved.
          example: '2'
        debitCardSelected:
          type: boolean
          description: >-
            Booelan indicator for whether the applicant opted in for a debit
            card.
          example: 'true'
        overdraftProtectionSelected:
          type: boolean
          description: >-
            Boolean indicator for whether the applicant opted in for overdraft
            protection.
          example: 'true'
        numberOfCheckingAccounts:
          type: integer
          description: >-
            Number of checking accounts in the product bundle that will be
            opened if the application is approved.
          example: '1'
        checkingProductReferenceIds:
          type: string
          description: >-
            Product ID(s) of the specific checking product(s) in the bundle; may
            be the same as the productBundleReferenceId if the application is
            for a single checking account. This field will contain a
            comma-separated list of IDs when the application is for a
            multi-account bundle containing more than one checking account.
          example: CZECH
        checkingProductNames:
          type: string
          description: >-
            Full humanized name(s) of the checking product(s) in the bundle.
            This field will contain a comma-separated list of names when the
            application is for a multi-account bundle with more than one
            checking account.
          example: Mic Check One Two One Two
        numberOfSavingsAccounts:
          type: integer
          description: >-
            Number of savings accounts in the product bundle that will be opened
            if the application is approved.
          example: '1'
        savingsProductReferenceIds:
          type: string
          description: >-
            Product ID(s) of the specific savings product(s) in the bundle; may
            be the same as the productBundleReferenceId if the application is
            for a single savings account. This field will contain a
            comma-separated list of identifiers when the application is for a
            multi-account bundle containing more than one savings account.
          example: S100
        savingsProductNames:
          type: string
          description: >-
            Full humanized name(s) of the savings product(s) in the bundle. This
            field will contain a comma-separated list of names when the
            application is for a multi-account bundle with more than one savings
            account.
          example: Save the Whales
        numberofCdAccounts:
          type: integer
          description: >-
            Number of certificates of deposit (CDs) in the product bundle that
            will be opened if the application is approved.
          example: '1'
        cdProductReferenceIds:
          type: string
          description: >-
            Product ID(s) of the specific CD product(s) in the bundle; may be
            the same as the productBundleReferenceId if the application is for a
            single CD. This field will contain a comma-separated list of
            identifiers when the application is for a multi-account bundle
            containing more than one CD.
          example: CD36
        cdProductNames:
          type: string
          description: >-
            Full humanized name(s) of the CD product(s) in the bundle. This
            field will contain a comma-separated list of names when the
            application is for a multi-account bundle with more than one CD.
          example: Certificate of Deposit
        cdTerms:
          type: string
          description: >-
            Chosen term length(s) of the CD(s) in the bundle, appearing as
            strings such as "12_MONTHS" and "36_MONTHS". This field will contain
            a comma-separated list of term lengths when the application is for a
            multi-account bundle with more than one CD.
          example: 36_MONTHS
        numberofHsaAccounts:
          type: integer
          description: >-
            Number of health savings accounts (HSAs) in the product bundle that
            will be opened if the application is approved.
          example: '1'
        hsaProductReferenceIds:
          type: string
          description: >-
            Product ID(s) of the specific HSA product(s) in the bundle; may be
            the same as the productBundleReferenceId if the application is for a
            single HSA. This field will contain a comma-separated list of
            identifiers when the application is for a multi-account bundle
            containing more than one HSA.
          example: HSA
        hsaProductNames:
          type: string
          description: >-
            Full humanized name(s) of the HSA product(s) in the bundle. This
            field will contain a comma-separated list of names when the
            application is for a multi-account bundle with more than one HSA.
          example: Health Savings Account
        hsaPlanTypes:
          type: string
          description: >-
            Chosen plan type(s) of the HSA(s) in the bundle, either "INDIVIDUAL"
            or "FAMILY". This field will contain a comma-separated list of plan
            types when the application is for a multi-account bundle with more
            than one HSA.
          example: INDIVIDUAL
        totalNumberOfApplicants:
          type: integer
          description: >-
            Number of applicants on the application (primary, co-, and minor
            applicants).
          example: '2'
        numberOfPrimaryApplicants:
          type: integer
          description: >-
            Number of primary applicants on the application. Every application
            should have one primary applicant.
          example: '1'
        primaryApplicantEmploymentStatus:
          type: string
          description: >-
            Employment status of the primary applicant. There are five statuses
            the applicant can choose from, including "EMPLOYED",
            "SELF_EMPLOYED", "UNEMPLOYED", "RETIRED", and "NEVER_EMPLOYED".
          example: EMPLOYED
        primaryApplicantIsExistingMember:
          type: boolean
          description: >-
            Boolean indicator that is TRUE if either the member lookup call
            returned a match for the primary applicant in the core banking
            system, or the primary applicant self-indicated that they are an
            existing member of the institution if asked in the application.
          example: 'true'
        numberOfCoapplicants:
          type: integer
          description: Number of coapplicants on the application.
          example: '1'
        coapplicantEmploymentStatus:
          type: string
          description: >-
            Employment status of the coapplicant. There are five statuses the
            coapplicant can choose from, including "EMPLOYED", "SELF_EMPLOYED",
            "UNEMPLOYED", "RETIRED", and "NEVER_EMPLOYED".
          example: UNEMPLOYED
        coapplicantIsExistingMember:
          type: boolean
          description: >-
            Boolean indicator that is TRUE if the member lookup call returned a
            match for the coapplicant in the core banking system.
          example: 'true'
        numberOfMinorApplicants:
          type: integer
          description: >-
            Number of minor applicants (i.e. persons under 18) on the
            application.
          example: '0'
        firstUiTrackingEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event associated with the
            application. The presence of an event should indicate that the
            applicant at least allowed the UI to load.
          example: '2021-07-11T18:30:18.000Z'
        firstMinorInfoWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Minor Info"
            workflow.
          example: '2021-07-11T18:30:18.000Z'
        firstPersonalInfoWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Personal Info"
            workflow.
          example: '2021-07-11T18:30:18.000Z'
        hasActivityBeyondInitialDetailsTask:
          type: boolean
          description: >-
            Boolean indicator compiling all possible downfunnel evidence that
            the application made it past the initial "Get Applicant Details"
            task in the "Personal Info" workflow. The field is intended to be
            used as a more qualified definition of "started", with a value of
            TRUE identifying applications that were not abandoned on the first
            page.
          example: 'true'
        deviceTypestart:
          type: string
          description: >-
            Type of device ("Desktop", "Mobile", or "Tablet") used for the
            application's first user action, which should correspond to clicking
            "continue" on the first page of the application.
          example: Desktop
        firstIdvWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Identity
            Verfication" workflow.
          example: '2021-07-11T18:30:18.000Z'
        firstIdvWorkflowSubmitDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first click on "Submit and Continue" on the
            final page of the "Identity Verification" workflow, which should
            submit the applicant's information to the third-party identity
            verification (IDV) provider (Alloy or Socure). The exception to this
            is when the applicant is an existing member of the institution, and
            the institution has configured its application to "offboard"
            existing members from the application without submission to the IDV
            provider.
          example: '2021-07-11T18:30:18.000Z'
        firstIdvWorkflowAdditionalInfoRequestedDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first time an applicant was sent to the
            supplementary "Step Up" task in the "Identity Verification"
            workflow, where additional identifying information is requested, if
            the initial ID information provided was found to be insufficient for
            evaluation/decisioning.
          example: '2021-07-11T18:30:18.000Z'
        firstAccountSetupWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Account Setup"
            workflow.
          example: '2021-07-11T18:30:18.000Z'
        has_beneficiaries_added:
          type: boolean
          description: >-
            Boolean indicator for whether any beneficiaries were specified and
            allocated for the new account(s) in the "Account Setup" workflow.
          example: 'true'
        applicationSubmittedDatetime:
          type: string
          format: date-time
          description: UTC datetime of application submission.
          example: '2021-07-11T18:30:18.000Z'
        applicationSubmissionStatus:
          type: string
          description: >-
            Supplementary status indicator that may be able to confirm
            application submission even in the case of a lapse in the event
            tracking that produces applicationSubmittedDatetime; either
            "SUBMITTED" or "NOT SUBMITTED".
          enum:
            - SUBMITTED
            - NOT SUBMITTED
          example: SUBMITTED
        totalNumberOfFollowupsRequested:
          type: integer
          description: >-
            Number of follow-up tasks requested of the applicant by a
            lender-user through Blend's "Follow-Ups" tool.
          example: '2'
        firstAutomatedApprovalDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first automated approval decision on the
            application emitted by the third-party identity verification (IDV)
            provider (Alloy or Socure). An approval decision will not be emitted
            unless and until the application is submitted.
          example: '2021-07-11T18:30:18.000Z'
        firstAutomatedReferralDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first automated referral on the application,
            where the third-party identity verification (IDV) provider (Alloy or
            Socure) flags the application for manual review by a lender-user. A
            referral decision will not be made unless and until the application
            is submitted.
          example: '2021-07-11T18:30:18.000Z'
        firstAutomatedRejectionDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first automated rejection decision by the
            third-party identity verification (IDV) provider (Alloy or Socure)
            or by the "system" (i.e. application configurations set by the
            institution to reject/"offboard" certain applicants, like existing
            members, on the spot). A rejection decision can be emitted prior to
            application submission if the applicant fails the basic preliminary
            IDV screening (because of a low Qualifile score) and triggers an
            "adverse action notice" (AAN) in the "Identity Verification"
            workflow, or if they are rejected by system rules.
          example: '2021-07-11T18:30:18.000Z'
        firstAutomatedRejectionSource:
          type: string
          description: >-
            Source of the first automated rejection decision, either "IDV
            provider" (Alloy or Socure) or "system" (i.e. application
            configurations set by the institution to reject/"offboard" certain
            applicants, like existing members, on the spot).
          example: IDV provider
        primaryApplicantRejectedViaAan:
          type: boolean
          description: >-
            Booelan indicator for whether the primary applicant was rejected via
            "adverse action notice" (AAN) based on their "Qualifile" score in
            the "Identity Verification" workflow, which would result in an
            immediate rejection of the application without proceeding to the
            "Account Setup" workflow. If the applicant has not yet submitted
            their information for IDV evaulation, this field will be null.
          example: 'true'
        coapplicantRejectedViaAan:
          type: boolean
          description: >-
            Booelan indicator for whether the coapplicant was rejected via
            "adverse action notice" (AAN) based on their "Qualifile" score in
            the "Identity Verification" workflow. If there is no coapplicant on
            the application, or the coapplicant has not yet submitted their
            information for IDV evaulation, this field will be null.
          example: 'false'
        firstManualApprovalDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first manual approval decision on the
            application issued by a lender-user. An application cannot be
            reviewed or approved unless and until the application is submitted.
          example: '2021-07-11T18:30:18.000Z'
        firstManualApprovalReviewerUserId:
          type: string
          description: >-
            Blend user ID of the lender-user who manually approved the
            application.
          example: 78be32d9-fa0f-41da-9a99-ef66bdd2d2a5
        firstManualApprovalReviewerFullName:
          type: string
          description: >-
            Full name in the user profile of the lender-user who manually
            approved the application.
          example: Claude Monet
        firstManualApprovalReviewerEmail:
          type: string
          description: >-
            Email address of the lender-user who manually approved the
            application.
          example: bigstrokes@impressionism.com
        firstManualApprovalReviewerBranchId:
          type: string
          description: >-
            Branch ID in the user profile of the lender-user who manually
            approved the application.
          example: French Countryside
        firstManualApprovalReviewerEmployeeId:
          type: string
          description: >-
            Employee ID in the user profile of the lender-user who manually
            approved the application.
          example: '5050'
        firstManualApprovalReviewerNmlsId:
          type: string
          description: >-
            Nationwide Multistate Licensing System ID in the user profile of the
            lender-user who manually approved the application.
          example: '096433'
        firstManualRejectionDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first manual rejection decision on the
            application issued by a lender user. An application cannot be
            reviewed or rejected unless and until the application is submitted.
          example: '2021-07-11T18:34:57.000Z'
        firstManualRejectionReviewerUserId:
          type: string
          description: >-
            Blend user ID of the lender-user who manually rejected the
            application.
          example: f1e432d6-d7d9-4998-8016-56cca3bcb762
        firstManualRejectionReviewerFullName:
          type: string
          description: >-
            Full name in the user profile of the lender-user who manually
            rejected the application.
          example: Banksy
        firstManualRejectionReviewerEmail:
          type: string
          description: >-
            Email address of the lender-user who manually rejected the
            application.
          example: mr.e@graffiti.com
        firstManualRejectionReviewerBranchId:
          type: string
          description: >-
            Branch ID in the user profile of the lender-user who manually
            rejected the application.
          example: Piccadilly
        firstManualRejectionReviewerEmployeeId:
          type: string
          description: >-
            Employee ID in the user profile of the lender-user who manually
            rejected the application.
          example: '884411'
        firstManualRejectionReviewerNmlsId:
          type: string
          description: >-
            Nationwide Multistate Licensing System ID in the user profile of the
            lender-user who manually rejected the application.
          example: '884411'
        latestDecisionDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the latest decision on the application, automated or
            manual, approval or rejection. See descriptions of
            first_automated_approval_datetime,
            first_automated_rejection_datetime, first_manual_approval_datetime,
            and first_manual_rejection_datetime for detail on each decision type
            and outcome. Referrals are not considered true "decisions" and thus
            are ignored by this field.
          example: '2021-05-30T02:25:02.000Z'
        latestDecisionType:
          type: string
          description: >-
            Type, either "automated" or "manual", of the latest decision on the
            appliction, approval or rejection. Referrals are not considered true
            "decisions" and thus are ignored by this field.
          example: automated
        latestDecisionOutcome:
          type: string
          description: >-
            Outcome, either "approve" or "reject", of the latest decision on the
            application, automated or manual. Referrals are not considered true
            "decisions" and thus are ignored by this field.
          example: reject
        latestDecisionAutomatedRejectionSource:
          type: string
          description: >-
            If the latest decision on the application is an automated rejection,
            the source of that rejection, either "IDV provider" (Alloy or
            Socure) or "system" (i.e. application configurations set by the
            institution to reject/"offboard" certain applicants, like existing
            members, on the spot).
          example: IDV provider
        latestDecisionReviewerUserId:
          type: string
          description: >-
            If the latest decision on the application is manual, the Blend user
            ID of the lender-user who made that decision.
          example: 90fc97c9-4fbb-479b-82c7-3b1885510cc6
        latestDecisionReviewerFullName:
          type: string
          description: >-
            If the latest decision on the application is manual, the full name
            in the user profile of the lender-user who made that decision.
          example: Bob Ross
        latestDecisionReviewerEmail:
          type: string
          description: >-
            If the latest decision on the application is manual, the email
            address of the lender-user who made that decision.
          example: robert@happylittleclouds.com
        latestDecisionReviewerBranchId:
          type: string
          description: >-
            If the latest decision on the application is manual, the branch ID
            in the user profile of the lender-user who made that decision.
          example: PBS
        latestDecisionReviewerEmployeeId:
          type: string
          description: >-
            If the latest decision on the application is manual, the employee ID
            in the user profile of the lender-user who made the decision.
          example: '777'
        latestDecisionReviewerNmlsId:
          type: string
          description: >-
            If the latest decision on the application is manual, the Nationwide
            Multistate Licensing System ID in the user profile of the
            lender-user who made that latest decision.
          example: '234264'
        applicationApprovalStatus:
          type: string
          description: >-
            Approval status of the application, either "APPROVED", "REFERRED",
            or "REJECTED" if the application has reached a decisioning point, or
            null if not.
          enum:
            - APPROVED
            - REFERRED
            - REJECTED
          example: APPROVED
        accountBookedToCoreDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime that the newly opened account(s) was successfully
            booked to the institution's core banking system.
          example: '2021-04-08T11:02:29.000Z'
        applicationBookingStatus:
          type: string
          description: >-
            Supplementary status indicator that may be able to confirm that the
            newly opened account(s) was successfully booked even in the case of
            a lapse in the event tracking that produces
            accountBookedToCoreDatetime; either "BOOKED" or null.
          enum:
            - BOOKED
          example: BOOKED
        firstFundingWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Opening Deposit"
            workflow.
          example: '2021-04-08T11:02:29.000Z'
        firstOpeningDepositTransactionSubmittedDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first deposit transaction submitted through the
            "Opening Deposit" workflow. The exception to this is for
            institutions that have configured their application to preemptively
            require the applicant to complete the opening deposit tasks in the
            "Account Setup" workflow prior to application submission, in which
            case this field will still report a datetime once those tasks have
            been completed, even if the application was never subsequently
            submitted, approved, and booked to the core banking system, and
            accordingly no opening deposits were actually transferred.
          example: '2021-04-08T11:02:29.000Z'
        numberOfNewAccountsFunded:
          type: integer
          description: >-
            Number of newly opened accounts funded with an initial deposit
            submitted through the "Opening Deposit" workflow. The exception to
            this is for institutions that have configured their application to
            preemptively require the applicant to complete the opening deposit
            tasks in the "Account Setup" workflow prior to application
            submission, in which case this field will still report the number of
            intended desintation accounts once those tasks have been completed,
            even if the application was never subsequently submitted, approved,
            and booked to the core banking system, and accordingly no opening
            deposits were actually transferred.
          example: '2'
        openingDepositAmounts:
          type: string
          description: >-
            Dollar amount(s) of the opening deposit(s) submitted through the
            "Opening Deposit" workflow, rounded to the nearest increment of 50.
            This field will contain a comma-separated list of amounts when
            multiple newly opened accounts that originated from the same
            application were funded. The exception to this is for institutions
            that have configured their application to preemptively require the
            applicant to complete the opening deposit tasks in the "Account
            Setup" workflow prior to application submission, in which case this
            field will still report the intended deposit amount(s) once those
            tasks have been completed, even if the application was never
            subsequently submitted, approved, and booked to the core banking
            system, and accordingly no opening deposits were actually
            transferred.
          example: 1000, 100
        totalAmountDeposited:
          type: integer
          description: >-
            Sum of the dollar amounts (each rounded to the nearest increment of
            50 prior to summation) of the opening deposits submitted through the
            "Opening Deposit" workflow; the sum will be the same as the value in
            opening_deposit_amounts if only one new account was funded. The
            exception to this is for institutions that have configured their
            application to preemptively require the applicant to complete the
            opening deposit tasks in the "Account Setup" workflow prior to
            application submission, in which case this field will still report
            the intended total deposit amount once those tasks have been
            completed, even if the application was never subsequently submitted,
            approved, and booked to the core banking system, and accordingly no
            opening deposits were actually transferred.
          example: '1100'
        openingDepositSourceAccountConnectionMethod:
          type: string
          description: >-
            Method used to connect an external source account for the transfer
            of an opening deposit in the "Opening Deposit" workflow. The
            applicant can either use the Plaid integration to log in to a
            financial institution, or manually enter the account and routing
            numbers of the source account. This field will have a value of
            either "Plaid", "manual entry", or "unknown" when
            first_opening_deposit_transaction_submitted_datetime is populated,
            and null otherwise. The exception to this is for institutions that
            have configured their application to preemptively require the
            applicant to complete the opening deposit tasks in the "Account
            Setup" workflow prior to application submission, in which case this
            field will still report the chosen connection method once those
            tasks have been completed, even if the application was never
            subsequently submitted, approved, and booked to the core banking
            system, and accordingly no opening deposits were actually
            transferred.
          example: Plaid
        openingDepositSourceAccountType:
          type: string
          description: >-
            Type of source account used to fund the opening deposit, either
            "checking", "savings", or "unknown". The account type (checking or
            savings) is known for all Plaid-connected source accounts, whereas
            this information is only collected for manually entered source
            accounts if the instutition has configured the application to ask
            the applicant to specify the account type. The exception to this is
            for institutions that have configured their application to
            preemptively require the applicant to complete the opening deposit
            tasks in the "Account Setup" workflow prior to application
            submission, in which case this field will still report the intended
            source account type once those tasks have been completed, even if
            the application was never subsequently submitted, approved, and
            booked to the core banking system, and accordingly no opening
            deposits were actually transferred.
          example: checking
        applicationFundingStatus:
          type: string
          description: >-
            Funding status of the application. This field will be "FUNDED VIA
            BLEND" if an opening deposit for at least one newly opened account
            was submitted through the "Opening Deposit" workflow (i.e. if
            application_booking_status = "BOOKED" and
            first_opening_deposit_transaction_submitted_datetime exists), and
            null otherwise.
          enum:
            - FUNDED VIA BLEND
          example: FUNDED VIA BLEND
        applicationStatusOverall:
          type: string
          description: >-
            Overall latest status of the application (i.e. the most down-funnel
            status reached to date), either "NOT SUBMITTED", "SUBMITTED",
            "REFERRED", "APPROVED", "REJECTED", "BOOKED", or "FUNDED VIA BLEND".
          enum:
            - NOT SUBMITTED
            - SUBMITTED
            - APPROVED
            - REFERRED
            - REJECTED
            - BOOKED
            - FUNDED VIA BLEND
          example: FUNDED VIA BLEND
        firstOnlineBankingRegistrationWorkflowEventDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of the first tracking event in the "Online Banking
            Registration" workflow.
          example: '2021-06-01T21:39:48.000Z'
        onlineBankingRegistrationCompletedDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of when the new account holder succesfully created and
            submitted login credentials for online banking access at the
            institution via the "Online Banking Registration" workflow.
          example: '2021-06-01T21:39:48.000Z'
        applicationLateTouchDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of when the application was last touched (by either an
            applicant or a lender-user).
          example: '2021-06-01T21:39:48.000Z'
        applicationLastTouchedByUserId:
          type: string
          description: >-
            Blend user ID of the applicant or lender-user who last touched the
            application.
          example: 9b194ac0-c6d3-4f01-942d-96da665c207a
        applicationLastUpdatedDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of when the application record was last updated by the
            system.
          example: '2021-06-01T21:39:48.000Z'
        applicationArchivedDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the application was archived in Blend.
          example: '2021-06-01T21:39:48.000Z'
        applicationDeletedDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the application was deleted by a user.
          example: '2021-06-01T21:39:48.000Z'
        applicationPurgedDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of when the application was purged from Blend
            production.
          example: '2021-06-01T21:39:48.000Z'
    ReportingConfigurableProductsApplicationsSchema:
      type: object
      required:
        - asOfDatetime
        - productName
        - applicationCreatedDatetime
        - applicationId
      properties:
        asOfDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the data in the report was last refreshed.
          example: 2018-08-24T00:42:00+00:00Z
        productName:
          type: string
          description: >-
            Text name of the product for which the applicant is applying, as
            defined by the application developer.
          example: Personal Loan
        applicationCreatedDatetime:
          type: string
          format: date-time
          description: UTC datetime of when the application was created.
          example: 2018-08-24T00:42:00+00:00Z
        applicationId:
          type: string
          description: >-
            PRIMARY KEY - UUID of the application in Blend's system. The static
            identifier that should be used to connect the application's identity
            across Blend and external integrations.
          example: 670cefa9-c70e-420f-a77e-53616247ede8
        applicationNumber:
          type: string
          description: Application number displayed in the Blend Workspace.
          example: 220123
        primaryAssigneeUserId:
          type: string
          description: Blend user ID of the application's primary assigned lender-user.
          example: 95ccbcbb-6a94-420e-8638-427905350ac9
        primaryAssigneeFullName:
          type: string
          description: Full name in the primary assignee's user profile.
          example: Christopher Paul
        primaryAssigneeEmail:
          type: string
          description: Email address of the primary assignee.
          example: christopher.paul@blend.com
        primaryAssigneeBranchId:
          type: string
          description: Branch ID in the primary assignee's user profile.
          example: 10341
        primaryAssigneeEmployeeId:
          type: string
          description: Employee ID in the primary assignee's user profile.
          example: h101081
        applicationDeletionDatetime:
          type: string
          format: date-time
          description: >-
            UTC datetime of when the application was deleted from Blend's
            production database, either manually by a user or automatically.
          example: 2022-12-26T10:30:00+00:00Z
        applicationDeletionType:
          type: string
          description: >-
            The method by which the application was deleted from Blend, either
            "MANUAL" or "AUTOMATIC".
          enum:
            - MANUAL
            - AUTOMATIC
          example: AUTOMATIC
    EventSchema:
      type: object
      required:
        - eventId
        - loanId
        - status
        - eventType
        - createdAt
        - statusSetAt
      properties:
        eventId:
          type: string
          description: Blend UUID of the event
          example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
        entityId:
          type: string
          description: >-
            A Blend UUID. If this is set, all events for the given entity are
            returned.
          example: 670cefa9-c70e-420f-a77e-53616247ede8
        status:
          type: string
          description: The latest status of the event, updated by the API
          example: FAILED
          enum:
            - EMITTED
            - ACKNOWLEDGED
            - PROCESSING
            - SUCCEEDED
            - FAILED
            - NO_ACTION
        eventType:
          type: string
          description: Event type
          example: documentEvent.AVAILABLE
          enum:
            - applicantEvent.ADDED
            - applicationEvent.READY_TO_FUND
            - applicationEvent.SUBMITTED
            - applicationEvent.EXPORTED
            - applicationEvent.TRID_TRIGGERED
            - applicationEvent.ARCHIVED
            - applicationEvent.BROKER_EXPORT
            - documentEvent.AVAILABLE
            - documentEvent.EXPORTED
            - eConsentStatus.UPDATE
            - workflowEvent.COMPLETED
        createdAt:
          type: string
          description: The UTC timestamp of the event creation. ISO format
          example: '2018-08-24T14:08:13.862594+00:00'
        statusSetAt:
          type: string
          description: >-
            The UTC timestamp of the latest status that was posted for the
            event. ISO format
          example: '2018-08-24T14:08:13.862594+00:00'
    EventWithDataSchema:
      allOf:
        - $ref: '#/components/schemas/EventSchema'
        - type: object
          properties:
            eventData:
              type: object
              description: The original data sent when the event was emitted.
              example:
                type: application
                action: updated
                solution: CONSUMER_MORTGAGE
                id: 282f3df7-7900-45d5-aafe-b438def61d7c
                fields:
                  solutionSubType:
                    value: MORTGAGE
                trigger:
                  triggeredAt: '2018-06-14T15:08:18.356Z'
                  type: SUBMITTED
    EventDescribePath:
      type: object
      required:
        - type
        - system
        - version
      properties:
        type:
          type: string
          description: >-
            The readable name of the event type relative to the system relevant
            to the described path.
          example: applicationCompleted
          enum:
            - applicationCompleted
            - applicationExport
            - applicationExported
            - applicationTRIDTriggered
            - applicationArchived
            - applicationUnarchived
            - eConsent
            - applicationFileAvailable
            - documentExported
            - brokerExport
            - partyCreated
            - processCompleted
            - applicationSubmitted
            - applicationRejected
            - accountReadyToFund
            - applicantRejected
            - applicantReadyForDecisioning
            - disclosuresViewed
            - disclosuresSigned
            - disclosuresExpired
            - disclosuresDeclined
            - disclosuresStatusUpdated
            - intentToProceed
            - unknownEvent
            - applicantEvent.ADDED
            - applicationEvent.ADDED
            - applicationEvent.READY_TO_FUND
            - applicationEvent.SUBMITTED
            - applicationEvent.EXPORTED
            - applicationEvent.TRID_TRIGGERED
            - applicationEvent.ARCHIVED
            - applicationEvent.BROKER_EXPORT
            - applicationEvent.INTENT_TO_PROCEED
            - documentEvent.AVAILABLE
            - documentEvent.EXPORTED
            - eConsentStatus.UPDATE
            - applicationEvent.APPLICATION_SUBMITTED
            - applicationEvent.APPLICATION_EXPORTED
            - applicationEvent.APPLICATION_ARCHIVED
            - workflowEvent.COMPLETED
            - disclosuresEvent.DISCLOSURES_VIEWED
            - disclosuresEvent.DISCLOSURES_SIGNED
            - disclosuresEvent.DISCLOSURES_DECLINED
            - disclosuresEvent.DISCLOSURES_EXPIRED
            - disclosuresEvent.DISCLOSURES_STATUS_CHANGE
        system:
          type: string
          description: The system producing or receiving the event.
          example: BONS
          enum:
            - Blend Webhooks
            - BONS
        version:
          type: string
          description: >-
            The version of the system producing or receiving the events. May be
            null for systems with no versioning.
          example: v1
          enum:
            - null
            - v1
            - v2
    EventDescribeMetadata:
      type: object
      required:
        - inbound
        - outbound
        - validDecorators
      properties:
        inbound:
          $ref: '#/components/schemas/EventDescribePath'
        outbound:
          $ref: '#/components/schemas/EventDescribePath'
        validDecorators:
          type: array
          items:
            type: string
            enum:
              - losPrimaryKey
              - crmPrimaryKey
              - originationType
              - metadata.documentYear
              - referenceLoanNumber
              - metadata.memberEntityIdentifier
              - borrower.econsentMetadata
              - metadata.assetIdentifier
    SchemaFlagSchema:
      type: object
      required:
        - presence
      properties:
        presence:
          type: string
          description: >-
            A string flag that denotes whether the described parent is required,
            optional, or conditionally allowed.
          example: required
          enum:
            - required
            - optional
        allowUnknown:
          type: boolean
          description: >-
            Describes whether or not the consumer should allow unknown
            additional keys or explicitly decline them when parsing an object.
    EventDescribeChildSchema:
      type: object
      required:
        - type
        - flags
        - invalids
        - rules
      properties:
        type:
          type: string
          description: >-
            The data type of the child object, which could be an compound or
            primitive data type.
        flags:
          $ref: '#/components/schemas/SchemaFlagSchema'
        invalids:
          type: array
          items:
            type: string
            description: >-
              Any string key value that is explicitly invalid. An empty array
              denotes no explicit invalid values.
        rules:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: >-
                  The name of the regex or parsing rule applied to the key's
                  value for processing.
                example: guid
    EventDescribeSchemaSchema:
      type: object
      required:
        - type
        - flags
        - children
      description: >-
        A key value pair where the key is the property name and the value is an
        object defining acceptable values for that property.
      properties:
        type:
          type: string
          description: >-
            The data type of the schema, which can be any primitive or an
            object.
          example: object
        flags:
          $ref: '#/components/schemas/SchemaFlagSchema'
        children:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EventDescribeChildSchema'
    EventDescribeSchema:
      type: object
      required:
        - metadata
      properties:
        metadata:
          $ref: '#/components/schemas/EventDescribeMetadata'
        schema:
          $ref: '#/components/schemas/EventDescribeSchemaSchema'
    EventStatusSchema:
      type: object
      required:
        - status
        - occurredAt
      properties:
        status:
          type: string
          description: The latest status of the event, updated by the API
          example: FAILED
          enum:
            - EMITTED
            - ACKNOWLEDGED
            - PROCESSING
            - SUCCEEDED
            - FAILED
            - NO_ACTION
        occurredAt:
          type: string
          description: >-
            The UTC timestamp of the latest status that was posted for the
            event, in ISO format
          example: '2018-08-24T14:08:13.862594+00:00'
    EventStatusRequestSchema:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: The status of the event
          example: FAILED
          enum:
            - PROCESSING
            - SUCCEEDED
            - FAILED
            - NO_ACTION
        error:
          type: object
          description: Only used if an error occurs when processing an event
          properties:
            message:
              type: string
              description: The error that occured
              example: Unable to process event
            reason:
              type: string
              description: Error reason
              example: LOS is down
    EventInvalidRequestSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          description: Error message
          example: Event UUID need to be an valid guid
        display:
          type: string
          description: Error message description
          example: Invalid request
        trackingId:
          type: string
          description: Provide this to Blend when troubleshooting
          example: 5a6defc2-d6e6-4b76-8695-d4dc8bb90d81
    EventUnauthorizedSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          description: Error message
          example: An error occurred during authentication
        display:
          type: string
          description: Error message description
          example: Not authorized
        trackingId:
          type: string
          description: Provide this to Blend when troubleshooting
          example: 5a6defc2-d6e6-4b76-8695-d4dc8bb90d81
    EventMissingObjectSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          description: Error message
          example: EventId 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70 does not
        display:
          type: string
          description: Error message description
          example: Not Found
        trackingId:
          type: string
          description: Provide this to Blend when troubleshooting
          example: 5a6defc2-d6e6-4b76-8695-d4dc8bb90d81
    EventInternalErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          description: Error message
          example: Internal server error
        display:
          type: string
          description: Error message description
          example: Internal server error
        trackingId:
          type: string
          description: Provide this to Blend when troubleshooting
          example: 5a6defc2-d6e6-4b76-8695-d4dc8bb90d81
    UnderwritingResultSchema:
      type: object
      required:
        - id
        - ausProduct
      properties:
        id:
          description: The UUID of the Underwriting Result in Blend's system.
          type: string
          example: a140bbf6-695c-4c8a-b150-babd59019193
        ausProduct:
          description: The AUS system that was used to run the result.
          type: string
          enum:
            - LoanProspector
            - DesktopUnderwriter
          example: DesktopUnderwriter
        runData:
          description: A collection of information about a specific AUS run in Blend.
          type: object
          required:
            - runDate
            - status
          properties:
            caseFileIdentifier:
              description: The case file ID of the AUS run.
              type: string
              nullable: true
              example: 1995629615
            runDate:
              description: The date and time of the AUS run.
              type: string
              format: date-time
              example: '2018-07-24 00:42:00+00:00'
            status:
              description: >-
                A collection of information about the status of an AUS run in
                Blend.
              type: object
              required:
                - condition
                - name
                - description
              properties:
                condition:
                  description: Whether the run succeeded or failed.
                  type: string
                  example: SUCCESS, FAILURE
                name:
                  description: Name of the status.
                  type: string
                  example: SBAWF1.3
                description:
                  description: The recommendation that came from the AUS run.
                  type: string
                  example: Successful Completion, Recommendation Available
                code:
                  description: The error code for the AUS run. 0 if success.
                  type: string
                  example: 0
                error:
                  description: Information about the error for the AUS run.
                  type: object
                  required:
                    - type
                    - message
                  properties:
                    type:
                      description: Type of error for the AUS run.
                      type: string
                    message:
                      description: Error message for the AUS run.
                      type: string
                success:
                  description: Information about a successful AUS run.
                  type: object
                  required:
                    - state
                  properties:
                    state:
                      description: >-
                        What kind of success it was, e.g. success or
                        success-with-conditions.
                      type: string
                      example: success
        recommendation:
          description: The returned recommendation from the AUS.
          type: object
          required:
            - code
            - referrerdIndicator
            - eligibilityIndicator
            - recommendationDescription
          properties:
            code:
              description: The recommendation code provided by the AUS.
              type: string
              example: 3
            referredIndicator:
              description: The referred indicator provided by the AUS.
              type: string
              example: 0
            eligibilityIndicator:
              description: The eligibility indicator provided by the AUS.
              type: string
              example: 1
            recommendationDescription:
              description: The description of the recommendation for this AUS run.
              type: string
              example: Approve/Eligible
        findingsDocId:
          description: >-
            The UUID for the document that came with the findings for this AUS
            run.
          type: string
          example: cb68ce88-f62f-4538-bec6-320651dc781e
        runParameters:
          description: >-
            The loan attributes used for this AUS run, such as debt-to-income
            ratio.
          type: object
          required:
            - loanAmount
          properties:
            dti:
              description: The debt-to-income ratio for this loan.
              type: string
              example: 14.164
            reserves:
              description: The dollar amount of reserves for this loan.
              type: string
              example: 0
            ltvPercent:
              description: The loan-to-value percent for this loan.
              type: string
              example: 67
            cltvPercent:
              description: The cumulative loan-to-value percent for this loan.
              type: string
              example: 67
            assetsToVerifyAmount:
              description: The dollar amount of assets to verify.
              type: string
              example: 100000
            interestRatePercent:
              description: The interest rate percent for this loan.
              type: string
              example: 4.5
            loanAmount:
              description: The dollar amount for the loan.
              type: number
              example: 200000
            purchasePrice:
              description: The purchase price for the subject property of this loan.
              type: number
              nullable: true
              example: 300000
    PostFollowUpSchema:
      type: object
      required:
        - applicationId
        - type
        - context
      properties:
        applicationId:
          type: string
          description: ID of the application to add the follow-up to
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        type:
          $ref: '#/components/schemas/PostFollowUpType'
        comments:
          $ref: '#/components/schemas/FollowUpComments'
        clientFollowUpReferenceId:
          $ref: '#/components/schemas/FollowUpClientFollowUpReferenceId'
        dueDate:
          $ref: '#/components/schemas/FollowUpDueDate'
        context:
          oneOf:
            - $ref: '#/components/schemas/BasePostFollowUpContext'
            - $ref: '#/components/schemas/PostDocumentRequestFollowUpContext'
            - $ref: '#/components/schemas/PostDocumentSignatureFollowUpContext'
            - $ref: '#/components/schemas/PaymentCollectionFollowUpContext'
            - $ref: '#/components/schemas/ReviewDocumentsFollowUpContext'
            - $ref: '#/components/schemas/PostTaxReturnFollowUpContext'
            - $ref: '#/components/schemas/PostTaxTranscriptsFollowUpContext'
            - $ref: '#/components/schemas/PostW2FollowUpContext'
          discriminator:
            propertyName: type
            mapping:
              DOCUMENT_REQUEST: '#/components/schemas/PostDocumentRequestFollowUpContext'
              DOCUMENT_SIGNATURE: '#/components/schemas/PostDocumentSignatureFollowUpContext'
              ASSET_STATEMENTS: '#/components/schemas/BasePostFollowUpContext'
              PAYMENT_COLLECTION: '#/components/schemas/PaymentCollectionFollowUpContext'
              PAYSTUBS: '#/components/schemas/BasePostFollowUpContext'
              REVIEW_DOCUMENTS: '#/components/schemas/ReviewDocumentsFollowUpContext'
              TAX_RETURN: '#/components/schemas/PostTaxReturnFollowUpContext'
              TAX_TRANSCRIPTS: '#/components/schemas/PostTaxTranscriptsFollowUpContext'
              W2: '#/components/schemas/PostW2FollowUpContext'
    PatchFollowUpSchema:
      type: object
      properties:
        status:
          type: string
          enum:
            - COMPLETED_EXTERNALLY
        comments:
          $ref: '#/components/schemas/FollowUpComments'
        clientFollowUpReferenceId:
          $ref: '#/components/schemas/FollowUpClientFollowUpReferenceId'
        dueDate:
          $ref: '#/components/schemas/FollowUpDueDate'
        context:
          oneOf:
            - $ref: '#/components/schemas/PatchDocumentRequestFollowUpContext'
            - $ref: '#/components/schemas/PatchDocumentSignatureFollowUpContext'
            - $ref: '#/components/schemas/PatchReviewDocumentsFollowUpContext'
            - $ref: '#/components/schemas/PatchPaymentCollectionFollowUpContext'
    FollowUpSchema:
      type: object
      required:
        - id
        - applicationId
        - type
        - status
        - context
        - requestedAt
        - requestedBy
      properties:
        id:
          type: string
        applicationId:
          type: string
          example: c6dabfb0-8753-4a89-b8f0-af059ef869f7
        type:
          $ref: '#/components/schemas/FollowUpType'
        status:
          $ref: '#/components/schemas/FollowUpStatus'
        comments:
          $ref: '#/components/schemas/FollowUpComments'
        clientFollowUpReferenceId:
          $ref: '#/components/schemas/FollowUpClientFollowUpReferenceId'
        dueDate:
          $ref: '#/components/schemas/FollowUpDueDate'
        requestedAt:
          type: string
          format: date-time
          description: UTC Timestamp of when the follow-up was requested
          example: 2018-07-31T00:00:00+00:00Z
        requestedBy:
          type: string
          description: >-
            The ID of the user that requested the follow-up, or 'SYSTEM' for
            automatically requested follow-ups
        context:
          oneOf:
            - $ref: '#/components/schemas/BaseFollowUpContext'
            - $ref: '#/components/schemas/DocumentRequestFollowUpContext'
            - $ref: '#/components/schemas/DocumentSignatureFollowUpContext'
            - $ref: '#/components/schemas/PaymentCollectionFollowUpContext'
            - $ref: '#/components/schemas/ReviewDocumentsFollowUpContext'
            - $ref: '#/components/schemas/TaxReturnFollowUpContext'
            - $ref: '#/components/schemas/TaxTranscriptsFollowUpContext'
            - $ref: '#/components/schemas/W2FollowUpContext'
            - $ref: '#/components/schemas/SystemFollowUpContext'
          discriminator:
            propertyName: type
            mapping:
              DOCUMENT_REQUEST: '#/components/schemas/DocumentRequestFollowUpContext'
              DOCUMENT_SIGNATURE: '#/components/schemas/DocumentSignatureFollowUpContext'
              DOCUMENT_WET_SIGNATURE: '#/components/schemas/DocumentSignatureFollowUpContext'
              ASSET_STATEMENTS: '#/components/schemas/BaseFollowUpContext'
              PAYMENT_COLLECTION: '#/components/schemas/PaymentCollectionFollowUpContext'
              PAYSTUBS: '#/components/schemas/BaseFollowUpContext'
              REVIEW_DOCUMENTS: '#/components/schemas/ReviewDocumentsFollowUpContext'
              TAX_RETURN: '#/components/schemas/TaxReturnFollowUpContext'
              TAX_TRANSCRIPTS: '#/components/schemas/TaxTranscriptsFollowUpContext'
              W2: '#/components/schemas/W2FollowUpContext'
              SYSTEM: '#/components/schemas/SystemFollowUpContext'
    BasePostFollowUpContext:
      title: Default context
      type: object
      description: Default required context for creating follow-ups
      required:
        - partyId
      properties:
        partyId:
          type: string
    BaseFollowUpContext:
      title: Default context
      description: Default context for follow-ups
      allOf:
        - $ref: '#/components/schemas/BasePostFollowUpContext'
        - type: object
          properties:
            documents:
              $ref: '#/components/schemas/DocumentFollowUpSubContext'
    PostDocumentRequestFollowUpContext:
      title: DOCUMENT_REQUEST
      type: object
      description: Required context for creating follow-ups of type 'DOCUMENT_REQUEST'
      required:
        - partyId
        - document
      properties:
        partyId:
          type: string
        document:
          type: object
          required:
            - type
          properties:
            type:
              $ref: '#/components/schemas/PostDocumentType'
            title:
              type: string
              description: Document follow-up display title. Required when type is 'OTHER'.
              example: Custom title
    PatchDocumentRequestFollowUpContext:
      title: DOCUMENT_REQUEST
      type: object
      description: Optional context for patching follow-ups of type 'DOCUMENT_REQUEST'
      properties:
        document:
          properties:
            title:
              type: string
              description: Document follow-up display title.
              example: Custom title
    DocumentRequestFollowUpContext:
      title: DOCUMENT_REQUEST
      type: object
      description: Context returned on follow-ups of type 'DOCUMENT_REQUEST'
      required:
        - partyId
        - document
      properties:
        partyId:
          type: string
        document:
          type: object
          required:
            - type
          properties:
            type:
              $ref: '#/components/schemas/DocumentType'
            title:
              type: string
              description: Document follow-up display title. Required when type is 'OTHER'.
              example: Custom title
    PostDocumentSignatureFollowUpContext:
      title: DOCUMENT_SIGNATURE
      type: object
      description: >-
        Required context for creating follow-ups of type 'DOCUMENT_SIGNATURE.'
        `document.id` should not be re-used between follow-ups on the same
        application.
      required:
        - document
      properties:
        document:
          type: object
          required:
            - id
            - signers
          properties:
            id:
              type: string
            title:
              type: string
              description: Document signature follow-up display title.
              example: Sign custom document
            signers:
              type: array
              items:
                type: object
                required:
                  - partyId
                properties:
                  partyId:
                    type: string
                  tabs:
                    $ref: '#/components/schemas/TabSchema'
    PatchDocumentSignatureFollowUpContext:
      title: DOCUMENT_SIGNATURE
      type: object
      description: Optional context for patching follow-ups of type 'DOCUMENT_SIGNATURE'
      properties:
        document:
          properties:
            title:
              type: string
              description: Document signature follow-up display title.
              example: Custom title
    DocumentSignatureFollowUpContext:
      title: DOCUMENT_SIGNATURE
      type: object
      description: Context returned on follow-ups of type 'DOCUMENT_SIGNATURE'
      required:
        - document
      properties:
        document:
          type: object
          required:
            - id
            - signers
          properties:
            id:
              type: string
            title:
              type: string
              description: Document signature follow-up display title.
              example: Sign custom document
            signers:
              type: array
              items:
                type: object
                required:
                  - partyId
                properties:
                  partyId:
                    type: string
    PatchReviewDocumentsFollowUpContext:
      title: REVIEW_DOCUMENTS
      type: object
      description: Optional context for patching follow-ups of type 'REVIEW_DOCUMENTS'
      properties:
        title:
          type: string
          description: Review documents follow-up display title.
          example: Custom title
    ReviewDocumentsFollowUpContext:
      title: REVIEW_DOCUMENTS
      type: object
      description: Required context for follow-ups of type 'REVIEW_DOCUMENTS'
      required:
        - partyId
        - documents
      properties:
        partyId:
          type: string
        documents:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
        title:
          type: string
          description: Review documents follow-up display title.
          example: Review custom document
    PatchPaymentCollectionFollowUpContext:
      title: PAYMENT_COLLECTION
      type: object
      description: Optional context for patching follow-ups of type 'PAYMENT_COLLECTION'
      properties:
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentCollectionLineItem'
        title:
          $ref: '#/components/schemas/PaymentCollectionTitle'
    PaymentCollectionFollowUpContext:
      title: PAYMENT_COLLECTION
      type: object
      description: Required context for follow-ups of type 'PAYMENT_COLLECTION'
      required:
        - partyId
        - lineItems
      properties:
        partyId:
          type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentCollectionLineItem'
        title:
          $ref: '#/components/schemas/PaymentCollectionTitle'
    PaymentCollectionTitle:
      type: string
      description: Payment collection follow-up display title.
      example: Custom title
    PaymentCollectionLineItem:
      type: object
      required:
        - title
        - value
      properties:
        title:
          type: string
        value:
          type: number
    DocumentFollowUpSubContext:
      type: array
      description: Documents uploaded by the borrower to complete this follow-up
      items:
        type: object
        required:
          - id
        properties:
          id:
            type: string
    PostTaxReturnFollowUpContext:
      title: TAX_RETURN
      type: object
      description: Required context for creating follow-ups of type 'TAX_RETURN'
      required:
        - partyId
        - taxReturnYear
      properties:
        partyId:
          type: string
        taxReturnYear:
          type: number
          example: 2018
    TaxReturnFollowUpContext:
      title: TAX_RETURN
      type: object
      description: Context returned on follow-ups of type 'TAX_RETURN'
      allOf:
        - $ref: '#/components/schemas/PostTaxReturnFollowUpContext'
        - type: object
          properties:
            documents:
              $ref: '#/components/schemas/DocumentFollowUpSubContext'
    PostTaxTranscriptsFollowUpContext:
      title: TAX_TRANSCRIPTS
      type: object
      description: Required context for creating follow-ups of type 'TAX_TRANSCRIPTS'
      required:
        - partyId
      properties:
        partyId:
          type: string
        taxTranscriptYears:
          type: array
          items:
            type: number
            example:
              - 2017
              - 2018
    TaxTranscriptsFollowUpContext:
      title: TAX_TRANSCRIPTS
      type: object
      description: Context returned on follow-ups of type 'TAX_TRANSCRIPTS'
      allOf:
        - $ref: '#/components/schemas/PostTaxTranscriptsFollowUpContext'
        - type: object
          properties:
            documents:
              $ref: '#/components/schemas/DocumentFollowUpSubContext'
    PostW2FollowUpContext:
      title: W2
      type: object
      description: Required context for creating follow-ups of type 'W2'
      required:
        - partyId
        - w2Year
      properties:
        partyId:
          type: string
        w2Year:
          type: number
          example: 2019
    W2FollowUpContext:
      title: W2
      type: object
      description: Context returned on follow-ups of type 'W2'
      required:
        - partyId
      properties:
        partyId:
          type: string
        w2Year:
          type: number
          example: 2019
    SystemFollowUpContext:
      title: SYSTEM
      type: object
      description: Context returned on follow-ups of type 'SYSTEM'
      required:
        - partyId
      properties:
        partyId:
          type: string
        description:
          type: string
          example: 'Large Deposit: Income supporting documentation'
    FollowUpStatus:
      type: string
      enum:
        - REQUESTED
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_EXTERNALLY
        - PENDING_REVIEW
        - REJECTED
      description: >
        Follow-up statuses

        * **REQUESTED** - Follow-up has been requested and is awaiting
        completion by the borrower

        * **IN_PROGRESS** - Follow-up has been started by at least one borrower

        * **COMPLETED** - Follow-up has been completed by the borrower and if a
        document request, reviewed and accepted by the lender in the Blend
        lender UI.

        * **COMPLETED_EXTERNALLY** - Follow-up has been marked as completed
        externally in the Blend lender UI

        * **PENDING_REVIEW** - Follow-up has been completed by the borrower and
        can be reviewed and accepted or rejected by the lender in the Blend
        lender UI

        * **REJECTED** - Follow-up has been completed by the borrower and was
        reviewed and rejected by the lender in the Blend lender UI
    PostFollowUpType:
      type: string
      description: Types of follow-ups that can be created
      enum:
        - DOCUMENT_REQUEST
        - DOCUMENT_SIGNATURE
        - ASSET_STATEMENTS
        - PAYMENT_COLLECTION
        - PAYSTUBS
        - REVIEW_DOCUMENTS
        - TAX_RETURN
        - TAX_TRANSCRIPTS
        - W2
    FollowUpType:
      type: string
      description: >-
        Types of follow-ups that can be returned. This is a superset of
        FollowUpType that includes the 'SYSTEM' follow-up type corresponding to
        follow-ups that were requested by Blend automatically, and the
        'DOCUMENT_WET_SIGNATURE' follow-up type which is the type of wet-sign
        follow-ups issued when an external e-sign ('DOCUMENT_SIGNATURE' type)
        follow-up request fails.
      enum:
        - DOCUMENT_REQUEST
        - DOCUMENT_SIGNATURE
        - DOCUMENT_WET_SIGNATURE
        - ASSET_STATEMENTS
        - PAYMENT_COLLECTION
        - PAYSTUBS
        - REVIEW_DOCUMENTS
        - TAX_RETURN
        - TAX_TRANSCRIPTS
        - W2
        - SYSTEM
    PostDocumentType:
      type: string
      description: Valid document types for creating a follow-up of type 'DOCUMENT_REQUEST'
      enum:
        - '1003'
        - 4506t
        - ACHDEBIT_AUTHORIZATION
        - ADDRESS_VERIFICATION
        - AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE
        - ALIMONY_INCOME
        - ALIMONY_LIABILITY
        - APPRAISAL
        - APPRAISAL_WAIVER
        - ARTICLES_OF_INCORPORATION
        - BANKRUPTCY_DISCHARGE_NOTICE
        - BANKRUPTCY_FILING
        - BANK_DEPOSIT_SLIP
        - BANK_STATEMENT
        - BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT
        - BANK_STATEMENT:_STOCK_ACCOUNT
        - BIRTH_CERTIFICATE
        - BONUS_AND_COMMISSION_DOCUMENTATION
        - BORROWER_CERTIFICATION
        - BORROWER_CONSENT_FORM
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY
        - BORROWER_INCOME_VERIFICATION_CONSENT_FORM
        - BUSINESS_LICENSE
        - BYLAWS_OPERATING_AGREEMENT
        - CHILD_SUPPORT_INCOME
        - CHILD_SUPPORT_LIABILITY
        - CLOSING_DISCLOSURE
        - COSIGNED_LIABILITY
        - CREDIT_CARD_AUTHORIZATION
        - CREDIT_REPORT
        - DD_214
        - DEATH_CERTIFICATE
        - DIVORCE_DECREE
        - EARNEST_MONEY_DEPOSIT
        - EMPLOYMENT_CONTRACT
        - EMPLOYMENT_OFFER_LETTER
        - ESCROW_WAIVER
        - FAIR_LENDING_NOTICE
        - FINANCIAL_STATEMENT:_BALANCE_SHEET
        - FINANCIAL_STATEMENT:_INCOME
        - FLOOD_CERTIFICATION
        - FLOOD_HAZARD_NOTICE
        - FOR_YOUR_PROTECTION_HOME_INSPECTION
        - GENERAL_LOAN_ACKNOWLEDGMENT
        - GENERATED_ASSET_STATEMENT
        - GIFT_LETTER
        - GOOD_FAITH_ESTIMATE
        - HOA_BILL
        - HOMEOWNERS_ASSOCIATION_CERTIFICATION
        - HOME_INSPECTION_REPORT
        - HUD_VA_ADDENDUM
        - IMPORTANT_NOTICE_TO_HOMEBUYER
        - INSURANCE_AGENT_CONTACT_INFO
        - INTENT_TO_PROCEED
        - INVOICE_UTILITY_BILL
        - IRS1041
        - IRS1065
        - IRS1099
        - IRS1120
        - IRS1120_S
        - JUDGMENT
        - K1
        - LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION:_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT
        - LETTER_OF_EXPLANATION:_JOB_GAP
        - LETTER_OF_EXPLANATION:_LARGE_DEPOSITS
        - LETTER_OF_EXPLANATION_NAME_VARIATION
        - LETTER_OF_EXPLANATION:SHORT_SALE
        - LLC_BTR_DOC
        - LOAN_ESTIMATE
        - MARRIAGE_CERTIFICATE
        - MEDICAL_LICENSE_DIPLOMA
        - MEDICAL_RESIDENCY_FELLOWSHIP
        - MORTGAGE_STATEMENT
        - NATIONAL_IDENTIFICATION
        - NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD
        - NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT
        - NEAREST_LIVING_RELATIVE
        - NOTE
        - OCCUPANCY_CERTIFICATION
        - OTHER
        - PASSPORT
        - PAYOFF_STATEMENT
        - PERMANENT_RESIDENT_IDENTIFICATION
        - PEST_INSPECTION_REPORT
        - POOL_INSPECTION_REPORT
        - POWER_OF_ATTORNEY
        - PRE_APPROVAL_LETTER
        - PRE_APPROVAL_LETTER:_PREVIEW
        - PROOF_OF_LIQUIDATION
        - PROPERTY_INSURANCE_POLICY:_CONDOMINIUM
        - PROPERTY_INSURANCE_POLICY:_FLOOD
        - PROPERTY_INSURANCE_POLICY:_GENERAL
        - PROPERTY_INSURANCE_POLICY:_HAZARD
        - PROPERTY_INSURANCE_POLICY:_HOMEOWNERS
        - PROPERTY_INSURANCE_POLICY:_HURRICANE
        - PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION
        - PROPERTY_INSURANCE_POLICY:_LEASEHOLD
        - PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN
        - PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE
        - PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY
        - PROPERTY_INSURANCE_POLICY:_STORM
        - PROPERTY_INSURANCE_POLICY:_TORNADO
        - PROPERTY_INSURANCE_POLICY:_VOLCANO
        - PROPERTY_INSURANCE_POLICY:_WIND
        - PROPERTY_TAX_BILL
        - PURCHASE_AGREEMENT
        - PURCHASE_AGREEMENT_ADDENDUM
        - RATE_LOCK_AGREEMENT
        - RENTAL_AGREEMENT
        - RENTAL_INCOME_PROOF_OF_RECEIPT
        - RENTAL_SECURITY_DEPOSIT
        - REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T
        - RESIDUAL_INCOME_LETTER
        - RETIREMENT_ACCOUNT_STATEMENT
        - RETIREMENT_AWARD_LETTER
        - RETIREMENT_LIQUIDITY_TERMS
        - ROOF_INSPECTION_REPORT
        - SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE
        - SETTLEMENT_STATEMENT_HUD1
        - SOCIAL_SECURITY_PROOF_OF_RECEIPT
        - STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT
        - TAX_TRANSCRIPT
        - TRUST_AGREEMENT
        - VA_AWARD_LETTER
        - VA_CHILD_CARE_CERTIFICATE
        - VA_CERTIFICATE_OF_ELIGIBILITY
        - VA_STATEMENT_OF_SERVICE
        - VERIFICATION_OF_MORTGAGE
        - VERIFICATION_OF_RENT
        - VERIFICATION_OF_SSN
        - VISA
    FollowUpComments:
      type: string
      description: Comments displayed to the party on the follow-up
      example: Please upload the requested document by the end of the week.
    FollowUpClientFollowUpReferenceId:
      type: string
      description: Unique id passed by client for referencing follow-up
      example: internalID-187f5efc-0b82-4480-84a5-e23d8c3c9a32
    FollowUpDueDate:
      type: string
      format: date-time
      description: UTC Timestamp of follow-up due date
      example: 2018-07-31T00:00:00+00:00Z
    AssetsSummarySchema:
      type: object
      description: Summary of Assets data on an application
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AssetsAccountSummarySchema'
    AssetsAccountSummarySchema:
      type: object
      description: Summary of an Assets Account on an application
      required:
        - id
        - partyIds
        - institutionName
        - accountType
        - accountNumberLastFour
        - connectionStatus
      properties:
        id:
          type: string
          description: The UUID of the an Asset account in Blend's system.
          example: b2006a70-a19b-4b7f-973d-3a561e159060
        partyIds:
          type: array
          description: >-
            Ids of parties that own this account, as stated in the application.
            This is not guaranteed to match account ownership data retrieved
            from data providers for Connected Assets.
          items:
            $ref: '#/components/schemas/PartyId'
        institutionName:
          type: string
          description: The name of the financial institution that holds this account.
          example: Wells Fargo
        accountType:
          $ref: '#/components/schemas/AssetAccountType'
        accountNumberLastFour:
          type: string
          description: The last four digits of the account number.
          example: '1234'
        connectionStatus:
          $ref: '#/components/schemas/ConnectionStatusType'
        lastRefresh:
          type: object
          description: >-
            Summary of last Assets refresh attempt for this account. This will
            be omitted from accounts we have not completed a refresh for. If a
            refresh is in progress, this will be omitted until the refresh has
            completed.
          required:
            - time
            - status
          properties:
            time:
              type: string
              format: date-time
              description: UTC timestamp of the last refresh attempt
              example: '2018-10-03T20:07:27+00:00'
            status:
              $ref: '#/components/schemas/AccountRefreshStatusType'
    AssetAccountType:
      type: string
      description: The type of an asset account
      enum:
        - Checking
        - Brokerage
        - Retirement
        - Savings
        - Trust
        - Certificate of Deposit
        - Money Market
        - Annuity
        - Other
        - Unknown
        - Mutual Fund
        - Stocks
        - Stock Options
        - Bonds
        - Bridge Loan Proceeds
        - Individual Development Account
        - Cash Value of Life Insurance
        - Chequing
        - Stocks/Bond/Mutual
        - RRSP
      example: Savings
    ConnectionStatusType:
      type: string
      description: >
        Connection Status of an Assets account

        * **CONNECTED** - This account was originally connected to through a
        data provider. Refreshes will result in us attempting to pull updated
        data from our data provider and generating an updated Asset statement.
        We may also attempt to pull an Asset statement from the financial
        institution directly.

        * **NOT_CONNECTED** - This account was originally not connected to.
        Refreshes will result in us issuing an Account Statements follow-up

        * **LOCKED** - This account was originally connected to while using
        multi-factor authentication. Refreshes will result in us issuing an
        Updated Assets follow-up for the owner to re-connect.
      enum:
        - CONNECTED
        - NOT_CONNECTED
        - LOCKED
      example: CONNECTED
    AccountRefreshStatusType:
      type: string
      description: >
        Outcome of an Assets refresh attempt

        * **GAS_GENERATED** - We were able to pull updated structured data from
        our data provider and generate a new Asset statement.

        * **FINANCIAL_STATEMENT_PULLED** - An updated Asset statement PDF from
        pulled from the financial institution, however we failed to pull
        structured data and cannot provide Rep & Warrant relief for these
        Assets.

        * **UPDATED_ASSETS_FOLLOW_UP_ISSUED** - An application follow-up was
        issued to ask the account owner to log back into their financial
        institution in order to pull updated Assets data.

        * **MANUAL_UPLOAD_FOLLOW_UP_ISSUED** - An application follow-up was
        issued to ask the account owner to manually upload updated Asset
        statements.

        * **ERROR** - There was an internal issue while trying to refresh
        Assets, resulting in no outcome
      enum:
        - GAS_GENERATED
        - FINANCIAL_STATEMENT_PULLED
        - UPDATED_ASSETS_FOLLOW_UP_ISSUED
        - MANUAL_UPLOAD_FOLLOW_UP_ISSUED
        - ERROR
      example: GAS_GENERATED
    TaxTranscriptResponseSchema:
      type: object
      description: Structured data for 4506C form
      required:
        - taxTranscriptRequests
      properties:
        taxTranscriptRequests:
          type: array
          items:
            $ref: '#/components/schemas/TaxTranscriptRequestsSchema'
    TaxTranscriptRequestsSchema:
      type: object
      description: Tax transcript filer information
      required:
        - years
        - filingStatus
        - filingAddress
        - filers
      properties:
        years:
          type: array
          description: List of years associated with 4506C form
          items:
            type: number
          example:
            - 2019
            - 2018
        filingStatus:
          type: string
          description: Filing status
          enum:
            - SINGLE
            - JOINT_CO_APPLICANT
            - JOINT_NON_APPLICANT
          example: SINGLE
        filingAddress:
          description: Filing address
          $ref: '#/components/schemas/AddressSchema'
        filers:
          type: array
          items:
            $ref: '#/components/schemas/TaxTranscriptFilerSchema'
    TaxTranscriptFilerSchema:
      type: object
      description: Tax transcript filer information
      required:
        - name
        - authorizedRepresentative
      properties:
        partyId:
          description: Party id of filer (omitted for non-applicant filer)
          $ref: '#/components/schemas/PartyId'
        name:
          description: Filer name
          $ref: '#/components/schemas/TaxTranscriptNameSchema'
        previousName:
          description: Filer name used on previous return if not current name
          $ref: '#/components/schemas/TaxTranscriptNameSchema'
        authorizedRepresentative:
          type: boolean
          description: True if signed by authorized representative that is not the filer
          example: false
    PackageType:
      type: string
      description: Package type
      enum:
        - CLOSING_DISCLOSURE
        - CLOSING_PACKAGE
        - DOCUMENT_PACKAGE
        - INITIAL_LOAN_ESTIMATE
        - OTHER_DISCLOSURE
        - REVISED_CLOSING_DISCLOSURE
        - REVISED_LOAN_ESTIMATE
      example: CLOSING_DISCLOSURE
    PackagePostSchema:
      type: object
      required:
        - applicationId
        - envelopes
        - type
      properties:
        applicationId:
          type: string
          description: The Blend application UUID
          example: b2006a70-a19c-4b9f-973d-3a561e159061
        description:
          type: string
          description: An optional description of the package
          example: Closing Disclosure with exceptions
        dueDate:
          type: string
          description: The ISO timestamp of when the package is due
          example: '2020-04-19T02:35:00.789Z'
        expiryDate:
          type: string
          description: >-
            The ISO timestamp of when the lender indicates a package should be
            cancelled by, it cannot be a date in the past
        envelopes:
          type: array
          minItems: 1
          description: >-
            An envelope describes the signing strategy and the recipient
            assignment within the package.
          items:
            anyOf:
              - $ref: '#/components/schemas/ESignEnvelopePostSchema'
              - $ref: '#/components/schemas/WetsignEnvelopePostSchema'
              - $ref: '#/components/schemas/ReviewEnvelopePostSchema'
        foreignPackageId:
          type: string
          description: External package id provided by partner
          example: b2006f70-a19c-4b9f-973d-3a561e159061
        initiatedByLenderId:
          type: string
        name:
          type: string
          description: An optional name for the package
          example: Closing Disclosure
        type:
          $ref: '#/components/schemas/PackageType'
    IframeSignEnvelopePostSchema:
      title: IFRAME
      type: object
      required:
        - providerType
        - recipients
      properties:
        providerType:
          type: string
          enum:
            - IFRAME_SIGN
        recipients:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/IframesignEnvelopesRecipientPostSchema'
    WetsignEnvelopePostSchema:
      title: WETSIGN
      type: object
      required:
        - providerType
        - recipients
      properties:
        providerType:
          type: string
          enum:
            - WETSIGN
        recipients:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/WetsignEnvelopesRecipientPostSchema'
    ESignEnvelopePostSchema:
      title: ESIGN
      type: object
      required:
        - providerType
        - recipients
      properties:
        providerType:
          type: string
          enum:
            - ESIGN
        recipients:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ESignEnvelopesRecipientPostSchema'
    ReviewEnvelopePostSchema:
      title: REVIEW
      type: object
      required:
        - providerType
        - recipients
      properties:
        providerType:
          type: string
          enum:
            - REVIEW
        recipients:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ReviewEnvelopeRecipientPostSchema'
    OfferEnvelopePostSchema:
      title: OFFER
      type: object
      required:
        - providerType
        - recipients
      properties:
        providerType:
          type: string
          enum:
            - OFFER
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/OfferEnvelopeRecipientPostSchema'
    EnvelopesRecipientPostSchema:
      type: object
      required:
        - partyId
        - metadata
      properties:
        partyId:
          type: string
          description: The Blend party UUID
          example: c2006a70-a19c-4b9f-973d-3a561e159063
    RecipientPartyType:
      type: string
      enum:
        - BORROWER
        - LENDER
        - NON_APPLICANT_USER
        - OTHER
        - SETTLOR
        - SPOUSE
        - TITLE_HOLDER
    DocgenMetadataSchema:
      type: object
      required:
        - docLink
      properties:
        docLink:
          type: string
    ESignEnvelopesRecipientPostSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        metadata:
          $ref: '#/components/schemas/EsignMetadataSchema'
        partyId:
          type: string
          description: >-
            The Blend party UUID, but for lender recipients, the partyId must be
            set to 'LENDER'.
          example: c2006a70-a19c-4b9f-973d-3a561e159063
    IframesignEnvelopesRecipientPostSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        metadata:
          $ref: '#/components/schemas/IframeSignPostMetadataSchema'
        partyId:
          type: string
    WetsignEnvelopesRecipientPostSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        metadata:
          $ref: '#/components/schemas/WetsignPostMetadataSchema'
        partyId:
          type: string
    ReviewEnvelopeRecipientPostSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        metadata:
          $ref: '#/components/schemas/ReviewPostMetadataSchema'
        partyId:
          type: string
    OfferEnvelopeRecipientPostSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        metadata:
          $ref: '#/components/schemas/OfferPostMetadataSchema'
        partyId:
          type: string
    IframeSignPostMetadataSchema:
      type: object
      required:
        - closingId
        - documents
      properties:
        closingId:
          type: string
        documents:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - documentId
              - name
              - notaryRequired
            properties:
              documentId:
                type: string
                format: uuid
                example: 9250f84b-c2a1-4cab-b265-bd720485c361
              name:
                type: string
              notaryRequired:
                type: boolean
    WetsignPostMetadataSchema:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          minItems: 1
          description: List of Blend documents needed to be signed
          items:
            type: object
            required:
              - documentId
            properties:
              documentId:
                type: string
                format: uuid
                example: 9250f84b-c2a1-4cab-b265-bd720485c361
    WetsignResponseMetadataSchema:
      allOf:
        - $ref: '#/components/schemas/WetsignPostMetadataSchema'
    EmptyResponseMetadataSchema:
      type: object
    EsignResponseMetadataSchema:
      type: object
      required:
        - documents
        - loanId
      properties:
        documents:
          type: array
          minItems: 1
          items:
            anyOf:
              - $ref: '#/components/schemas/ESignDocumentWithTabs'
              - $ref: '#/components/schemas/ESignDocumentWithTabExtractionMethod'
        loanId:
          type: string
    EsignMetadataSchema:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          minItems: 1
          items:
            anyOf:
              - $ref: '#/components/schemas/ESignDocumentWithTabs'
              - $ref: '#/components/schemas/ESignDocumentWithTabExtractionMethod'
    ESignDocumentWithTabs:
      type: object
      required:
        - documentId
        - tabs
      properties:
        documentId:
          type: string
          format: uuid
        eSignTemplateId:
          type: string
        signersRequired:
          type: string
          enum:
            - ALL
            - ANY
        tabs:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EsignApproveSchemaV2'
              - $ref: '#/components/schemas/ESignCheckboxGroupTabSchemaV2'
              - $ref: '#/components/schemas/EsignCheckboxSchemaV2'
              - $ref: '#/components/schemas/EsignDateSchemaV2'
              - $ref: '#/components/schemas/EsignDateSignedSchemaV2'
              - $ref: '#/components/schemas/EsignInitialHereSchemaV2'
              - $ref: '#/components/schemas/EsignSelectSchemaV2'
              - $ref: '#/components/schemas/EsignNoteSchemaV2'
              - $ref: '#/components/schemas/EsignRadioGroupSchemaV2'
              - $ref: '#/components/schemas/EsignSignatureSchemaV2'
              - $ref: '#/components/schemas/EsignTextSchemaV2'
    ESignDocumentWithTabExtractionMethod:
      type: object
      required:
        - documentId
        - tabExtractionMethod
      properties:
        documentId:
          type: string
          format: uuid
        eSignTemplateId:
          type: string
        extractTabs:
          type: array
          description: >-
            If additional information is required for tab extraction (which it
            is for EXPERE_ACROFORM documents), include it in extractTabs.
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/EsignExtractTabExpereAcroformSchema'
        signersRequired:
          type: string
          enum:
            - ALL
            - ANY
        tabExtractionMethod:
          type: string
          enum:
            - EXPERE_ACROFORM
            - ENCOMPASS
          description: >-
            If tabs must be extracted from embedded fields, specify the
            extraction method to use.
          example: EXPERE_ACROFORM
    EsignFontTabAttributesSchemaV2:
      type: object
      properties:
        bold:
          type: boolean
          example: false
        font:
          type: string
          example: Arial
        fontColor:
          type: string
          example: black
        fontSize:
          type: number
          example: 7
    EsignBaseTabParamsSchemaV2:
      type: object
      required:
        - xPosition
        - yPosition
        - page
      properties:
        label:
          type: string
          example: testLabel
        page:
          type: number
          example: 1
        required:
          type: boolean
          example: true
        value:
          type: string
          example: testValue
        xPosition:
          type: number
          example: 10
        yPosition:
          type: number
          example: 20
    EsignBaseTabAttributesSchemaV2:
      type: object
      properties:
        conditionalChildEnabled:
          type: boolean
          example: false
        conditionalParentLabel:
          type: string
          example: testConditionalParentLabel
        conditionalParentValue:
          type: string
          example: testConditionalParentValue
        name:
          type: string
          example: testName
    EsignSignatureSchemaV2:
      title: Signature Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - typeAttributes
        - type
      properties:
        type:
          type: string
          enum:
            - SIGNATURE
          example: SIGNATURE
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
            - type: object
          properties:
            scaleValue:
              type: number
              example: 0.5
            status:
              type: string
              enum:
                - CREATED
                - DECLINED
                - SIGNED
              example: CREATED
    EsignApproveSchemaV2:
      title: Approve Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - typeAttributes
        - type
      properties:
        type:
          type: string
          enum:
            - APPROVE
          example: APPROVE
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
            - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
          properties:
            height:
              type: number
              example: 10
            width:
              type: number
              example: 10
            buttonText:
              type: string
              example: testButtonText
    EsignDateSignedSchemaV2:
      title: Date Signed Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - DATE_SIGNED
          example: DATE_SIGNED
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
            - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
    EsignCheckboxSchemaV2:
      title: Checkbox Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - CHECK_BOX
          example: CHECK_BOX
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
    ESignCheckboxGroupTabSchemaV2:
      title: Checkbox Group Tab
      type: object
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
      required:
        - typeAttributes
        - type
      properties:
        type:
          type: string
          enum:
            - CHECKBOX_GROUP
          example: CHECKBOX_GROUP
        typeAttributes:
          type: object
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
            - $ref: '#/components/schemas/CheckboxGroupOtherTabAttributesSchemaV2'
    CheckboxGroupOtherTabAttributesSchemaV2:
      type: object
      properties:
        items:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
              - $ref: '#/components/schemas/CheckboxInCheckboxGroupTabSchemaV2'
        maximumAllowed:
          type: number
        minimumRequired:
          type: number
        validationRule:
          type: string
          enum:
            - selectAtLeast
            - selectAtMost
            - selectExact
    CheckboxInCheckboxGroupTabSchemaV2:
      type: object
      required:
        - required
        - xPosition
        - yPosition
      properties:
        conditionalParentLabel:
          type: string
          example: testConditionalParentLabelCheckbox
        conditionalParentValue:
          type: string
          example: testConditionalParentValueCheckbox
        conditionalChildRequired:
          type: boolean
          example: false
        conditionalChildEnabled:
          type: boolean
          example: false
        selected:
          type: boolean
        xPosition:
          type: number
        yPosition:
          type: number
        page:
          type: number
        required:
          type: boolean
        height:
          type: number
        width:
          type: number
        name:
          type: string
        label:
          type: string
    EsignTextSchemaV2:
      title: Text Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - TEXT
          example: TEXT
        typeAttributes:
          type: object
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
            - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
          properties:
            height:
              type: number
              example: 0
            width:
              type: number
              example: 0
            maxLength:
              type: number
              example: 0
    EsignSelectSchemaV2:
      title: Select Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - SELECT
          example: SELECT
        typeAttributes:
          type: object
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SelectItemsInSelectTabSchemaV2'
    SelectItemsInSelectTabSchemaV2:
      type: object
      required:
        - text
        - value
      properties:
        text:
          type: string
          example: testText
        value:
          type: string
          example: testValue
        selected:
          type: boolean
          example: false
    EsignRadioGroupSchemaV2:
      title: Radio Group Tab
      type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - RADIO
          example: RADIO
        typeAttributes:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/EsignRadioSchemaV2'
    EsignRadioSchemaV2:
      type: object
      required:
        - value
        - xPosition
        - yPosition
      properties:
        conditionalParentLabel:
          type: string
          example: testConditionalParentLabelRadio
        conditionalParentValue:
          type: string
          example: testConditionalParentValueRadio
        conditionalChildRequired:
          type: boolean
          example: false
        conditionalChildEnabled:
          type: boolean
          example: false
        value:
          type: string
        selected:
          type: boolean
          example: false
        page:
          type: number
          example: 0
        tabId:
          type: string
        xPosition:
          type: number
          example: 0
        yPosition:
          type: number
          example: 0
    EsignInitialHereSchemaV2:
      title: Initial Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - INITIAL
          example: INITIAL
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
          type: object
          properties:
            scaleValue:
              type: number
              example: 0.5
    EsignDateSchemaV2:
      title: Date Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - DATE
          example: DATE
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
    EsignNoteSchemaV2:
      title: Note Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabParamsSchemaV2'
        - type: object
      required:
        - type
        - typeAttributes
      properties:
        type:
          type: string
          enum:
            - NOTE
          example: NOTE
        typeAttributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchemaV2'
            - $ref: '#/components/schemas/EsignBaseTabAttributesSchemaV2'
          type: object
          properties:
            height:
              type: number
              example: 0
            width:
              type: number
              example: 0
    EsignExtractTabExpereAcroformSchema:
      type: object
      required:
        - fieldName
      properties:
        fieldName:
          type: string
          description: The name of the acroField from which to extract an Esign tab
          example: SIG_Borrower_1_C1000788803_true_1
        required:
          type: boolean
          description: >-
            True if the tab is required to be completed by the recipient in
            Docusign, false if it is optional. Defaults to true.
          default: true
          example: true
    ReviewPostMetadataSchema:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - documentId
            properties:
              documentId:
                type: string
                description: The Blend UUID returned when uploading a document
                example: b2996a70-a19b-4b7f-973d-3a561e159067
    ReviewResponseMetadataSchema:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/ReviewDocument'
    ReviewDocument:
      type: object
      required:
        - documentId
      properties:
        description:
          type: string
        documentId:
          type: string
          format: uuid
          description: The Blend UUID returned when uploading a document
          example: b2996a70-a19b-4b7f-973d-3a561e159067
        name:
          type: string
        reviewTracking:
          $ref: '#/components/schemas/ReviewTracking'
        type:
          type: string
    ReviewTracking:
      type: object
      required:
        - ip
        - timestamp
      properties:
        ip:
          type: string
        timestamp:
          type: number
          description: unix timestamp
    OfferPostMetadataSchema:
      type: object
      required:
        - documents
      properties:
        termDetails:
          type: array
          items:
            type: object
            required:
              - title
              - lineItems
            properties:
              title:
                type: string
                description: The title of the section
                example: Final Details
              lineItems:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - value
                  properties:
                    name:
                      type: string
                      description: The name of line item
                      example: Loan Amount
                    value:
                      type: string
                      description: The value of the line item (as is)
                      example: $100.00
        documents:
          type: array
          description: The documents to be attached to the offer
          items:
            type: object
            required:
              - documentId
            properties:
              documentId:
                type: string
                description: The Blend UUID returned when uploading a document
                example: 90c08c76-03c8-4a27-a4d6-cdfd1b475ea1
              name:
                type: string
                description: The name of the document to be displayed
                example: Offer Document
    PackageResponseSchema:
      type: object
      required:
        - applicationId
        - envelopes
        - id
        - status
        - type
      properties:
        applicationId:
          type: string
          description: The Blend application UUID
          example: b2006a70-a19c-4b9f-973d-3a561e159061
        createdDate:
          type: string
        description:
          type: string
          description: An optional description of the package
          example: Optional description
        dueDate:
          type: string
          description: The ISO timestamp of when the lender has indicated a package is due
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        expiryDate:
          type: string
          description: >-
            The ISO timestamp of when the lender indicates a package should be
            cancelled by, it cannot be a date in the past
          nullable: true
          example: '2023-08-08T02:35:00.789Z'
        envelopes:
          type: array
          description: >-
            An envelope describes the signing strategy and the recipient
            assignment within the package
          items:
            $ref: '#/components/schemas/EnvelopeResponseSchema'
        foreignPackageId:
          type: string
          description: External package id provided by partner
          example: b2006f70-a19c-4b9f-973d-3a561e159061
        id:
          type: string
          description: The Blend package UUID
          example: b2006a70-a19b-4b7f-973d-3a561e159061
        name:
          type: string
          description: A name for the package
          example: Closing Disclosure
        paperedAt:
          type: string
          description: >-
            The ISO timestamp of when the lender decides to mail a package and
            not pursue electronic delivery
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        requestedBy:
          type: string
          description: Lender who requested for package issuance
          nullable: true
        status:
          $ref: '#/components/schemas/PackageStatus'
          example: VIEWED
        type:
          $ref: '#/components/schemas/PackageType'
    PackageStatus:
      type: string
      enum:
        - CANCELLED
        - COMPLETED
        - SENT
        - ISSUING
        - DELIVERED
        - FAILED_TO_ISSUE
        - VIEWED
        - PENDING_COMPLETION
        - COMPLETED
        - DECLINED
    EnvelopeResponseSchema:
      type: object
      required:
        - id
        - providerId
        - providerType
        - recipients
        - signatureRequired
        - status
      properties:
        id:
          type: string
          description: The Blend envelope UUID
          example: b2996a70-a19b-4b7f-973d-3a561e159061
        providerId:
          type: string
          description: >-
            A Blend provided UUID for providerType ESIGN, SSO_SAML, and
            DIRECT_LINK envelopes
          example: c2006a70-a19c-4b9f-973d-3a561e159061
        providerType:
          type: string
          description: >
            Different signing strategies: * DIRECT_LINK: The recipient uses a
            Blend Sign related URL link that may contain an access token to
            login for signing.

            * ESIGN: A Docusign integration.

            * IFRAME_SIGN: A signing strategy used in close service.

            * REVIEW: The recipient views the documents in Blend's document
            viewer.

            * SSO_SAML: Uses SSO to authenticate the recipient before acting on
            disclosures.

            * WETSIGN: The recipient downloads the package as a PDF and uploads
            signed PDFs into Blend.

            * OFFER: The recipient is given option to accept/decline the package
            containing term details and documents.
          enum:
            - DIRECT_LINK
            - ESIGN
            - IFRAME_SIGN
            - REVIEW
            - SSO_SAML
            - WETSIGN
            - OFFER
          example: ESIGN
        signatureRequired:
          type: boolean
          example: 'true'
        status:
          type: string
          enum:
            - DRAFT
            - HAS_NOT_BEEN_DELIVERED
            - DELIVERED
            - VIEWED
            - COMPLETED
            - PENDING_COMPLETION
            - DECLINED
          example: VIEWED
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopesRecipientResponseSchema'
    EnvelopesRecipientResponseSchema:
      type: object
      required:
        - metadata
        - partyId
      properties:
        declinedDate:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        declinedIp:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        metadata:
          oneOf:
            - $ref: '#/components/schemas/DocgenMetadataSchema'
            - $ref: '#/components/schemas/EmptyResponseMetadataSchema'
            - $ref: '#/components/schemas/EsignResponseMetadataSchema'
            - $ref: '#/components/schemas/IframeSignPostMetadataSchema'
            - $ref: '#/components/schemas/ReviewResponseMetadataSchema'
            - $ref: '#/components/schemas/WetsignResponseMetadataSchema'
            - $ref: '#/components/schemas/OfferPostMetadataSchema'
          example:
            documents:
              - documentId: 69676a00-4619-4994-9f0d-2ab7505c702f
                loanId: 349343ce-a96d-4367-ad7a-de1545876d85
                tabs:
                  - page: 1
                    required: true
                    type: SIGNATURE
                    typeAttributes:
                      name: signHereTabRequired
                    xPosition: 20
                    yPosition: 20
        partyId:
          type: string
          description: The Blend party UUID
          example: c2006a70-a19c-4b9f-973d-3a561e159063
        partyType:
          type: string
          enum:
            - BORROWER
            - LENDER
            - NON_APPLICANT_USER
            - OTHER
            - SETTLOR
            - SPOUSE
            - TITLE_HOLDER
          example: BORROWER
        signedDate:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        signedIp:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        viewedDate:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        viewedIp:
          type: string
          nullable: true
          example: '2020-04-19T02:35:00.789Z'
        status:
          type: string
          enum:
            - HAS_NOT_BEEN_DELIVERED
            - DELIVERED
            - VIEWED
            - COMPLETED
            - DECLINED
          example: VIEWED
    AssetsRefreshRequestSchema:
      type: object
      description: Parameters for an Assets Refresh request
      required:
        - applicationId
        - accountIds
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        accountIds:
          type: array
          description: >-
            These are the accounts that a refresh will be initiated for. When an
            applicationId is provided, the accounts refreshed must be part of
            the specified application.
          items:
            type: string
            example: b2006a70-a19b-4b7f-973d-3a561e159060
    Closing:
      allOf:
        - $ref: '#/components/schemas/ClosingBaseRecord'
        - type: object
          description: A closing
          required:
            - applicationId
            - closingType
            - closingParties
            - documentReferences
            - packageReferences
            - closingStatus
          properties:
            applicationId:
              $ref: '#/components/schemas/ApplicationId'
            closingType:
              $ref: '#/components/schemas/ClosingType'
            closingParties:
              type: array
              description: List of closing parties associated with the closing.
              items:
                $ref: '#/components/schemas/ClosingParty'
            closingStart:
              type: string
              format: date-time
              description: Closing start timestamp
              example: '2019-10-29T04:25:30.000Z'
            closingEnd:
              type: string
              format: date-time
              description: Closing end timestamp
              example: '2019-10-30T04:25:30.000Z'
            documentReferences:
              type: array
              description: List of closing documents
              items:
                $ref: '#/components/schemas/ClosingDocumentReference'
            packageReferences:
              type: array
              description: List of closing packages
              items:
                $ref: '#/components/schemas/ClosingPackageReference'
            closingStatus:
              type: string
              description: The closing status
              enum:
                - DRAFT
                - SENT
                - SENT_DAY_OF
                - COMPLETED
              example: COMPLETED
            lastSentAt:
              type: string
              format: date-time
              description: Timestamp reflecting when the closing was last sent
              example: '2019-10-29T04:25:30.000Z'
            specialInstructions:
              type: string
              description: Special closing instructions
              example: Please wet-sign the Closing Disclosure.
            eNoteSignStart:
              type: string
              format: date-time
              description: Timestamp when eNote signing can start.
              example: '2022-03-16T00:00:00-04:00'
            eNoteSignEnd:
              type: string
              format: date-time
              description: Timestamp when eNote signing has to end.
              example: '2022-03-16T23:59:59-04:00'
    ClosingBaseRecord:
      type: object
      description: Base Closing Record
      required:
        - id
        - createdAt
      properties:
        id:
          type: string
          description: Record ID
          example: b2006a70-a19b-4b7f-973d-3a561e159060
        createdAt:
          type: string
          format: date-time
          description: Creation Date
          example: '2019-10-29T04:25:30.000Z'
    ClosingType:
      type: string
      description: The type of closing
      enum:
        - RON
        - HYBRID
        - TRADITIONAL
        - UNDETERMINED
      example: RON
    ClosingPartyPatchRequest:
      description: Information about a closing party.
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email address of the closing party
          example: johnhernandez@mail.com
        partyType:
          $ref: '#/components/schemas/ClosingPartyType'
        firstName:
          type: string
          description: First name of the closing party
          example: John
        lastName:
          type: string
          description: Last name of the closing party
          example: Hernandez
        phoneNumber:
          type: string
          description: Phone number of the closing party
          example: '4153334444'
        agencyName:
          type: string
          description: Name of the closing party's agency
          example: Title Co.
    ClosingPartyType:
      type: string
      description: The closing party type
      enum:
        - SETTLEMENT
        - TITLE
        - ATTORNEY
        - CLOSER
        - SUPPORTING_PARTY
      example: TITLE
    ClosingParty:
      description: Information about a closing party.
      allOf:
        - $ref: '#/components/schemas/ClosingBaseRecord'
        - type: object
          required:
            - email
            - partyType
            - firstName
            - lastName
          properties:
            email:
              type: string
              description: Email address of the closing party
              example: johnhernandez@mail.com
            partyType:
              $ref: '#/components/schemas/ClosingPartyType'
            firstName:
              type: string
              description: First name of the closing party
              example: John
            lastName:
              type: string
              description: Last name of the closing party
              example: Hernandez
            phoneNumber:
              type: string
              description: Phone number of the closing party
              example: '4153334444'
            principalId:
              type: string
              description: >-
                The ID of the record in Blend’s identity service that
                corresponds to this party
              example: d74468a2-ca1a-415c-b985-ed6012bd4d0d
            agency:
              $ref: '#/components/schemas/ClosingAgency'
    ClosingAgency:
      description: Name of the agency associated with a closing party.
      allOf:
        - $ref: '#/components/schemas/ClosingBaseRecord'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
              description: Agency name
              example: Title Co.
    ClosingDocumentReference:
      allOf:
        - $ref: '#/components/schemas/ClosingBaseRecord'
        - type: object
          required:
            - documentID
            - sourceType
            - closingDesignation
          properties:
            documentID:
              type: string
              description: Document ID
              example: b2006a70-a19b-4b7f-973d-3a561e159060
            documentType:
              $ref: '#/components/schemas/DocumentType'
            sourceType:
              $ref: '#/components/schemas/ClosingSourceType'
            closingDesignation:
              $ref: '#/components/schemas/ClosingDesignationResponse'
    ClosingPackageReference:
      type: object
      required:
        - packageID
        - packageType
        - createdAt
        - details
      properties:
        packageID:
          type: string
          description: Package ID
          example: c2116a70-a29b-4b7f-973d-3a561e159060
        packageType:
          $ref: '#/components/schemas/ClosingPackageTypeResponse'
        createdAt:
          type: string
          description: The UTC timestamp of the closing package creation. ISO format
          example: '2018-08-24T14:08:13.862594+00:00'
        details:
          type: object
          oneOf:
            - $ref: '#/components/schemas/EsignClosingPackageDetailsResponse'
    ClosingDocumentRecipients:
      type: object
      required:
        - partyId
      properties:
        partyId:
          type: string
          format: guid
          description: Party UUID of signer.
          example: fecbc83e-7fd2-421d-b21d-3b5634d5c5f0
        tabExtractionMethod:
          type: string
          enum:
            - EXPERE_ACROFORM
            - ENCOMPASS
            - MANUAL
          description: >-
            If omitted, the document is considered view-only for this party. For
            eSign documents where tabs are expected to be added manually, use
            value `MANUAL` for `tabExtractionMethod`.
        extractTabs:
          type: array
          description: >-
            If additional information is required for tab extraction (which it
            is for `EXPERE_ACROFORM` documents), include it in `extractTabs`.
          items:
            $ref: '#/components/schemas/EsignExtractTabExpereAcroformSchema'
        tabs:
          type: array
          items:
            type: object
            anyOf:
              - $ref: '#/components/schemas/EsignSignHereSchema'
              - $ref: '#/components/schemas/EsignApproveSchema'
              - $ref: '#/components/schemas/EsignDateSignedSchema'
              - $ref: '#/components/schemas/EsignCheckboxSchema'
              - $ref: '#/components/schemas/EsignTextSchema'
              - $ref: '#/components/schemas/EsignRadioGroupSchema'
              - $ref: '#/components/schemas/EsignInitialHereSchema'
              - $ref: '#/components/schemas/EsignDateSchema'
              - $ref: '#/components/schemas/EsignNoteSchema'
    EsignFontTabAttributesSchema:
      type: object
      properties:
        bold:
          type: boolean
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
    EsignBaseTabAttributesSchema:
      type: object
      required:
        - attributes
      properties:
        attributes:
          type: object
          required:
            - pageNumber
            - xPosition
            - yPosition
          properties:
            conditionalParentLabel:
              type: string
              example: parentTabLabel
            conditionalParentValue:
              type: string
              example: parentTabValue
            fieldName:
              type: string
            name:
              type: string
            pageNumber:
              type: integer
              example: 1
            tabLabel:
              type: string
            xPosition:
              type: integer
              example: 0
            yPosition:
              type: integer
              example: 0
    EsignSignHereSchema:
      title: Sign Here Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - signHere
          example: signHere
        attributes:
          type: object
          properties:
            required:
              type: boolean
              example: false
            scaleValue:
              type: number
              example: 0
            status:
              type: string
    EsignApproveSchema:
      title: Approve Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - approve
          example: approve
        attributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchema'
          type: object
          properties:
            buttonText:
              type: string
            height:
              type: number
              example: 0
            width:
              type: number
              example: 0
    EsignDateSignedSchema:
      title: Date Signed Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - dateSigned
          example: dateSigned
        attributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchema'
          type: object
          properties:
            value:
              type: string
    EsignCheckboxSchema:
      title: Checkbox Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - checkbox
          example: checkbox
        attributes:
          type: object
          properties:
            selected:
              type: boolean
              example: false
    EsignTextSchema:
      title: Text Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - text
          example: text
        attributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchema'
          type: object
          properties:
            required:
              type: boolean
              example: false
            height:
              type: number
              example: 0
            width:
              type: number
              example: 0
            maxLength:
              type: number
              example: 0
    EsignRadioGroupSchema:
      title: Radio Group Tab
      type: object
      required:
        - type
        - attributes
      properties:
        attributes:
          type: object
          properties:
            conditionalParentLabel:
              type: string
            conditionalParentValue:
              type: string
            fieldName:
              type: string
            groupName:
              type: string
            radios:
              type: array
              items:
                $ref: '#/components/schemas/EsignRadioSchema'
            required:
              type: boolean
              example: true
        type:
          type: string
          enum:
            - radioGroup
          example: radioGroup
    EsignRadioSchema:
      type: object
      required:
        - pageNumber
        - xPosition
        - yPosition
      properties:
        pageNumber:
          type: number
          example: 0
        selected:
          type: boolean
          example: false
        tabId:
          type: string
        value:
          type: string
        xPosition:
          type: number
          example: 0
        yPosition:
          type: number
          example: 0
    EsignInitialHereSchema:
      title: Initial Here Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - initialHere
          example: initialHere
        attributes:
          type: object
          properties:
            scaleValue:
              type: number
              example: 0
            required:
              type: boolean
              example: false
    EsignDateSchema:
      title: Date Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - date
          example: date
        attributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchema'
          type: object
          properties:
            required:
              type: boolean
              example: false
    EsignNoteSchema:
      title: Note Tab
      allOf:
        - $ref: '#/components/schemas/EsignBaseTabAttributesSchema'
        - type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - note
          example: note
        attributes:
          allOf:
            - $ref: '#/components/schemas/EsignFontTabAttributesSchema'
          type: object
          properties:
            height:
              type: number
              example: 0
            width:
              type: number
              example: 0
            value:
              type: number
              example: 0
    ClosingSourceType:
      type: string
      description: The source type
      enum:
        - LENDER
        - TITLE
      example: LENDER
    ClosingDesignationRequest:
      type: string
      description: >-
        The document closing designation accepted by the API. If `PRE_CLOSING`
        is provided, then a `sourceType` of `LENDER` is not allowed; it must be
        `TITLE` to indicate the addition of a pre-closing document by the
        title/settlement agent.
      enum:
        - SIGN_AHEAD
        - DAY_OF
        - NOTE
        - PRE_CLOSING
      example: NOTE
    ClosingDesignationResponse:
      type: string
      description: >-
        The document closing designation the API can respond with.
        `DRAFT_PRE_CLOSING` indicates that the `PUT
        close/closings/{id}/pre-closing-documents` endpoint had been called
        before an attempt to call `POST
        close/closings/{id}/pre-closing-documents/send`.
      enum:
        - SIGN_AHEAD
        - DAY_OF
        - NOTE
        - PRE_CLOSING
        - DRAFT_PRE_CLOSING
      example: NOTE
    ClosingPackageTypeResponse:
      type: string
      description: The type of the closing package
      enum:
        - ESIGN
      example: ESIGN
    EsignClosingPackageStatusResponse:
      type: string
      description: The closing status of the esign package
      enum:
        - COMPLETE
        - INCOMPLETE
      example: COMPLETE
    EsignClosingPackageDetailsResponse:
      type: object
      description: Details about the esign closing package
      required:
        - closingPackageStatus
      properties:
        closingPackageStatus:
          $ref: '#/components/schemas/EsignClosingPackageStatusResponse'
    ClosingList:
      type: array
      description: A list of closings
      items:
        $ref: '#/components/schemas/Closing'
    ClosingPostRequest:
      type: object
      description: Request body for creating a closing for an application
      required:
        - applicationId
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
    ClosingPatchRequest:
      type: object
      description: Closing fields to update
      properties:
        closingType:
          $ref: '#/components/schemas/ClosingType'
        closingStart:
          type: string
          format: date-time
          description: >-
            ISO 8601 datetime when the closing is set to start. This time will
            dictate when sign-ahead closing documents will be released to
            borrower(s) for eSign. A timezone offset **MUST** be provided in the
            date string to ensure sign ahead documents are released accurately
            for borrower(s), e.g., not a day earlier than expected.
          example: '2019-10-29T00:00:00-04:00'
        closingEnd:
          type: string
          format: date-time
          description: >-
            ISO 8601 datetime when the closing is set to end. Borrower(s) will
            not be able to review or eSign closing documents after this time. A
            timezone offset **MUST** be provided in the date string to ensure
            closing documents expire at the correct time for borrower(s).
          example: '2019-10-29T23:59:59-04:00'
        scheduledCeremonyTime:
          type: string
          format: date-time
          description: >-
            ISO 8601 datetime that represents a closing "day", which will be
            reflected in Settlement Agent Workspace and will be assumed to be
            the day when a borrower meets with their notary. If this value is
            not provided, it will have the same value as closingStart. This
            value should be before closingEnd.
          example: '2019-10-29T04:00:00-04:00'
        timezone:
          type: string
          format: string
          description: >
            IMPORTANT - this field is only used by the browser in the webapp and
            does not effect the closing start time declared in this request.

            Additionally, closingStart and closingEnd must include the correct
            timezone offset.


            For example if you wish to use Central time, the timezone value
            would be "America/Chicago" and the closingStart or closingDate value
            must

            include an offset of "-06:00" during standard time i.e.
            "2020-12-12T00:00:00-06:00" or "-05:00" during daylight savings time
            "2021-06-12T00:00:00-05:00"


            Options include:


            "America/New_York" (Eastern time)


            "America/Chicago" (Central time)


            "America/Denver" (Mountain time - day light savings time applicable)


            "America/Phoenix" (Arizona time - day light savings not applicable)


            "America/Los_Angeles" (Pacific time)


            "America/Anchorage" (Alaska time)


            "Pacific/Honolulu" (Hawaii time)
          example: America/New_York
        closingParties:
          type: array
          description: List of closing parties
          items:
            $ref: '#/components/schemas/ClosingPartyPatchRequest'
        specialInstructions:
          type: string
          description: Special closing instructions
          example: Please wet-sign the Closing Disclosure.
        eNoteSignStart:
          type: string
          format: date-time
          nullable: true
          description: >-
            ISO 8601 format. The time component needs to be at midnight.
            Optional. Send as null to clear out the existing value and use
            defaults.
          example: '2022-03-16T00:00:00-04:00'
        eNoteSignEnd:
          type: string
          format: date-time
          nullable: true
          description: >-
            ISO 8601 format. The time component needs to be at end of day
            23:59:59. Optional. Send as null to clear out the existing value and
            use defaults.
          example: '2022-03-16T23:59:59-04:00'
    ClosingDocumentsPutRequest:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/ClosingDocumentReferenceRequest'
    ClosingDocumentReferenceRequest:
      type: object
      description: Reference to a closing document in a closing document request.
      required:
        - documentID
        - sourceType
      properties:
        documentID:
          type: string
          description: Blend Document ID
          example: b2006a70-a19b-4b7f-973d-3a561e159060
        sourceType:
          $ref: '#/components/schemas/ClosingSourceType'
        closingDesignation:
          $ref: '#/components/schemas/ClosingDesignationRequest'
        requireNotarization:
          type: boolean
          description: Whether the document requires notarization.
          default: true
          example: true
        signersRequired:
          type: string
          enum:
            - ALL
            - ANY
          description: >-
            The signers required for this document. If provided, you must also
            provide `recipients`.
          default: ALL
          example: ALL
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/ClosingDocumentRecipients'
    PreClosingDocumentsPutRequest:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/PreClosingDocumentReferenceRequest'
    PreClosingDocumentReferenceRequest:
      type: object
      description: Reference to a closing document in a pre-closing document request.
      required:
        - documentID
      properties:
        documentID:
          type: string
          description: Blend Document ID
          example: b2006a70-a19b-4b7f-973d-3a561e159060
    ClosingCreatedResponse:
      type: object
      description: ID of the newly created closing.
      required:
        - id
      properties:
        id:
          type: string
          description: Closing ID
          example: b2006a70-a19b-4b7f-973d-3a561e159060
    ClosingNotFoundError:
      type: object
      required:
        - error
        - display
      properties:
        error:
          type: string
          example: Not Found
        display:
          type: string
          example: No closing found with id 50557b61-c4ec-4639-9781-a5efe5d29946
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    ClosingSendPostRequest:
      type: object
      required:
        - sourceType
      properties:
        sourceType:
          $ref: '#/components/schemas/ClosingSourceType'
    ClosingExternallyManagedENotePostRequest:
      type: object
      required:
        - vaultData
      properties:
        vaultData:
          $ref: '#/components/schemas/VaultData'
    VaultData:
      type: object
      oneOf:
        - $ref: '#/components/schemas/EOriginalVault'
    EOriginalVault:
      type: object
      required:
        - eOriginal
      properties:
        eOriginal:
          type: object
          required:
            - transactionId
          properties:
            transactionId:
              type: string
              description: >-
                The transactionId for the externally managed EOriginal Vault
                where the ENote is stored.
              example: '11180467'
    ClosingENotePostRequest:
      example:
        armLoan:
          MIN: '100000000000000001'
          scheduledFirstPaymentDate: '2018-03-14'
          lenderLoanId: '777777777'
          lienPriorityType: FirstLien
          mortgageType: Conventional
          noteRatePercent: 13.85
          originalLoanAmount: 30000000.62
          loanMaturityDate: '2048-12-13'
          originalPrincipalAndInterestPaymentAmount: 14460.45
          lateChargeGracePeriod: 8
          lateChargeRate: 13.45
          changePercentagePoints: 98.6
          greaterLimitPoints: 12.3
          lifetimeFloorPercent: 19.21
          lifetimeCapRate: 11.45
          lowerLimitPoints: 33.2
          propertyAddress:
            city: New York
            state: NY
            postalCode: '10010'
            county: New York
            parsedStreetAddress:
              streetPrimaryNumberText: '123'
              streetPreDirectionalText: W
              streetName: Hook
              streetSuffixText: Road
              addressUnitDesignatorType: Unit
              addressUnitIdentifier: 3C
          notePayToAddress:
            city: New York
            state: NY
            postalCode: '10036'
            unparsedStreetAddress:
              addressLineText: 123 W Hook Road
              addressAdditionalLineText: Unit 3C
          executionDate: '2018-03-14'
          parties:
            agent:
              unparsedName: Nelson and Nelson
              type: Attorney
              contactName: Matthew Nelson
              postalAddress:
                streetAddress: 403 W 49th Street
                city: New York
                state: NY
                postalCode: '10019'
            lender:
              unparsedName: Northstar Lending
              contactName: Harold Osborn
              nmlsId: 665444
            loanOriginator:
              unparsedName: Northstar Lending
              nmlsId: 878787
            companyMortgageBroker:
              unparsedName: Northstar Broker
              nmlsId: 123123
            individualMortgageBroker:
              unparsedName: Northstar Mortgage
              nmlsId: 981981
          docmagic:
            loanAmortizationPeriodCount: 12
            loanAmortizationPeriodType: Biweekly
            productIdentifier: US3200
            paymentFrequencyType: Annual
            baseLoanAmount: 132133.12
            firstRateChangeMonthsCount: 31
            perChangeRateAdjustmentFrequencyMonthsCount: 12
            disclosedIndexRatePercent: 32.23
            subsequentGreaterLimitPoints: 2.3
          eOriginal:
            formId: 3501.02e
            dateOfFirstChange: 2001-10
            changePercentagePointsWords: things change
            maxLimitPoints: 23.12
            lateChargeMaximumAmount: 999993.23
            conformingYearType: January2010
            registryOperator: some-operator
      oneOf:
        - $ref: '#/components/schemas/BlendENoteFixedLoan'
        - $ref: '#/components/schemas/BlendENoteArmLoan'
    BlendENoteARMLoanTypeFormId:
      enum:
        - 3501e
        - 3501.02e
        - 3501.10e
        - 3501.30e
        - 3501.39e
        - 3501.46e
        - 3501.47e
        - 3501.49e
        - 3501.50e
        - 3502e
        - 3502.02e
        - 3502.10e
        - 3502.30e
        - 3502.39e
        - 3502.46e
        - 3502.47e
        - 3502.49e
        - 3502.50e
        - 3504e
        - 3522e
        - 3528e
        - 3528e-ak
        - 3528e-fl
        - 3528e-nh
        - 3528e-pa
        - 3528e-tx
        - 3528e-va
        - 3528e-vt
        - 3528e-wi
        - 3528e-wv
      example: 3501e
      type: string
    BlendENoteFixedLoanTypeFormId:
      enum:
        - 3200e
        - 3200e-usda
        - 3200e-fha
        - 3200e-fha-ak
        - 3200e-fha-fl
        - 3200e-fha-ia
        - 3200e-fha-mo
        - 3200e-fha-nh
        - 3200e-fha-pa
        - 3200e-fha-va
        - 3200e-fha-vt
        - 3200e-fha-wi
        - 3200e-fha-wv
        - 3200e-va
        - 3200e-va2
        - 3200e-va-ak
        - 3200e-va-ca
        - 3200e-va-fl
        - 3200e-va-la
        - 3200e-va-me
        - 3200e-va-nh
        - 3200e-va-ny
        - 3200e-va-pa
        - 3200e-va-tx
        - 3200e-va-va
        - 3200e-va-vt
        - 3200e-va-wi
        - 3200e-va-wv
        - 3200e-va-dc
        - 3200e-in
        - 3200e-md
        - 3200e-tx
        - 3200e-al
        - 3200e-al2
        - 3202e
        - 3210e
        - 3220e
        - 3230e
        - 3233e
        - 3239e
        - 3244.1e
        - 3246e
        - 3247e
        - 3249e
        - 3250e
      example: 3200e
      type: string
    EOriginalENoteLoanType:
      properties:
        lateChargeMaximumAmount:
          description: The maximum monthly late charge amount allowed.
          example: 20.15
          maximum: 9999999.99
          minimum: 1
          type: number
        conformingYearType:
          enum:
            - Pre2010
            - January2010
            - Other
          example: Pre2010
          type: string
        registryOperator:
          $ref: '#/components/schemas/BlendENoteUnparsedNameType'
      type: object
    EOriginalENoteARMLoanType:
      properties:
        eOriginal:
          allOf:
            - $ref: '#/components/schemas/EOriginalENoteLoanType'
            - properties:
                formId:
                  $ref: '#/components/schemas/BlendENoteARMLoanTypeFormId'
                dateOfFirstChange:
                  description: >-
                    The due date of the payment at the first calculated interest
                    rate change. To arrive at the actual (true) date that
                    interest begins to accrue at the changed rate one payment
                    period is subtracted if interest is paid in arrears. Must be
                    in YYYY-MM format.
                  example: 2018-04
                  format: date
                  type: string
                changePercentagePointsWords:
                  $ref: '#/components/schemas/BlendENotePointWordsType'
                  type: number
                maxLimitPoints:
                  description: >-
                    The stated maximum percentage to which the interest rate can
                    increase over the life of the loan.
                  type: number
              required:
                - formId
                - dateOfFirstChange
                - changePercentagePointsWords
                - maxLimitPoints
              type: object
    EOriginalENoteFixedLoanType:
      properties:
        eOriginal:
          allOf:
            - $ref: '#/components/schemas/EOriginalENoteLoanType'
            - properties:
                formId:
                  $ref: '#/components/schemas/BlendENoteFixedLoanTypeFormId'
                paymentRemittanceDay:
                  type: integer
                  description: >-
                    The day of the month on which the loan payment is to be
                    remitted under the terms of the Mortgage.
                  minimum: 1
                  maximum: 31
                  example: 3
                agencyCaseIdentifier:
                  $ref: '#/components/schemas/BlendENoteAgencyCaseIdentifierType'
              required:
                - formId
                - paymentRemittanceDay
              type: object
    DocMagicENoteLoanType:
      properties:
        loanAmortizationPeriodCount:
          description: >-
            The number periods (as defined by the Loan Amortization Period Type)
            over which the scheduled loan payments of principal and/or interest
            are calculated to retire the obligation. Minimum is 0, maximum is
            2147483647.
          type: integer
        loanAmortizationPeriodType:
          description: >-
            The duration of time used to define the period over which the loan
            is amortized.
          enum:
            - Biweekly
            - Day
            - Month
            - Quarter
            - Semimonthly
            - Week
            - Year
          example: Biweekly
          type: string
        paymentFrequencyType:
          description: Specifies the frequency of the mortgage payment.
          enum:
            - Annual
            - AtMaturity
            - Biweekly
            - Monthly
            - Other
            - Quarterly
            - Semiannual
            - Semimonthly
            - Weekly
          example: Annual
          type: string
        baseLoanAmount:
          description: >-
            The base loan amount to be loaned to the borrower not including PMI,
            MIP, or Funding Fee.
          example: 30000000
          maximum: 999999999.99
          minimum: 1
          type: number
      required:
        - loanAmortizationPeriodCount
        - loanAmortizationPeriodType
        - paymentFrequencyType
        - productIdentifier
      type: object
    DocMagicENoteARMLoanType:
      properties:
        docmagic:
          allOf:
            - $ref: '#/components/schemas/DocMagicENoteLoanType'
            - properties:
                firstRateChangeMonthsCount:
                  description: >-
                    The number of months after origination in which the first
                    interest rate adjustment occurs, if the interest rate on the
                    subject loan can change. Minimum is 0, maximum is
                    2147483647.
                  type: integer
                perChangeRateAdjustmentFrequencyMonthsCount:
                  description: >-
                    The number of months between rate adjustments, if the
                    interest rate on the subject loan can change. Minimum is 0,
                    maximum is 2147483647.
                  type: integer
                disclosedIndexRatePercent:
                  description: >-
                    The value of the financial index, expressed as a percent,
                    used to calculate the Disclosed Fully Indexed Interest Rate
                    that must be disclosed to the borrower for adjustable rate
                    mortgages.
                  type: number
                subsequentGreaterLimitPoints:
                  description: >-
                    The stated maximum, expressed as a percent, to which the
                    interest rate can increase to in subsequent adjustment
                    periods.
                  type: number
                productIdentifier:
                  description: >-
                    The Fannie Mae / Freddie Mac code for the Adjustable Rate
                    eNote being requested. This productIdentifier along with
                    other loan parameters such as "firstRateChangeMonthsCount"
                    and "subsequentGreaterLimitPoints" is used to determine the
                    type of DocMagic eNote to generate. Descriptions of the
                    product identifiers:

                    US3441U
                      * 3/6 MO 30-DAY AVG SOFR 2/1/5 CAPS

                    US3442U
                      * 5/6 MO 30-DAY AVG SOFR 2/1/5 CAPS
                      * 7/6 MO 30-DAY AVG SOFR 5/1/5 CAPS
                      * 10/6 MO 30-DAY AVG SOFR 5/1/5 CAPS
                  example: US3442U
                  enum:
                    - US3441U
                    - US3442U
                  type: string
              required:
                - productIdentifier
                - firstRateChangeMonthsCount
                - perChangeRateAdjustmentFrequencyMonthsCount
                - disclosedIndexRatePercent
                - subsequentGreaterLimitPoints
              type: object
    DocMagicENoteFixedLoanType:
      properties:
        docmagic:
          allOf:
            - $ref: '#/components/schemas/DocMagicENoteLoanType'
            - properties:
                productIdentifier:
                  description: >-
                    The Fannie Mae / Freddie Mac code for the Fixed Rate eNote
                    being requested. US3200 is a generic fixed loan plan code,
                    while USFHA and USVA are specific to FHA and VA loans,
                    respectively.

                    **NOTE**: USFHA requires a mortgage type of "FHA" either in
                    the API request or in Blend, while USVA requires "VA".
                  example: US3200
                  enum:
                    - US3200
                    - USFHA
                    - USVA
                  type: string
    BlendENoteARMLoanType:
      allOf:
        - $ref: '#/components/schemas/BlendENoteBaseLoan'
        - properties:
            changePercentagePoints:
              description: >-
                The number of percentage points to be added to the index to
                arrive at the new interest rate.
              type: number
            lowerLimitPoints:
              description: >-
                The stated minimum, expressed as a percent, to which the
                interest rate can decrease to in this adjustment period. Note:
                For DocMagic eNotes, this value is specific to the first
                adjustment period.
              type: number
            greaterLimitPoints:
              description: >-
                The stated maximum, expressed as a percent, to which the
                interest rate can increase to in this adjustment period. Note:
                For DocMagic eNotes, this value is specific to the first
                adjustment period.
              type: number
            lifetimeFloorPercent:
              $ref: '#/components/schemas/BlendENotePercentage'
            lifetimeCapRate:
              $ref: '#/components/schemas/BlendENotePercentage'
          required:
            - changePercentagePoints
            - lowerLimitPoints
            - greaterLimitPoints
            - lifetimeCapRate
            - lifetimeFloorPercent
          type: object
      oneOf:
        - $ref: '#/components/schemas/DocMagicENoteARMLoanType'
        - $ref: '#/components/schemas/EOriginalENoteARMLoanType'
    BlendENoteBaseLoan:
      properties:
        MIN:
          description: >-
            Mortgage Identification Number. 18-digit number passed as a string
            whose last digit is a control digit. Required in production
            environment.
          example: '100012398765432127'
          pattern: ^\d{18}$
          type: string
        lenderLoanId:
          description: >-
            The identifier assigned by the originating Lender to be referenced
            as the Loan ID/Number on all settlement documents, notes, riders,
            etc.
          example: '777777777'
          maxLength: 60
          minLength: 1
          type: string
        executionDate:
          example: '2018-03-14'
          format: date
          type: string
        executionCity:
          $ref: '#/components/schemas/ExecutionCityType'
        executionState:
          $ref: '#/components/schemas/ExecutionStateType'
        propertyAddress:
          anyOf:
            - $ref: '#/components/schemas/BlendENoteUnparsedFullAddressWithCounty'
            - $ref: '#/components/schemas/BlendENoteParsedFullAddressWithCounty'
          description: The property address will be pulled from Blend if not specified.
        scheduledFirstPaymentDate:
          description: >-
            The month and year of the first scheduled mortgage payment to be
            made by the borrower under the terms of the mortgage. Must be in
            YYYY-MM-DD format. The first day of the month is assumed.
          example: '2018-03-01'
          format: date
          type: string
        notePayToAddress:
          anyOf:
            - $ref: '#/components/schemas/BlendENoteUnparsedFullAddress'
            - $ref: '#/components/schemas/BlendENoteParsedFullAddress'
        lienPriorityType:
          default: FirstLien
          description: Specifies the priority of the lien against the subject property.
          enum:
            - FirstLien
            - SecondLien
            - ThirdLien
            - FourthLien
            - Other
          example: FirstLien
          type: string
        mortgageType:
          description: >-
            Identifies the highest level private or public sector entity under
            whose guidelines the mortgage is originated. The mortgage type will
            be pulled from Blend if not specified.
          enum:
            - Conventional
            - FHA
            - LocalAgency
            - Other
            - PublicAndIndianHousing
            - StateAgency
            - USDARuralDevelopment
            - VA
          example: Conventional
          type: string
        loanPurposeType:
          description: >-
            Specifies the purpose for which the loan proceeds will be used. The
            loan purpose type will be pulled from Blend if not specified.
          enum:
            - Purchase
            - Refinance
          example: Purchase
          type: string
        noteRatePercent:
          $ref: '#/components/schemas/BlendENotePercentage'
        originalLoanAmount:
          description: >-
            The amount to be repaid as disclosed on the Note. Will be pulled
            from Blend if not specified.
          example: 30000000
          maximum: 999999999.99
          minimum: 1
          type: number
        loanMaturityDate:
          description: >-
            The date when the loan is scheduled to be paid in full as reflected
            on the Note.
          example: '2048-12-13'
          format: date
          type: string
        originalPrincipalAndInterestPaymentAmount:
          description: >-
            The dollar amount of the principal and interest payment as stated on
            the Note. The principal and interest payment is usually obtained
            using the loan amount and interest rate to arrive at full
            amortization during the loan term.
          example: 14460.45
          maximum: 999999999.99
          minimum: 1
          type: number
        lateChargeGracePeriod:
          description: >-
            The grace period in days for this loan before a late charge will be
            applied.
          example: 8
          maximum: 365
          minimum: 1
          type: integer
        lateChargeRate:
          $ref: '#/components/schemas/BlendENotePercentage'
        parties:
          $ref: '#/components/schemas/BlendENoteParties'
      required:
        - executionDate
        - executionCity
        - executionState
        - notePayToAddress
        - noteRatePercent
        - scheduledFirstPaymentDate
        - loanMaturityDate
        - originalPrincipalAndInterestPaymentAmount
        - lateChargeGracePeriod
        - lateChargeRate
        - parties
      type: object
    BlendENoteAddressComponentType:
      maxLength: 240
      minLength: 1
      type: string
    BlendENoteAddressUnitDesignatorType:
      enum:
        - Apartment
        - Basement
        - Building
        - Condo
        - Department
        - Floor
        - Front
        - Hanger
        - Key
        - Lobby
        - Lot
        - Lower
        - Office
        - Other
        - Penthouse
        - Pier
        - Rear
        - Room
        - Side
        - Space
        - Stop
        - Suite
        - Trailer
        - Unit
        - Upper
      example: Apartment
      type: string
    BlendENoteAgencyCaseIdentifierType:
      description: >-
        An identifier assigned by a government agency (for example FHA Case
        Number, VA Case Number). The identifier is used by the agency to
        identify a loan.
      maxLength: 20
      minLength: 1
      pattern: ^[0-9a-zA-z\\-]+$
      type: string
    BlendENoteAgent:
      properties:
        contactName:
          $ref: '#/components/schemas/BlendENoteContactNameType'
        postalAddress:
          anyOf:
            - $ref: '#/components/schemas/BlendENoteUnparsedFullAddress'
            - $ref: '#/components/schemas/BlendENoteParsedFullAddress'
        type:
          $ref: '#/components/schemas/BlendENoteAgentType'
        unparsedName:
          $ref: '#/components/schemas/BlendENoteUnparsedNameType'
      required:
        - unparsedName
      type: object
    BlendENoteAgentType:
      enum:
        - Attorney
        - ClosingAgent
        - EscrowCompany
        - SettlementAgent
        - TitleCompany
        - Other
      example: Attorney
      type: string
    BlendENoteArmLoan:
      properties:
        armLoan:
          $ref: '#/components/schemas/BlendENoteARMLoanType'
      required:
        - armLoan
      type: object
    BlendENoteCityStateZip:
      properties:
        city:
          $ref: '#/components/schemas/BlendENoteCityType'
        postalCode:
          description: >-
            The postal code (ZIP Code in the US) for the address. ZIP Code may
            be either 5 or 9 digits.
          example: 10036
          pattern: ^\d{5}(\d{4})?$
          type: string
        state:
          $ref: '#/components/schemas/BlendENoteStateType'
      required:
        - city
        - state
        - postalCode
      type: object
    BlendENoteCityType:
      description: The name of the city.
      example: New York
      maxLength: 26
      minLength: 1
      type: string
    ExecutionCityType:
      type: string
      description: The name of the city.
      minLength: 1
      maxLength: 26
      example: New York
    ExecutionStateType:
      type: string
      description: >-
        The two-character representation of the US state, US Territory, Canadian
        Province, Military APO FPO, or Territory.
      enum:
        - AL
        - AK
        - AZ
        - AR
        - CA
        - CO
        - CT
        - DE
        - DC
        - FL
        - GA
        - HI
        - ID
        - IL
        - IN
        - IA
        - KS
        - KY
        - LA
        - ME
        - MD
        - MA
        - MI
        - MN
        - MS
        - MO
        - MT
        - NE
        - NV
        - NH
        - NJ
        - NM
        - NY
        - NC
        - ND
        - OH
        - OK
        - OR
        - PA
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VT
        - VA
        - WA
        - WV
        - WI
        - WY
      example: NY
    BlendENoteParties:
      oneOf:
        - properties:
            agent:
              $ref: '#/components/schemas/BlendENoteAgent'
            lender:
              $ref: '#/components/schemas/BlendENoteLender'
            loanOriginator:
              $ref: '#/components/schemas/BlendENoteLoanParty'
          required:
            - lender
            - loanOriginator
            - executionDate
          type: object
        - properties:
            agent:
              $ref: '#/components/schemas/BlendENoteAgent'
            companyMortgageBroker:
              $ref: '#/components/schemas/BlendENoteLoanParty'
            individualMortgageBroker:
              $ref: '#/components/schemas/BlendENoteLoanParty'
            lender:
              $ref: '#/components/schemas/BlendENoteLender'
            loanOriginator:
              $ref: '#/components/schemas/BlendENoteLoanParty'
          required:
            - lender
            - loanOriginator
            - companyMortgageBroker
            - individualMortgageBroker
            - executionDate
          type: object
    BlendENoteContactNameType:
      example: Matthew Nelson
      maxLength: 60
      minLength: 1
      type: string
    BlendENoteCountyType:
      example: New York
      maxLength: 35
      minLength: 1
      type: string
    BlendENoteFixedLoan:
      properties:
        fixedLoan:
          $ref: '#/components/schemas/BlendENoteFixedLoanType'
      required:
        - fixedLoan
      type: object
    BlendENoteFixedLoanType:
      allOf:
        - $ref: '#/components/schemas/BlendENoteBaseLoan'
      oneOf:
        - $ref: '#/components/schemas/DocMagicENoteFixedLoanType'
        - $ref: '#/components/schemas/EOriginalENoteFixedLoanType'
    BlendENoteLender:
      properties:
        contactName:
          $ref: '#/components/schemas/BlendENoteContactNameType'
        nmlsId:
          $ref: '#/components/schemas/BlendENoteNMLSRID'
        unparsedName:
          $ref: '#/components/schemas/BlendENoteUnparsedNameType'
      required:
        - unparsedName
        - contactName
        - nmlsId
      type: object
    BlendENoteLoanParty:
      properties:
        nmlsId:
          $ref: '#/components/schemas/BlendENoteNMLSRID'
        unparsedName:
          $ref: '#/components/schemas/BlendENoteUnparsedNameType'
        phoneNumber:
          description: String representation of the phone number
          example: '4155504810'
          type: string
        email:
          description: Party email
          example: party@email.com
          type: string
      required:
        - unparsedName
        - phoneNumber
        - email
        - nmlsId
      type: object
    BlendENoteNMLSRID:
      description: >-
        Nationwide Multistate Licensing System ID number. Minimum is 1, maximum
        is 2147483647.
      example: 665444
      maximum: 2147483647
      minimum: 1
      type: integer
    BlendENoteParsedStreetAddress:
      type: object
      properties:
        addressUnitDesignatorType:
          $ref: '#/components/schemas/BlendENoteAddressUnitDesignatorType'
        addressUnitIdentifier:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        streetName:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        streetPostDirectionalText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        streetPreDirectionalText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        streetPrimaryNumberText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        streetSuffixText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
      required:
        - streetName
    BlendENoteParsedFullAddress:
      allOf:
        - $ref: '#/components/schemas/BlendENoteCityStateZip'
        - properties:
            parsedStreetAddress:
              $ref: '#/components/schemas/BlendENoteParsedStreetAddress'
          required:
            - parsedStreetAddress
          type: object
    BlendENoteParsedFullAddressWithCounty:
      allOf:
        - $ref: '#/components/schemas/BlendENoteCityStateZip'
        - properties:
            county:
              $ref: '#/components/schemas/BlendENoteCountyType'
            parsedStreetAddress:
              $ref: '#/components/schemas/BlendENoteParsedStreetAddress'
          required:
            - county
            - parsedStreetAddress
          type: object
    BlendENotePercentage:
      example: 13.85
      maximum: 99.9999
      minimum: 0
      type: number
    BlendENotePointWordsType:
      maxLength: 60
      minLength: 1
      type: string
    BlendENoteStateType:
      description: >-
        The two-character representation of the US state, US Territory, Canadian
        Province, Military APO FPO, or Territory.
      enum:
        - AL
        - AK
        - AZ
        - AR
        - CA
        - CO
        - CT
        - DE
        - DC
        - FL
        - GA
        - HI
        - ID
        - IL
        - IN
        - IA
        - KS
        - KY
        - LA
        - ME
        - MD
        - MA
        - MI
        - MN
        - MS
        - MO
        - MT
        - NE
        - NV
        - NH
        - NJ
        - NM
        - NY
        - NC
        - ND
        - OH
        - OK
        - OR
        - PA
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VT
        - VA
        - WA
        - WV
        - WI
        - WY
      example: NY
      type: string
    BlendENoteData:
      oneOf:
        - $ref: '#/components/schemas/BlendENoteFixedLoan'
        - $ref: '#/components/schemas/BlendENoteArmLoan'
      type: object
    BlendENoteUnparsedNameType:
      example: John M. Jameson Sr
      maxLength: 100
      minLength: 1
      type: string
    BlendENoteUnparsedStreetAddress:
      type: object
      properties:
        addressLineText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
        addressAdditionalLineText:
          $ref: '#/components/schemas/BlendENoteAddressComponentType'
      required:
        - addressLineText
    BlendENoteUnparsedFullAddress:
      allOf:
        - $ref: '#/components/schemas/BlendENoteCityStateZip'
        - properties:
            unparsedStreetAddress:
              $ref: '#/components/schemas/BlendENoteUnparsedStreetAddress'
          required:
            - unparsedStreetAddress
          type: object
    BlendENoteUnparsedFullAddressWithCounty:
      allOf:
        - $ref: '#/components/schemas/BlendENoteCityStateZip'
        - properties:
            county:
              $ref: '#/components/schemas/BlendENoteCountyType'
            unparsedStreetAddress:
              $ref: '#/components/schemas/BlendENoteUnparsedStreetAddress'
          required:
            - county
            - unparsedStreetAddress
          type: object
    GetITPResponse:
      type: object
      required:
        - addedAt
      properties:
        addedAt:
          type: string
          format: date-time
          description: >-
            ISO 8601 timestamp when the first Intent to Proceed Workflow was
            added for any borrower.
          example: '2020-05-01T20:10:22.101Z'
        givenAt:
          type: string
          format: date-time
          description: >-
            ISO 8601 timestamp when Intent to Proceed was given on an
            application.
          example: '2020-05-03T12:06:21.789Z'
        givenBy:
          type: string
          format: guid
          description: The partyID of the borrower who gave Intent to Proceed.
          example: 062773a3-18c9-4a79-80d2-9a73998b2ac0
        givenMethod:
          type: string
          description: >-
            The method used to provide Intent to Proceed. This is
            'ELECTRONICALLY_IN_BLEND' only if it was provided by a borrower
            completing a borrower workflow in Blend. If it is marked completed
            by a lender in Blend on behalf of a borrower, or via API actions, it
            will be set as 'OUTSIDE_OF_BLEND'.
          enum:
            - ELECTRONICALLY_IN_BLEND
            - OUTSIDE_OF_BLEND
    ITPNotFoundError:
      type: object
      required:
        - error
        - display
      properties:
        error:
          type: string
          example: Not Found
        display:
          type: string
          example: >-
            Intent to Proceed has not been added for application
            50557b61-c4ec-4639-9781-a5efe5d29946
        trackingId:
          type: string
          example: d9b5eb21-904c-4eff-a092-65eaa08bfdbb
    CustomFieldsObject:
      type: object
    CustomMetadataObject:
      type: object
    CreatedByObject:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          example: Either a uuid (062773a3-18c9-4a79-80d2-9a73998b2ac0) or 'system'
        type:
          type: string
          example: The type of user who created this application
          enum:
            - ADMIN
            - AUTHENTICATED
            - BORROWER
            - EXTERNAL_API
            - INSURANCE_QC_AGENT
            - INTERNAL_API
            - LENDER
            - SETTLEMENT_AGENT
            - SYSTEM
    VerifiedEmployersSchema:
      type: object
      description: Summary of Verified Employers data on an application.
      properties:
        verifiedEmployers:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedEmployersSummarySchema'
    VerifiedEmployersSummarySchema:
      type: object
      description: Summary of Verified Employers data per borrower on an application
      required:
        - partyId
      properties:
        partyId:
          type: string
          description: The UUID of the partyId.
          example: b2006a70-a19b-4b7f-973d-3a561e159060
        employerDetails:
          type: array
          description: Summary of Verified Employer object per borrower on an application.
          items:
            $ref: '#/components/schemas/VerifiedEmployerObjectSchema'
    VerifiedEmployerObjectSchema:
      type: object
      description: Summary of Verified Employer object per borrower on an application.
      required:
        - employerId
      properties:
        status:
          type: string
          description: Outcome of the employer verification.
          enum:
            - NOT_STARTED
            - UNABLE_TO_PROCESS
            - REQUESTING
            - AWAITING_DATA
            - AWAITING_MANUAL_VERIFICATION
            - DATA_RECEIVED
            - FAILED_VERIFICATION
            - CANCELLED_VERIFICATION
          example: DATA_RECEIVED
        employerName:
          type: string
          description: Name of the verified employer.
          example: Enterprise One
        employerId:
          type: string
          description: The UUID of the employerId.
          example: b2006a70-a19b-4b7f-973d-3a561e159060
    EmployersReverifyRequestSchema:
      type: object
      description: Parameters for Employers Reverification request
      required:
        - applicationId
        - partyId
        - employerIds
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        partyId:
          type: string
          description: The UUID of the partyId.
          example: b2006a70-a19b-4b7f-973d-3a561e159060
        employerIds:
          type: array
          description: These are the employers that a reverify will be initiated for.
          items:
            type: string
            example: b2006a70-a19b-4b7f-973d-3a561e159060
    ConsumerLendingNameSchema:
      type: object
      properties:
        firstName:
          type: string
          example: Tanya
        middleName:
          type: string
          example: Michelle
        lastName:
          type: string
          example: Williams
        suffix:
          type: string
          example: III
    ConsumerLendingPhoneNumberSchema:
      required:
        - type
        - number
      type: object
      properties:
        type:
          type: string
          description: Type of phone number
          enum:
            - HOME
            - WORK
            - MOBILE
          example: HOME
        number:
          type: number
          description: Phone number
          example: 4153504810
    ConsumerLendingIdentityEvaluationSchema:
      type: object
      properties:
        externalReferenceId:
          type: string
          description: Identity evaluation external reference ID
        status:
          type: string
          description: Identity evaluation status
          enum:
            - COMPLETED
            - INCOMPLETE
            - KBA
          example: KBA
        score:
          type: number
          description: Identity evaluation score
          example: 600
        outcome:
          type: string
          description: Identity evaluation outcome
          enum:
            - APPROVED
            - DENIED
            - MANUAL_REVIEW
            - MANUAL_REVIEW_NO_STEP_UP
          example: DENIED
        providerMetadata:
          type: object
          description: Provider metadata
        userMetadata:
          type: object
          description: User metadata
    ConsumerLendingAddressSchema:
      type: object
      description: Address
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          example: Apt 10
        city:
          type: string
          example: Chicago
        county:
          type: string
          example: Cook County
        state:
          type: string
          description: Two-character US state code
          example: IL
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
    ConsumerLendingResidenceSchema:
      type: object
      description: Residence
      required:
        - type
        - address
      properties:
        type:
          type: string
          enum:
            - CURRENT
            - MAILING
            - FORMER
            - OTHER
          example: CURRENT
        residencyType:
          type: string
          description: Residency type
          enum:
            - OWN
            - RENT
            - LIVING_RENT_FREE
          example: RENT
        address:
          $ref: '#/components/schemas/ConsumerLendingAddressSchema'
        moveInDate:
          type: string
          format: date-time
          description: Move in date in ISO 8601 format
          example: '2019-01-01T00:00:00.000Z'
        moveOutDate:
          type: string
          format: date-time
          description: Move out date in ISO 8601 format
          example: '2020-06-30T00:00:00.000Z'
        residencyDurationYears:
          type: number
          description: Number of years in residency
          example: 1
        residencyDurationMonths:
          type: number
          description: Number of months (in excess of number of years) in residency
          example: 6
        monthlyRent:
          type: number
          description: Monthly rent
          example: 1000
    ConsumerLendingOwnedPropertySchema:
      type: object
      description: Owned property
      required:
        - type
        - usageType
        - address
        - presentMarketValue
      properties:
        type:
          type: string
          enum:
            - SINGLE_FAMILY
            - CONDOMINIUM
            - TOWNHOUSE
            - TWO_TO_FOUR_UNIT_PROPERTY
            - COOPERATIVE
            - MULTIFAMILY
            - MANUFACTURED_OR_MOBILE_HOME
            - COMMERCIAL_NON_RESIDENTIAL
            - MIXED_USE_RESIDENTIAL
            - FARM
            - HOME_AND_BUSINESS_COMBINED
            - LAND
          example: SINGLE_FAMILY
        usageType:
          type: string
          description: Usage type
          enum:
            - PRIMARY_RESIDENCE
            - SECOND_HOME
            - PRIMARY_AND_INVESTMENT
            - INVESTMENT
          example: PRIMARY_RESIDENCE
        dispositionType:
          type: string
          description: Disposition type
          enum:
            - RETAIN_FOR_PRIMARY_OR_SECONDARY_RESIDENCE
            - RETAIN_FOR_RENTAL
            - PENDING_SALE
            - SOLD
          example: PENDING_SALE
        address:
          $ref: '#/components/schemas/ConsumerLendingAddressSchema'
        presentMarketValue:
          type: number
          description: Present market value
        monthlyMortgagePayments:
          type: array
          items:
            type: number
          description: Monthly mortgage payments
          example:
            - 875
            - 230
        mortgageBalance:
          type: number
          description: Mortgage balance
          example: 21000
        grossRentalIncome:
          type: number
          description: Gross rental income
          example: 340
    ConsumerLendingEmploymentOwnershipSchema:
      type: object
      description: Employer ownership
      properties:
        ownershipType:
          type: string
          description: Ownership type
          enum:
            - Sole Proprietor
            - LLC
            - S-Corp
            - C-Corp
            - Partnership
          example: LLC
        ownershipPercentage:
          type: number
          description: Ownership percentage
          example: 100
    ConsumerLendingIncomeSchema:
      type: object
      description: Income
      properties:
        type:
          type: string
          enum:
            - BASE
            - BONUS
            - OVERTIME
            - COMMISSIONS
            - SOCIAL_SECURITY
            - PENSION
            - ALIMONY
            - ANNUITY
            - DEFERRED_COMPENSATION
            - DIVIDENDS_INTEREST
            - OTHER
          example: BASE
        yearlyIncome:
          type: number
          description: Yearly income
          example: 80000
        description:
          type: string
          description: Description of income source
          example: Employment income
    ConsumerLendingEmployerSchema:
      type: object
      description: Employer
      required:
        - status
        - address
      properties:
        status:
          type: string
          enum:
            - CURRENT
            - PREVIOUS
          example: CURRENT
        type:
          type: string
          enum:
            - GENERAL_EMPLOYMENT
            - MILITARY
            - SELF_EMPLOYED
            - INDEPENDENT_CONTRACTOR
          example: GENERAL_EMPLOYMENT
        name:
          type: string
        employerSEGCode:
          type: string
          description: Employer SEG code
        address:
          $ref: '#/components/schemas/ConsumerLendingAddressSchema'
        phoneNumber:
          type: number
        title:
          type: string
        startDate:
          type: string
          format: date-time
          description: Start date in ISO 8601 format
          example: '2020-01-01T00:00:00.000Z'
        endDate:
          type: string
          format: date-time
          description: End date in ISO 8601 format
          example: '2021-03-31T00:00:00.000Z'
        hoursPerWeek:
          type: number
          description: Hours per week
        monthsOnJob:
          type: number
          description: Number of months on the job
        yearsInProfession:
          type: number
          description: Number of years in profession
        ownership:
          type: object
          $ref: '#/components/schemas/ConsumerLendingEmploymentOwnershipSchema'
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingIncomeSchema'
    ConsumerLendingLiabilitySchema:
      type: object
      description: Liability
      required:
        - type
        - monthlyPayment
        - monthsLeftToPay
        - unpaidBalance
      properties:
        type:
          type: string
          enum:
            - ALIMONY
            - CHILD_SUPPORT
            - SEPARATE_MAINTENANCE_PAYMENT
          example: CHILD_SUPPORT
        monthlyPayment:
          type: number
          description: Monthly payment
          example: 2500
        monthsLeftToPay:
          type: number
          description: Months left to pay
          example: 24
        unpaidBalance:
          type: number
          description: Unpaid balance
          example: 60000
    ConsumerLendingDeclarationSchema:
      type: object
      description: Declaration
      required:
        - type
      properties:
        type:
          type: string
          example: US_CITIZEN
        indicator:
          type: boolean
        explanation:
          type: string
        spouseAddress:
          $ref: '#/components/schemas/PartialAddressSchema'
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        suffixName:
          type: string
    ConsumerLendingBorrowerSchema:
      type: object
      description: Borrower
      required:
        - id
        - type
        - name
        - email
        - phoneNumbers
      properties:
        id:
          type: string
          format: guid
          description: Borrower ID
          example: 52843951-c41f-44b7-a33c-2e499ce75029
        memberId:
          type: string
          description: Member ID
        type:
          type: string
          description: Borrower type
          enum:
            - BORROWER
            - COBORROWER
          example: BORROWER
        name:
          $ref: '#/components/schemas/ConsumerLendingNameSchema'
        email:
          type: string
          example: borrower@mail.com
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingPhoneNumberSchema'
        birthDate:
          type: string
          format: date-time
          description: Birth date in ISO 8601 format
          example: '1990-11-11T00:00:00.000Z'
        ssn:
          type: string
          description: Social Security Number
          example: 123-45-6789
        creditReport:
          type: string
          description: Credit report
          example: <xml>...</xml>
        identityEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingIdentityEvaluationSchema'
        citizenshipStatus:
          type: string
          enum:
            - US_CITIZEN
            - PERMANENT_RESIDENT_ALIEN
            - NON_PERMANENT_RESIDENT_ALIEN
          example: US_CITIZEN
        maritalStatus:
          type: string
          description: Marital Status
          enum:
            - MARRIED
            - NOT_PROVIDED
            - SEPARATED
            - UNKNOWN
            - UNMARRIED
          example: UNMARRIED
        residences:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingResidenceSchema'
        ownedProperties:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingOwnedPropertySchema'
        employers:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingEmployerSchema'
        otherIncomes:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingIncomeSchema'
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingLiabilitySchema'
        declarations:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingDeclarationSchema'
        consentToLenderContactGiven:
          type: boolean
          description: If set to true, consent is given to lender contact
          example: false
        econsent:
          $ref: '#/components/schemas/EconsentSchema'
        creditConsent:
          $ref: '#/components/schemas/EconsentSchema'
        creditConsentSoft:
          $ref: '#/components/schemas/EconsentSchema'
    ConsumerLendingProductId:
      type: string
      description: The product id for the associated loan
      example: b2006a70-a19b-4b7f-973d-3a561e159060
    ConsumerLendingLoanIdentifiersSchema:
      type: object
      properties:
        losId:
          $ref: '#/components/schemas/LosId'
        crmId:
          $ref: '#/components/schemas/CrmId'
        referenceNumber:
          $ref: '#/components/schemas/ReferenceNumber'
    ConsumerLendingLoanType:
      type: string
      enum:
        - AUTO
        - SPECIALTY_VEHICLE
        - PERSONAL_LOAN
        - PERSONAL_LOC
        - CREDIT_CARD
      example: AUTO
    ConsumerLendingLoanPurposeType:
      type: string
      enum:
        - PURCHASE
        - REFINANCE
        - LEASE_BUYOUT
        - FUTURE_USE
        - DEBT_CONSOLIDATION
        - HOME_IMPROVEMENT
        - MEDICAL_EXPENSES
        - OTHER
        - LIVING_EXPENSES
        - CASH_NEED
        - EDUCATION_EXPENSES
        - ESTABLISH_CREDIT
        - FAMILY_EVENT
        - GIFT
        - MAJOR_PURCHASES
        - MEDICAL_NURSING_CARE
        - TAXES_LEGAL_FEES
        - VACATION_TRIP
        - VEHICLE_REPAIR
      example: PURCHASE
    ConsumerLendingRefinanceType:
      type: string
      description: Only applicable if loanPurposeType is REFINANCE
      enum:
        - LOAN
        - CASH_OUT
      example: LOAN
    ConsumerLendingCollateralSchema:
      type: object
      properties:
        type:
          type: string
          enum:
            - CD
            - SAVINGS
            - AUTO
            - SPECIALTY_VEHICLE
            - STOCK
          example: AUTO
        primary:
          type: boolean
        vehicle:
          $ref: '#/components/schemas/ConsumerLendingVehicleSchema'
        account:
          $ref: '#/components/schemas/ConsumerLendingAccountSchema'
    ConsumerLendingAccountSchema:
      type: object
      properties:
        accountNumber:
          type: string
        holdAmount:
          type: number
          example: 4320.75
    ConsumerLendingVehicleSchema:
      type: object
      properties:
        condition:
          type: string
          enum:
            - NEW
            - USED
          example: NEW
        purchaseLocation:
          type: string
          enum:
            - DEALERSHIP
            - PRIVATE_PARTY
          example: DEALERSHIP
        category:
          type: string
          enum:
            - BOAT
            - RV
            - POWERSPORT
          example: POWERSPORT
        type:
          type: string
          enum:
            - MOTORHOME
            - TRAVEL_TRAILER
            - CAMPING_TRAILER
            - TRUCK_CAMPER
            - PARK_MODEL
            - UTILITY_SPECIALTY_TRAILER
            - BOAT
            - PERSONAL_WATERCRAFT
            - OUTBOARD_MOTOR
            - BOAT_TRAILER
            - MOTORCYCLE
            - ATV
            - MOTORCYCLE_SIDE_CAR
            - SNOWMOBILE
            - MOTORCYCLE_TRAILER
            - SCOOTER
            - UTV
          example: ATV
        year:
          type: number
          example: 2002
        make:
          type: string
          example: Honda
        model:
          type: string
          example: Civic
        trim:
          type: string
          example: EX
        mileage:
          type: number
          example: 125000
        valuation:
          type: number
          description: The property's value in dollars and cents
          example: 3400.75
        identificationNumber:
          type: string
        salesPrice:
          description: Sales price for the loan
          type: number
          example: 14500
    ConsumerLendingApplicationDecisionSchema:
      type: object
      description: Application decision
      required:
        - updatedDate
        - status
        - source
      properties:
        updatedDate:
          type: string
          format: date-time
          example: '2021-05-11T10:45:23.456Z'
        status:
          type: string
          enum:
            - APPROVE
            - IN_REVIEW
            - DECLINE
          example: APPROVE
        source:
          type: string
          enum:
            - EXTERNAL
            - CREDIT
            - DMS
            - IDV
          example: IDV
        amount:
          type: number
          example: 100000.5
        apr:
          type: number
          example: 4.75
        monthlyPayment:
          type: number
          example: 2530.75
        termMonths:
          type: number
          example: 120
        productOffering:
          type: string
        policySnapshot:
          type: object
        attributes:
          type: object
        result:
          type: object
    ConsumerLendingApplicationSchema:
      type: object
      description: A consumer lending application
      required:
        - id
        - loanType
        - borrowers
      properties:
        id:
          $ref: '#/components/schemas/ApplicationId'
        productId:
          $ref: '#/components/schemas/ConsumerLendingProductId'
        applicationStatus:
          type: string
          description: An enum for the status of the application.
          enum:
            - LENDER_SETUP
            - IN_PROGRESS
            - SUBMITTED
            - FOLLOW_UP_ONLY
            - TAKEN_OVER
            - CLOSED
            - DENIED
          example: SUBMITTED
        loanIdentifiers:
          $ref: '#/components/schemas/ConsumerLendingLoanIdentifiersSchema'
        loanType:
          $ref: '#/components/schemas/ConsumerLendingLoanType'
        loanPurposeType:
          $ref: '#/components/schemas/ConsumerLendingLoanPurposeType'
        refinanceType:
          $ref: '#/components/schemas/ConsumerLendingRefinanceType'
        borrowers:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingBorrowerSchema'
        loanAmount:
          $ref: '#/components/schemas/LoanAmount'
        loanTermMonths:
          type: number
          description: The term of the loan in months
          example: 36
        isFlexibleLoanTerms:
          type: boolean
          description: Whether the applicant is flexible in their loan amount and terms
          example: false
        autopayFromChecking:
          type: boolean
          description: >-
            Whether the applicant wants to setup autopay from their checking
            account
          example: false
        lender:
          type: string
        collaterals:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerLendingCollateralSchema'
        primaryAssignedLoanOfficer:
          type: object
          properties:
            fullName:
              type: string
              example: Michael Henry
            branchId:
              type: string
            employeeId:
              type: string
        decision:
          $ref: '#/components/schemas/ConsumerLendingApplicationDecisionSchema'
        promoCode:
          type: string
        appSource:
          description: >-
            The tag corresponding to a marketing campaign. This identifier can
            be used to gauge which links are most effective within certain
            campaigns.
          type: string
          example: ORGANIC_LEAD
        inLenderNetwork:
          type: boolean
          description: Whether the applicant is in the lenders network
        newRentalLease:
          type: boolean
          description: Whether the applicant has a new rental lease
    RetrieveRonEligibilityPostRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/RonEligibilityAddressSchema'
        titleAgency:
          enum:
            - westcor
            - stewart
            - first american
          type: string
          description: >-
            The title agency involved in the real estate transaction. Blend will
            attempt to look up underwriters working with the provided title
            agency and return eligibility information on whether the
            underwriter(s) will insure RON in the state where the address is
            located. If a title agency is not provided or we're not able to find
            a underwriter match, information on all major underwriters will be
            returned.
        options:
          $ref: '#/components/schemas/RonEligibilityRequestOptions'
    RonEligibilityAddressSchema:
      type: object
      description: >-
        The provided address will be validated via a 3rd party API. If the
        provided address is not found (i.e. invalid address), we will do our
        best to provide eligibility information on parts that we can find. It is
        possible for multiple addresses to be returned in the response if
        provided address is ambiguous. It is possible for a slightly different
        address to be returned if a correction has been made to the original
        address input during validation.
      required:
        - streetAddressLine1
        - city
        - zipCode
        - state
      properties:
        streetAddressLine1:
          type: string
          description: Street address.
          example: 415 Kearny St
        streetAddressLine2:
          type: string
          description: Apartment / unit / suite number or other address designations.
          example: ste 201, 2nd floor
        city:
          type: string
          example: San Francisco
        state:
          type: string
          description: Two-character US state code.
          example: ca
        countyName:
          type: string
          example: San Francisco
        zipCode:
          type: string
          description: Five-digit US zip code.
          example: '94108'
    RonEligibilityRequestOptions:
      type: object
      description: Request configuration options.
      properties:
        match:
          type: string
          enum:
            - loose
            - strict
          description: >-
            The address matching type. Defaults to 'loose' if not provided.
            'loose' uses a relaxed matching algorithm during address validation.
            Will attempt to return a validated address match for invalid address
            inputs. 'strict' uses a more aggressive matching algorithm during
            address validation. Will not return a validated address match for
            invalid address inputs.
    RetrieveRonEligibilityResponse:
      type: object
      properties:
        addressesWithEligibility:
          type: array
          items:
            $ref: '#/components/schemas/AddressRonEligibilityResponse'
    UnderwritersRonEligibilityResponseObject:
      type: object
      properties:
        name:
          type: string
          description: Name of the underwriter entity
          example: westcor
        eligibility:
          $ref: '#/components/schemas/RonEligibility'
        allowsOutOfStateNotary:
          type: boolean
          description: >-
            Whether the underwriter will recognize a RON for a property that
            will be performed by a notary who is commissioned in a state outside
            of where the property is located.
          example: true
    AddressRonEligibilityResponse:
      type: object
      description: >-
        Can return multiple addresses if original input is ambiguous. If
        provided address cannot be validated, original address input will be
        returned.
      required:
        - underwriters
        - countyEligibility
        - stateEligibility
        - streetAddressLine1
        - city
        - state
        - countyName
        - countyFIPS
        - zipCode
      properties:
        underwriters:
          type: array
          items:
            $ref: '#/components/schemas/UnderwritersRonEligibilityResponseObject'
        countyEligibility:
          $ref: '#/components/schemas/RonEligibility'
        stateEligibility:
          $ref: '#/components/schemas/RonEligibility'
        streetAddressLine1:
          type: string
          description: Street address
          example: 415 Kearny St
        streetAddressLine2:
          type: string
          description: Apartment / unit / suite number or other address designations
          example: ste 201, 2nd floor
        city:
          type: string
          example: San Francisco
        state:
          type: string
          description: Two-character US state code
          example: ca
        countyName:
          type: string
          description: >-
            If the county name is provided in the request, the address will not
            be validated. We will directly look up the eligibility of the state
            and county provided in the request.
          example: San Francisco
        countyFIPS:
          type: string
          description: Five-digit US county code
          example: '06075'
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '94108'
    RonEligibility:
      type: string
      enum:
        - ELIGIBLE
        - INELIGIBLE
        - UNKNOWN
      description: >-
        There are different components to look at to determine eligibility for a
        RON closing (i.e. state, county, underwriter), this describes the
        eligibility of a specific RON eligibility component. Possible options
        include: 'ELIGIBLE' - The component is eligible for a RON closing.
        'INELIGIBLE' - The component is NOT eligible for a RON closing.
        'UNKNOWN' - There is not enough information to determine whether the
        component is eligible or not. 
      example: ELIGIBLE
    VerifiedIncomePayBreakdown:
      type: object
      description: Object describing a detailed breakdown of payment for a verified income.
      required:
        - earningType
        - amount
      properties:
        earningType:
          type: string
          enum:
            - REGULAR
            - OVERTIME
            - BONUS
            - COMMISSIONS
            - PENSION
            - PTO
            - SEVERANCE
            - SICK
            - 3PSP
            - STOCKS
            - TIPS
            - WORKERS_COMPENSATION
            - MISCELLANEOUS
            - OTHER
            - UNKNOWN
        amount:
          type: string
          description: Payment value received for the earning type.
        description:
          type: string
          description: Description for pay breakdown detail
        hoursWorked:
          type: string
          description: Number of hours worked
        payRate:
          type: string
          description: Rate of pay for the pay breakdown detail
        payRateUnit:
          description: Rate of pay for the pay breakdown detail
          $ref: '#/components/schemas/VerifiedIncomePayRateUnit'
      example:
        earningType: REGULAR
        amount: '569.2'
        description: Regular payment for full-time
        hoursWorked: '40'
        payRate: '14.23'
        payRateUnit: HOUR
    VerifiedIncomeAddress:
      type: object
      required:
        - streetAddressLine1
        - city
        - state
        - zipCode
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          type: string
          description: Two-character US state code
          example: IL
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
        zipCodePlusFour:
          type: string
          description: Four-digit additional US zip code numbers
          example: '1000'
        countyName:
          type: string
          description: County name
          example: Cook County
    VerifiedIncome:
      type: object
      required:
        - stableId
        - id
        - asOf
        - verifiedAt
        - gseRepAndWarrantReliefEligible
        - employee
        - employment
        - payRate
        - yearlySummaries
      properties:
        stableId:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          description: >-
            A unique ID for the original version of this verified income in case
            of reverifications.
          example: 0dc7c7ed-18c8-409a-952c-6bb17ba9a7b6
        id:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          description: A unique ID for this verified income.
          example: 0dc7c7ed-18c8-409a-952c-6bb17ba9a7b7
        asOf:
          type: string
          format: date-time
          description: >-
            Latest updated timestamp for this income's data from our payroll
            providers.
          example: '2021-03-14T18:48:41.305Z'
        verifiedAt:
          type: string
          format: date-time
          description: Timestamp of verification of this income.
          example: '2022-03-14T18:48:41.305Z'
        gseRepAndWarrantReliefEligible:
          type: boolean
          description: Whether the under the hood payroll provider is GSE eligible.
          example: true
        employee:
          $ref: '#/components/schemas/VerifiedIncomeEmployee'
        employment:
          $ref: '#/components/schemas/VerifiedIncomeEmployment'
        payRate:
          $ref: '#/components/schemas/VerifiedIncomePayRate'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedIncomePayment'
        yearlySummaries:
          type: array
          items:
            $ref: '#/components/schemas/VerifiedIncomeYearlySummary'
        computedData:
          description: BlendInsights© computed fields
          type: object
          required:
            - yearlyBaseIncomeFromLatestPayRate
            - yearlyTotalIncomeFromLatestPayRate
            - payRateDisplay
          properties:
            yearlyBaseIncomeFromLatestPayRate:
              type: string
              description: Yearly base income calculated from the latest pay rate data
              example: '1232.1'
            yearlyTotalIncomeFromLatestPayRate:
              type: string
              description: >-
                Yearly base income calculated from the latest pay rate data +
                totals from latest year annual income summaries
              example: '1232.1'
            payRateDisplay:
              type: string
              description: >-
                A string representation of the base pay rate for display
                purposes
              example: $45/biweekly
            hoursWorkedPerWeek:
              type: string
              description: >-
                Hours per week derived from hours per pay period and the pay
                frequency
              example: '88.2'
      example:
        stableId: a9a991e3-a842-43ee-a8a5-c65769c0624f
        id: a9a991e3-a842-43ee-a8a5-c65769c0624f
        asOf: '2022-03-14T21:58:16.317849Z'
        verifiedAt: '2022-03-14T21:58:17.394376Z'
        employee:
          firstName: Tanya
          middleName: M
          lastName: Williams
          address:
            streetAddressLine1: 415 Kearny St
            streetAddressLine2: 5th Floor
            streetAddressAdditionalLines:
              - Suite 5000
            city: San Francisco
            state: CA
            zipCode: '94108'
        employment:
          effectiveDate: '2022-03-14T21:58:16.317837Z'
          jobTitle: Manager
          employmentType: FULL_TIME
          employmentStatus: ACTIVE
          originalHireDate: '2021-03-14T21:58:16.317829Z'
          mostRecentHireDate: '2021-03-14T21:58:16.317829Z'
          employer:
            name: Blend Labs Inc.
            federalEmployerIdentificationNumber: 45-5211045
            address:
              streetAddressLine1: 415 Kearny St
              city: San Francisco
              state: CA
              zipCode: '94108'
        payRate:
          basis: Salary
          basePayRate: '5000'
          basePayFrequency: Monthly
          hoursPerPayPeriod: null
          currencyCode: USD
        computedData:
          yearlyBaseIncomeFromLatestPayRate: '60000'
          yearlyTotalIncomeFromLatestPayRate: '72500'
          payRateDisplay: $5000/monthly
          hoursWorkedPerWeek: '88.2'
        yearlySummaries:
          - year: 2022
            baseIncome: '60000'
            overtimeIncome: '0'
            commissionIncome: '0'
            bonusIncome: '12500'
            otherIncome: '0'
            totalGrossIncome: '72500'
            netPay: null
            currencyCode: USD
          - year: 2021
            baseIncome: '60000'
            overtimeIncome: '0'
            commissionIncome: '0'
            bonusIncome: '60000'
            otherIncome: '0'
            totalGrossIncome: '120000'
            netPay: null
            currencyCode: USD
        gseRepAndWarrantReliefEligible: true
    GetVerifiedIncomeDataResponse:
      type: array
      items:
        type: object
        required:
          - income
          - gseReference
        properties:
          income:
            $ref: '#/components/schemas/VerifiedIncome'
          gseReference:
            type: object
            properties:
              id:
                type: string
                description: >-
                  GSE Ref ID (UUID) with '-ppv' suffix for blend income or
                  'FM-BLND-' prefix for AIM Check
                example:
                  - 0dc7c7ed-18c8-409a-952c-6bb17ba9a7bb-ppv
                  - FM-BLND-0dc7c7ed-18c8-409a-952c-6bb17ba9a7bb
              updatedAt:
                type: string
                format: date-time
                description: >-
                  ISO 8601 timestamp when all six elements required to trigger
                  TRID were deemed to exist in the application on the LOS side.
                example: '2022-03-14T21:58:17.394376Z'
              vendorName:
                description: The name of the vendor that provided the data.
                type: string
                enum:
                  - BLEND
                  - FANNIE
                  - FREDDIE
                example: BLEND
    VerifiedIncomeEmployer:
      type: object
      description: Object describing an employer connected to a Verified Income
      required:
        - name
        - federalEmployerIdentificationNumber
        - address
      properties:
        name:
          type: string
          description: Name of the employer
          example: Blend Labs Inc.
        federalEmployerIdentificationNumber:
          description: >-
            Federal Tax Identification Number (FEIN) is used to identify a
            business entity
          type: string
          example: 45-5211045
        address:
          allOf:
            - $ref: '#/components/schemas/VerifiedIncomeAddress'
            - type: object
              properties:
                streetAddressLine2:
                  type: string
                  description: Additional street address
                  example: 5th Floor
                streetAddressAdditionalLines:
                  type: array
                  description: Additional address like suite etc.
                  example:
                    - Suite 5000
                  items:
                    type: string
    VerifiedIncomePayRate:
      description: An object describing the pay rate for a verified income.
      type: object
      required:
        - basis
        - basePayRate
        - basePayRateUnit
        - basePayFrequency
        - currencyCode
      properties:
        basis:
          $ref: '#/components/schemas/VerifiedIncomePayBasis'
        basePayRate:
          type: string
          description: Payment value received per basePayRateUnit time.
          example: '5000'
        basePayRateUnit:
          $ref: '#/components/schemas/VerifiedIncomePayRateUnit'
        basePayFrequency:
          $ref: '#/components/schemas/VerifiedIncomePayFrequency'
        hoursPerPayPeriod:
          type: number
          example: null
        currencyCode:
          type: string
          description: ISO code for the currency in which pay rate is expressed
          example: USD
    VerifiedIncomePayment:
      type: object
      description: An object containing individual paystubs for a verified income.
      required:
        - payDate
        - basePayFrequency
        - basis
        - basePayRate
        - hoursPerPayPeriod
        - baseIncome
        - overtimeIncome
        - commissionIncome
        - bonusIncome
        - otherIncome
        - netPay
        - totalGrossIncome
        - currencyCode
      properties:
        payDate:
          type: string
          format: date-time
          example: '2021-03-14T18:48:41.305Z'
        payPeriodFrom:
          type: string
          format: date-time
          example: '2021-03-14T18:48:41.305Z'
        payPeriodTo:
          type: string
          format: date-time
          example: '2021-03-14T18:48:41.305Z'
        basePayFrequency:
          $ref: '#/components/schemas/VerifiedIncomePayFrequency'
        basis:
          $ref: '#/components/schemas/VerifiedIncomePayBasis'
        basePayRate:
          type: string
          description: Payment value received per basePayRateUnit time.
          example: '5000'
        hoursPerPayPeriod:
          type: string
          description: Hours worked in this pay period
          example: '102.3'
        baseIncome:
          type: string
          example: '12500'
        overtimeIncome:
          type: string
          example: '0'
        commissionIncome:
          type: string
          example: '0'
        bonusIncome:
          type: string
          example: '60000'
        otherIncome:
          type: string
          example: '0'
        basePayBreakdown:
          type: array
          description: Breakdown of base pay in a paycheck
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        overtimePayBreakdown:
          type: array
          description: Breakdown of overtime pay in a paycheck
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        bonusPayBreakdown:
          type: array
          description: Breakdown of bonus pay in a paycheck
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        otherPayBreakdown:
          type: array
          description: Breakdown of other pay in a paycheck
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        totalGrossIncome:
          type: string
          example: '72500'
        netPay:
          type: string
          example: '72500'
        currencyCode:
          type: string
          description: ISO code for the currency in which yearly summary is expressed
          example: USD
    VerifiedIncomeYearlySummary:
      type: object
      description: >-
        An object containing summaries for a verified income. A verified income
        may contain an array of |- yearly summaries (one for each year the
        employment was active).
      required:
        - year
        - baseIncome
        - overtimeIncome
        - commissionIncome
        - bonusIncome
        - otherIncome
        - totalGrossIncome
        - currencyCode
      properties:
        year:
          type: integer
          example: 2022
        baseIncome:
          type: string
          example: '12500'
        overtimeIncome:
          type: string
          example: '0'
        commissionIncome:
          type: string
          example: '0'
        bonusIncome:
          type: string
          example: '60000'
        otherIncome:
          type: string
          example: '0'
        basePayBreakdown:
          type: array
          description: Breakdown of base pay rolled up to a year
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        overtimePayBreakdown:
          type: array
          description: Breakdown of overtime pay rolled up to a year
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        bonusPayBreakdown:
          type: array
          description: Breakdown of bonus pay rolled up to a year
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        otherPayBreakdown:
          type: array
          description: Breakdown of other pay rolled up to a year
          items:
            $ref: '#/components/schemas/VerifiedIncomePayBreakdown'
        totalGrossIncome:
          type: string
          example: '72500'
        netPay:
          type: string
          example: null
        currencyCode:
          type: string
          description: ISO code for the currency in which yearly summary is expressed
          example: USD
    VerifiedIncomeEmployee:
      type: object
      description: Object describing an employee connected to a Verified Income
      required:
        - firstName
        - lastName
        - address
      properties:
        firstName:
          type: string
          example: Tanya
        middleName:
          type: string
          example: M
        lastName:
          type: string
          example: Williams
        address:
          allOf:
            - $ref: '#/components/schemas/VerifiedIncomeAddress'
            - type: object
              properties:
                streetAddressLine2:
                  type: string
                  description: Additional street address
                  example: 5th Floor
                streetAddressAdditionalLines:
                  type: array
                  description: Additional address like suite etc.
                  example:
                    - Suite 5000
                  items:
                    type: string
    VerifiedIncomePayBasis:
      type: string
      description: >-
        pay basis is a value describing the payment type. This is typically
        either HOURLY or SALARY.
      enum:
        - HOURLY
        - DAILY
        - WEEKLY
        - SALARY
        - COMMISSION_ONLY
      example: Salary
    VerifiedIncomePayFrequency:
      type: string
      enum:
        - HOURLY
        - DAILY
        - WEEKLY
        - BIWEEKLY
        - EVERY_2.6_WEEKS
        - EVERY_4_WEEKS
        - EVERY_5.2_WEEKS
        - SEMIMONTHLY
        - MONTHLY
        - QUARTERLY
        - SEMIANNUALLY
        - ANNUALLY
      example: MONTHLY
    VerifiedIncomePayRateUnit:
      type: string
      description: The unit for basePayRate.
      enum:
        - HOUR
        - DAY
        - PAY_PERIOD
        - WEEK
        - 2_WEEKS
        - SEMI_MONTH
        - MONTH
        - YEAR
        - UNKNOWN
      example: 2_WEEKS
    VerifiedIncomeEmployment:
      type: object
      description: Object describing a Verified Employment
      required:
        - id
        - employer
      properties:
        id:
          type: string
          description: Unique identifier for the employment (UUID)
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        jobTitle:
          type: string
          example: Avenger
        employmentType:
          type: string
          example: Full-time
        employmentStatus:
          type: string
          example: ACTIVE
        effectiveDate:
          type: string
          format: date-time
          example: '2010-03-14T21:58:16.317837Z'
        originalHireDate:
          type: string
          format: date-time
          example: '2010-03-14T21:58:16.317837Z'
        mostRecentHireDate:
          type: string
          format: date-time
          example: '2010-03-14T21:58:16.317837Z'
        terminationDate:
          type: string
          format: date-time
          example: '2010-03-14T21:58:16.317837Z'
        employer:
          $ref: '#/components/schemas/VerifiedIncomeEmployer'
    PostIncomeVerificationRequest:
      type: object
      required:
        - partyId
        - operation
      properties:
        partyId:
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          description: Identifier for the party associated with the application
        operation:
          type: string
          description: >-
            Whether to perform an initial verification of income or a
            reverification.
          enum:
            - VERIFY_INCOME_AND_EMPLOYMENT
            - REVERIFY_INCOME_AND_EMPLOYMENT
            - REVERIFY_EMPLOYMENT_ONLY
          example: VERIFY_INCOME_AND_EMPLOYMENT
    PostIncomeVerificationResponse:
      type: object
      required:
        - id
        - applicationId
        - voiConsent
      properties:
        id:
          type: string
          description: A unique Id for the income verification request
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          example: 9b27683a-a664-445d-8a88-7d22e5cb7000
        applicationId:
          type: string
          description: A unique Id for the application for which the income was verified
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          example: 0dc7c7ed-18c8-409a-952c-6bb17ba9a7b5
        voiConsent:
          type: object
          required:
            - status
          properties:
            status:
              type: string
              description: State of voiConsent
              enum:
                - NOT_RECEIVED
                - ACCEPTED
                - DECLINED
              example: ACCEPTED
            date:
              type: string
              format: date-time
              description: >-
                UTC Timestamp of when voiConsent was given. Optional. Null is an
                acceptable value.
              example: '2018-08-30T19:31:38.902Z'
            ip:
              type: string
              description: >-
                IP Address from which voiConsent was given. Optional. Null is an
                acceptable value.
              example: 8.8.8.8
    GetIncomeVerificationStatusResponse:
      type: object
      required:
        - status
        - partyId
      properties:
        status:
          type: string
          description: Status of verification job.
          enum:
            - PROCESSING
            - COMPLETED
            - FAILED
          example: COMPLETED
        partyId:
          type: string
          description: Identifier for the party associated with the verification
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          example: 4cbc8496-8326-4aa5-b426-b5ab6cb5d152
    OAuthTokenRequestSchema:
      type: object
      description: Client credentials needed to generate a new OAuth token
      required:
        - client_id
        - client_secret
        - grant_type
      properties:
        client_id:
          type: string
          description: The ID of the user making API requests
        client_secret:
          type: string
          description: The password of the user making API requests
        grant_type:
          type: string
          enum:
            - client_credentials
          description: The OAuth grant type (should be client_credentials)
    OAuthTokenResponseSchema:
      type: object
      description: Response containing new OAuth Token
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: The OAuth Token
        token_type:
          type: string
          enum:
            - Bearer
          description: The type of token returned (i.e., Bearer)
        expires_in:
          type: number
          description: The number of seconds until the token expires
    OAuthErrorSchema:
      type: object
      description: Error that conforms to OAuth standards
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - access_denied
            - invalid_request
            - invalid_grant
            - invalid_client
            - invalid_ip
            - invalid_scope
            - unsupported_response_type
            - unsupported_grant_type
            - server_error
          description: The OAuth error code
    CurrentUser:
      type: object
      properties:
        isAuthenticated:
          description: User authentication result
          type: boolean
          example: true
    LendingLenderRecordSchema:
      type: object
      allOf:
        - type: object
          required:
            - name
            - email
            - permittedLoanTypes
            - loginMethod
            - roleNames
          properties:
            name:
              type: string
              description: Lender Full Name
              example: Joe Lender
            email:
              type: string
              description: Lender Email
              example: joe.lender@example.com
            permittedLoanTypes:
              type: array
              description: Loan Types Permitted
              items:
                $ref: '#/components/schemas/SolutionSubType'
            requireTwoFactorAuth:
              type: boolean
              description: MFA Required
              example: true
            loginMethod:
              $ref: '#/components/schemas/LoginMethod'
            roleNames:
              type: array
              description: Roles for Lender
              items:
                type: string
                description: Role Name
                example: Loan Officer
            phone:
              type: object
              properties:
                number:
                  type: string
                  description: Phone Number
                  example: '1112223333'
                extension:
                  type: string
                  description: Phone Extension
                  example: '1234'
            nmlsId:
              type: string
              description: Nationwide Multistate Licensing System ID number
              example: '39179'
            losUsername:
              type: string
              description: Lender's LOS Username
              example: joelender
            employeeId:
              type: string
              description: Lender's Employee Id
              example: '12314'
            branchId:
              type: string
              description: Lender's Branch Id
        - type: object
          required:
            - id
            - status
            - requireTwoFactorAuth
          properties:
            id:
              type: string
              description: Lender ID
              example: 9250f84b-c2a1-4cab-b265-bd720685c361
            status:
              $ref: '#/components/schemas/UserState'
    LoanId:
      type: string
      format: uuid
      description: >-
        The UUID of the loan in Blend's system. The static identifier that
        should be used to connect the loan's identity across Blend and external
        integrations.
      example: aa9fdaa2-7bf3-4411-a836-c2a46117f5c3
    LendingReferenceNumber:
      type: string
      description: >-
        A mutable identifier of the loan. Not safe to use to connect the loan's
        identity across Blend and external systems because it can, and for most
        implementations, will change. Default value is an incremented ID set by
        Blend. Other Values could be LOS GUID after export of the loan to LOS
        (may be the same as the losID field or different), Can be manually set
        to anything by lenders in the UI or programmatically via the API.
      example: 124123
      minLength: 1
    LendingLosId:
      type: string
      description: >-
        The UUID or GUID of the loan in the LOS AFTER initial export to the LOS.
        May match the Loan reference number depending on the LOS and if the
        customer has selected to use only GUIDs instead of UUIDs in their LOS
        settings.
      example: Loan-12391
      minLength: 1
    LendingCrmId:
      type: string
      description: >-
        The unique identifier of the loan in a lender's Customer Relationship
        Management system, or CRM (e.g. Salesforce, Velocify etc.). This value
        should not change over time and should be used to connect the loan's
        identity between Blend and the CRM.
      example: crmLead1
      minLength: 1
    LendingBorrowerPairSchema:
      $ref: '#/components/schemas/BorrowerPairs'
    BorrowerPairs:
      type: object
      required:
        - primaryBorrowerId
      properties:
        primaryBorrowerId:
          type: string
          minLength: 1
          format: uuid
          description: First applicant on a specific 1003
          example: 1001db24-14b2-4179-8e1e-08bbb2fb94b3
        secondaryBorrowerId:
          type: string
          minLength: 1
          format: uuid
          description: Second applicant on a specific 1003
          example: 56632a12-1bd7-4014-8571-cff53c346738
    LendingAddressSchema:
      type: object
      required:
        - streetAddressLine1
        - city
        - state
        - zipCode
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          nullable: true
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          anyOf:
            - type: string
              description: Two-digit US state code
              example: IL
              pattern: ^[A-Z]{2}$
            - type: string
              maxLength: 0
        zipCode:
          type: string
          description: Five-digit US zip code
          example: '60007'
          pattern: ^[\d]{5}$
        zipCodePlusFour:
          anyOf:
            - type: string
              nullable: true
              description: Four-digit additional US zip code numbers
              example: '1000'
              pattern: ^[\d]{4}$
            - type: string
              maxLength: 0
    AddressSchemaOptional:
      type: object
      properties:
        streetAddressLine1:
          type: string
          example: 100 Main St
        streetAddressLine2:
          type: string
          nullable: true
          example: Apt 10
        city:
          type: string
          example: Chicago
        state:
          type: string
          example: IL
          pattern: ^[A-Z]{2}$
        zipCode:
          type: string
          example: '60007'
          pattern: ^[\d]{5}$
        zipCodePlusFour:
          type: string
          nullable: true
          example: '1000'
          pattern: ^[\d]{4}$
    LoanRequestBorrowerSchema:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: object
          $ref: '#/components/schemas/LendingNameSchema'
        email:
          type: string
          format: idn-email
          example: johnhernandez@mail.com
        SSN:
          type: string
          pattern: ^[\d]{9}$
          minLength: 1
          description: Social security number, needs to be nine characters
          example: '000113933'
        dateOfBirth:
          type: string
          description: ISO Timestamp of Date of Birth
          example: '2018-10-03T20:07:27+00:00'
        homePhone:
          type: integer
          description: Nine-digit home phone number
          example: '1112223333'
        currentAddress:
          $ref: '#/components/schemas/AddressSchemaOptional'
    LoanSchema:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/LoanId'
        referenceNumber:
          $ref: '#/components/schemas/LendingReferenceNumber'
        losId:
          $ref: '#/components/schemas/LendingLosId'
        crmId:
          $ref: '#/components/schemas/LendingCrmId'
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        borrowers:
          type: array
          items:
            required:
              - name
              - type
            properties:
              name:
                type: string
              type:
                type: string
                enum:
                  - BORROWER
                  - COBORROWER
        propertyAddress:
          $ref: '#/components/schemas/AddressSchemaOptional'
        loanOriginator:
          type: object
          properties:
            email:
              type: string
              description: Loan originator email
              example: lo@mortgage.com
        leadId:
          type: string
          description: Loan lead id
          example: lead134912
    LoanRequestSchema:
      type: object
      required:
        - borrower
      properties:
        loanType:
          $ref: '#/components/schemas/SolutionSubType'
        applicationType:
          type: string
          description: Loan application type enum
          enum:
            - FULL_APPLICATION
            - LENDER_ENTERED
            - POST_SUBMISSION
        loanPurposeType:
          type: string
          description: Loan purpose type enum
          enum:
            - PURCHASE
            - REFINANCE
        propertyType:
          description: Property type enum
          type: string
          enum:
            - SINGLE_FAMILY
            - CONDOMINIUM
            - TOWNHOUSE
            - COOPERATIVE
        propertySearchType:
          type: string
          description: Property search type enum
          enum:
            - NOT_STARTED
            - STILL_LOOKING
            - FOUND
            - NOT_IN_CONTRACT
        propertyUsageType:
          type: string
          description: Property usage type enum
          enum:
            - PRIMARY_RESIDENCE
            - SECOND_HOME
            - INVESTMENT
        loanAmount:
          type: number
          example: 100000
        propertyValue:
          type: number
          example: 200000
        propertyAddress:
          $ref: '#/components/schemas/LendingAddressSchema'
        borrower:
          $ref: '#/components/schemas/LoanRequestBorrowerSchema'
        leadId:
          description: Loan lead id
          type: string
          example: leadId1
        crmId:
          $ref: '#/components/schemas/LendingCrmId'
        losId:
          $ref: '#/components/schemas/LendingLosId'
        referenceNumber:
          $ref: '#/components/schemas/LendingReferenceNumber'
        redirect:
          type: boolean
          default: false
        referrerEmail:
          description: >-
            Email of referring loan officer, automatically assigns the loan
            officer to the loan
          type: string
          example: loanOfficer@bank.com
        sendEmailInvite:
          description: If true, sends email invite for borrower to start the loan
          type: boolean
          default: false
        applicationTemplateId:
          description: Application template to apply to loan
          type: string
          example: fd658b97-f901-4b14-b693-4654d276c909
        applicationSource:
          description: Source of where the loan application came from.
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - LOS
                - CRM
                - Other
              description: >-
                Type of system the application came from. If set to Other, it is
                recommended to also set a name.
            name:
              type: string
              maxLength: 15
              description: Name of the system. For example, Salesforce or Empower.
    Base64LoanData:
      type: string
      format: byte
      example: >-
        
    LendingNameSchema:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          example: John
          pattern: ^[^\.]*$
        middleName:
          type: string
          example: M
        lastName:
          type: string
          minLength: 1
          example: Doe
          pattern: ^[^\.]*$
        suffixName:
          type: string
          example: III
    NameSchemaAllowPeriodsOptional:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          nullable: true
          example: John
        middleName:
          type: string
          nullable: true
          example: M
        lastName:
          type: string
          minLength: 1
          nullable: true
          example: Doe
        suffixName:
          type: string
          nullable: true
          example: III
    LendingDocumentRequestSchema:
      type: object
      required:
        - loanId
      properties:
        loanId:
          $ref: '#/components/schemas/LoanId'
        type:
          $ref: '#/components/schemas/LendingDocumentType'
        losType:
          type: string
          description: LOS document type (used with Blend document templating)
          example: Verification_of_Income_type
        losTypeId:
          type: string
          description: LOS document id
          example: '12313'
        borrowerIds:
          type: array
          items:
            type: string
            example: 82479d45-e4c9-4e1a-bfb5-28a7c6160f67
        name:
          type: string
          example: VerificationOfIncome.pdf
        status:
          type: string
          enum:
            - SIGNATURE_REQUESTED
            - READY
          example: SIGNATURE_REQUESTED
    LendingDocumentSchema:
      type: object
      required:
        - loanId
      properties:
        id:
          type: string
          description: Document Id
          example: 528e481b-19b7-4e81-a49e-bbb8258e308d
        name:
          type: string
          description: Document Filename
          example: Paystub.pdf
        type:
          $ref: '#/components/schemas/LendingDocumentType'
        loanId:
          $ref: '#/components/schemas/LoanId'
        losType:
          type: string
          description: LOS document type (used with Blend document templating)
          example: PAYSTUB_DOC
        losTypeId:
          type: string
          description: LOS document id
        created:
          type: string
          format: date-time
          description: ISO Timestamp of document creation
          example: '2018-10-02T20:07:27+00:00'
        borrowerIds:
          type: array
          items:
            type: string
            example: 18c3e52a-c7e7-4c6d-a36f-d5bca568613a
        downloadUrl:
          type: string
          description: Document url
          example: >-
            https://api.blendlabs.com/documents/eba0d438-0748-4296-b369-c98210e537f7
        losExportedAt:
          type: string
          format: date-time
          nullable: true
          description: ISO Timestamp of last export for document
          example: '2018-10-02T20:07:27+00:00'
        losLoanId:
          type: string
    LendingExportStatusSchema:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Export status
          enum:
            - IN_PROGRESS
            - FAILED
            - SUCCESS
            - UNABLE_TO_EXPORT
            - ABLE_TO_EXPORT
            - READY_TO_EXPORT
        reason:
          type: string
          description: Explanation for status
          example: import failed on los
    ExportStatusRecordSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/LendingExportStatusSchema'
        - type: object
          required:
            - loanId
          properties:
            loanId:
              $ref: '#/components/schemas/LoanId'
            lastUpdated:
              type: string
              format: date-time
              description: Timestamp of last update to status
              example: '2018-08-30T19:31:38.902Z'
    ExportStatusErrorSchema:
      type: object
      required:
        - loanId
        - code
        - reason
      properties:
        loanId:
          type: string
          description: Relevant loan ID
          example: 29526148-296e-477d-8a61-5eceb51f4075
        code:
          type: number
          example: 409
        reason:
          type: string
          example: Invalid lender params.
    LendingLosMilestoneSchema:
      type: object
      properties:
        losMilestone:
          type: string
          description: >-
            ENUM describing that status of the application. The following
            milestones can be configured to be displayed to the Borrower on
            their landing page after submitting their application in Blend
            (SUBMITTED, PROCESSING, UNDERWRITING, CONDITIONAL APPROVAL,
            APPROVED, CLOSING, CLOSED, FUNDED). The other milestones are only
            visible to the lender application.
          enum:
            - SUBMITTED
            - PREQUALIFIED
            - PREAPPROVED
            - PROCESSING
            - UNDERWRITING
            - CONDITIONAL APPROVAL
            - APPROVED
            - CLOSING
            - CLOSED
            - APPRAISAL ORDERED
            - APPRAISAL RECEIVED
            - CLEAR TO CLOSE
            - DOCS SENT
            - FUNDED
            - SET UP
            - DECISIONED
            - CONDITIONS SUBMITTED
            - APPRAISAL APPROVED
            - RATE LOCKED
            - CLOSING DISCLOSURE SENT
            - DENIED
            - LOAN ESTIMATE SENT
        loanId:
          $ref: '#/components/schemas/LoanId'
    LendingLosMilestoneErrorSchema:
      type: object
      properties:
        loanId:
          $ref: '#/components/schemas/LoanId'
        code:
          type: number
        reason:
          type: string
          example: loan does not exist
    LendingRealtorRequestSchema:
      type: object
      required:
        - loanId
        - name
      properties:
        loanId:
          $ref: '#/components/schemas/LoanId'
        name:
          $ref: '#/components/schemas/LendingNameSchema'
        contact:
          type: object
          properties:
            email:
              type: string
              description: Realtor's email
              example: realtor@email.com
            phoneNumber:
              type: number
              description: Realtor's phone number
              example: 2225557878
    LendingAccountApplicationSchema:
      type: object
      required:
        - _id
        - applicants
        - accounts
        - membershipQualification
      properties:
        _id:
          type: string
          description: Application ID
          example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
        referenceId:
          type: string
          description: Customer reference ID for application
          example: '124123'
        applicants:
          type: array
          description: List of applicants applying to open an account. Maximum of two.
          items:
            $ref: '#/components/schemas/LendingApplicantSchema'
        accounts:
          type: array
          description: List of accounts requested to be opened.
          items:
            $ref: '#/components/schemas/LendingAccountSchema'
        funding:
          type: array
          description: >-
            List of funding sources and amounts to be transferred to new
            accounts.
          items:
            $ref: '#/components/schemas/LendingFundingSchema'
        membershipQualification:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              description: Method of qualification for membership
              example: HOME_ADDRESS
            employerId:
              type: string
              description: >-
                Blend ID of employer object in applicant's employers array.
                Required if qualification is based on employer's address or
                select employee group.
              example: 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70
            accountNumber:
              type: string
              description: Required if qualification is based on current membership.
              example: '111000222'
            familyMemberName:
              type: object
              description: >-
                Required if qualification is based on family or household
                member.
              properties:
                firstName:
                  type: string
                  description: Family or household member's first name.
                  example: Bob
                lastName:
                  type: string
                  description: Family or household member's last name.
                  example: Smith
        debitCardIndicator:
          type: boolean
          description: Indicates whether applicant is requesting a debit card
          example: true
        overdraftPrivilegeIndicator:
          type: boolean
          description: Indicates whether applicant is requesting overdraft privileges
          example: false
        approvalStatus:
          type: string
          description: Status of the application approval process
          enum:
            - APPROVED
            - REFER
            - REJECTED
          example: APPROVED
    LendingAccountSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal account ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        referenceId:
          type: string
          description: External ID or code to reference this account. e.g. share code.
          example: '0051'
        type:
          type: string
          description: Account type
          enum:
            - CHECKING
            - SAVINGS
            - CERTIFICATE_OF_DEPOSIT
            - HEALTH_SAVINGS_ACCOUNT
          example: CHECKING
        description:
          type: string
          description: Additional text describing account
          example: Premium Checking Account
        accountNumber:
          type: number
          description: Account number
          example: 33112244
        routingNumber:
          type: string
          description: Routing number
          example: '00227799'
    LendingApplicantSchema:
      type: object
      required:
        - _id
        - type
        - name
        - phoneNumbers
        - addresses
      properties:
        _id:
          type: string
          description: Applicant ID
          example: 56632a12-1bd7-4014-8571-cff53c346738
        type:
          type: string
          description: Applicant type, primary or secondary
          enum:
            - PRIMARY
            - SECONDARY
            - REJECTED
            - MINOR
          example: PRIMARY
        email:
          type: string
          description: Applicant email address
          example: jane.smith@company.com
        name:
          description: Applicant name
          $ref: '#/components/schemas/NameSchemaAllowPeriodsOptional'
        dateOfBirth:
          type: number
          description: Applicant birth date, UNIX timestamp (milliseconds)
          example: 1537222722246
        socialSecurityNumber:
          type: string
          description: Applicant SSN
          example: '111224444'
        addresses:
          description: List of applicant addresses, current or mailing
          type: array
          items:
            $ref: '#/components/schemas/AccountApplicationAddressSchema'
        phoneNumbers:
          description: List of phone numbers associated with applicant
          type: array
          items:
            required:
              - type
              - value
            properties:
              type:
                type: string
                description: Type of phone number
                enum:
                  - CELL
                  - HOME
                  - WORK
                example: CELL
              value:
                type: number
                description: Phone number
                example: 5551112222
        identityVerification:
          type: object
          description: Information regarding id verification for applicant
          properties:
            _id:
              type: string
              description: Internal ID of idVerification process
              example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
            statusType:
              type: string
              description: Result of identity verification process
              enum:
                - VERIFIED
                - REJECT
                - REVIEW
                - SERVICE_UNAVAILABLE
              example: VERIFIED
            code:
              type: string
              description: Reason code related to verification
              enum:
                - OFAC_MATCH
              example: OFAC_MATCH
            provider:
              type: object
              description: Provider metadata object
              required:
                - _id
              properties:
                _id:
                  type: string
                  description: Internal _id of the provider
                  example: CROSSCORE
                references:
                  type: object
                  description: References to external provider
                  properties:
                    clientReferenceId:
                      type: string
                      description: Unique Id passed to crosscore for referencing
                    expRequestId:
                      type: string
                      description: Id returned from crosscore
        identityDocumentation:
          type: object
          description: ID Document
          required:
            - type
            - value
            - issueDate
            - expiryDate
          properties:
            type:
              type: string
              description: Type of ID document provided by applicant
              enum:
                - DRIVERS_LICENSE
                - DRIVERS_PRIVILEGE_CARD
                - STATE_ID
                - US_PASSPORT
                - US_PASSPORT_CARD
                - MILITARY_ID
                - EMPLOYMENT_AUTHORIZATION_CARD
                - LIMITED_TERM_DRIVERS_LICENSE
                - BORDER_CROSSING_CARD
                - US_PERMANENT_RESIDENT_ALIEN_CARD
                - CANADIAN_DRIVERS_LICENSE
                - CANADIAN_STATE_ID
                - CONSULAR_ID
                - TRIBAL_ID
                - FOREIGN_PASSPORT
              example: US_PASSPORT
            value:
              type: string
              description: ID document number
              example: S123000U
            stateCode:
              type: string
              description: 2-digit code of state that issued the ID document
              example: CA
            issueDate:
              type: number
              description: Date when ID document was issued, UNIX Timestamp (milliseconds)
              example: 1529360743127
            expiryDate:
              type: number
              description: Date when ID document expires, UNIX Timestamp (milliseconds)
              example: 1529360993127
        employers:
          type: array
          description: List of applicant's employers
          items:
            $ref: '#/components/schemas/LendingEmployerSchema'
    LendingEmployerSchema:
      type: object
      required:
        - _id
        - name
      properties:
        _id:
          type: string
          description: Internal employer ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        referenceId:
          type: string
          description: External employer reference ID. e.g. select employee group number.
          example: '243'
        name:
          type: string
          description: Employer name
          example: Blend
        address:
          description: Employer address
          $ref: '#/components/schemas/AccountApplicationAddressSchema'
    LendingFundingSchema:
      type: object
      required:
        - sourceAccount
        - destinationAccount
        - amount
      properties:
        sourceAccount:
          description: Source account used to transfer funds
          $ref: '#/components/schemas/LendingAccountSchema'
        destinationAccount:
          description: Destination account for funds
          $ref: '#/components/schemas/LendingAccountSchema'
        amount:
          type: number
          description: Amount being transferred
          example: 5000
    LendingIntegrationEventSchema:
      type: object
      required:
        - type
        - status
      properties:
        type:
          type: string
          description: The type of integration event which is being completed
          enum:
            - applicationSubmitted
            - accountReadyToFund
          example: applicationSubmitted
        status:
          type: string
          description: The final status of the integration event which is being completed
          enum:
            - SUCCEEDED
            - FAILED_NON_RETRYABLE
            - FAILED_RETRYABLE
          example: SUCCEEDED
        failureCode:
          type: string
          description: Corresponding reason for integration event failure
          enum:
            - CORE_DOWN_FOR_MAINTENANCE
            - PARTIAL_CREATION
            - EXISTING_USER
          example: CORE_DOWN_FOR_MAINTENANCE
        failureMessage:
          type: string
          description: >-
            Message explaining why the integration event failed (It's only
            displayed when a failureCode is not provided)
          example: User already exists in the core
    LendingPatchAccountSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal account ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        accountNumber:
          type: string
          description: Account number of booked account
          example: '33112244'
        routingNumber:
          type: string
          description: Routing number of booked account
          example: '00227799'
    LendingPatchApplicantSchema:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          description: Internal applicant ID
          example: 1239635c-6a0b-406a-85b2-e0e8e23c35db
        memberNumber:
          type: string
          description: Member number of applicant
          example: '9083409234'
    LendingPatchApplicationSchema:
      type: object
      properties:
        referenceId:
          type: string
          description: >-
            Optional reference ID for matching records with Blend's application
            object
          example: 200ABC123
        approvalStatus:
          type: string
          description: Decision regarding opening the account
          enum:
            - APPROVED
            - REFER
            - REJECTED
          example: APPROVED
        accounts:
          type: array
          description: List of accounts with their account/routing numbers
          items:
            $ref: '#/components/schemas/LendingPatchAccountSchema'
        applicants:
          type: array
          description: List of applicants with their member numbers
          items:
            $ref: '#/components/schemas/LendingPatchApplicantSchema'
        integrationEvent:
          $ref: '#/components/schemas/LendingIntegrationEventSchema'
    LendingDocumentType:
      type: string
      description: Blend document type
      enum:
        - '1003'
        - VA_CHILD_CARE_CERTIFICATE
        - LOE_PUBLIC_RECORD:BANKRUPTCY
        - LOE_PUBLIC_RECORD:TAX_LIEN
        - LOE_PUBLIC_RECORD:JUDGMENT
        - LOE_LARGE_DEPOSITS:TRANSFER
        - LOE_LARGE_DEPOSITS:SALE_OF_ASSET
        - LOE_LARGE_DEPOSITS:INCOME
        - LOE_LARGE_DEPOSITS:GIFT
        - LOE_LARGE_DEPOSITS:OTHER
        - LETTER_OF_EXPLANATION:SHORT_SALE
        - BANK_STATEMENT
        - BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT
        - BANK_STATEMENT:_STOCK_ACCOUNT
        - FINANCIAL_STATEMENT:_BALANCE_SHEET
        - FINANCIAL_STATEMENT:_INCOME
        - IRS1040
        - IRS1041
        - IRS1120
        - IRS1120_S
        - LLC_BTR_DOC
        - IRSW2
        - CRAT4
        - 4506t
        - TAX_TRANSCRIPT
        - DOCUSIGN_CERT_OF_COMP
        - DOCUSIGN_ENVELOPE_HISTORY
        - PAY_STUB
        - PROPERTY_INSURANCE_POLICY:_GENERAL
        - PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE
        - PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION
        - PROPERTY_INSURANCE_POLICY:_HOMEOWNERS
        - PROPERTY_INSURANCE_POLICY:_VOLCANO
        - PROPERTY_INSURANCE_POLICY:_FLOOD
        - PROPERTY_INSURANCE_POLICY:_HAZARD
        - INSURANCE_AGENT_CONTACT_INFO
        - ESIGNATURE_CARD
        - DEPOSIT_ACCOUNT_DISCLOSURE
        - DEPOSIT_ACCOUNT_ADVERSE_ACTION_NOTICE
        - PURCHASE_AGREEMENT
        - OTHER_DISCLOSURES
        - REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T
        - RETIREMENT_ACCOUNT_STATEMENT
        - SOCIAL_SECURITY_AWARD_LETTER
        - TRUST_AGREEMENT
        - VERIFICATION_OF_EMPLOYMENT_LETTER
        - VERIFICATION_OF_EMPLOYMENT
        - VERIFICATION_OF_EMPLOYMENT_REVERIFY
        - VERIFICATION_OF_EMPLOYMENT_RETRIEVED
        - VERIFICATION_OF_INCOME
        - PENSION_AWARD_LETTER
        - ANNUITY_AWARD_LETTER
        - DEFERRED_COMPENSATION_AWARD_LETTER
        - VERIFICATION_OF_MORTGAGE_OR_RENT
        - VERIFICATION_OF_RENT
        - VERIFICATION_OF_MORTGAGE
        - RETIREMENT_LIQUIDITY_TERMS
        - LETTER_OF_EXPLANATION:_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT
        - LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION:_JOB_GAP
        - LETTER_OF_EXPLANATION:_LARGE_DEPOSITS
        - PROPERTY_TAX_BILL
        - MORTGAGE_STATEMENT
        - BORROWER_CONSENT_FORM
        - BORROWER_INCOME_VERIFICATION_CONSENT_FORM
        - APPRAISAL_WAIVER
        - INTENT_TO_PROCEED
        - NATIONAL_IDENTIFICATION
        - BORROWER_PHOTO
        - PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN
        - MARRIAGE_CERTIFICATE
        - DEATH_CERTIFICATE
        - DIVORCE_DECREE
        - NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD
        - CONDOMINIUM_OCCUPANCY_CERTIFICATE
        - HOMEOWNERS_ASSOCIATION_CERTIFICATION
        - BANK_DEPOSIT_SLIP
        - PROPERTY_INSURANCE_POLICY:_HURRICANE
        - PROPERTY_INSURANCE_POLICY:_LEASEHOLD
        - PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY
        - PROPERTY_INSURANCE_POLICY:_STORM
        - PROPERTY_INSURANCE_POLICY:_TORNADO
        - PROPERTY_INSURANCE_POLICY:_WIND
        - CREDIT_REPORT
        - CREDIT_REPORT_SOFT
        - PERMANENT_RESIDENT_IDENTIFICATION
        - PROPERTY_INSURANCE_POLICY:_CONDOMINIUM
        - APPRAISAL_REPORT_SINGLE FAMILY
        - APPRAISAL_REPORT_2_-_4_UNIT
        - APPRAISAL_REPORT_MANUFACTURED_HOME
        - APPRAISAL_REPORT_COOP
        - APPRAISAL_REPORT_EXTERIOR_ONLY
        - APPRAISAL_REPORT_AVM
        - APPRAISAL_REPORT_RENT_SURVEY
        - APPRAISAL_REPORT_OPERATING_INCOME_SCHEDULE
        - APPRAISAL_REPORT_MARKET_CONDITIONS_ADDENDUM
        - APPRAISAL_REPORT_UPDATE_AND_OR_COMPLETION_REPORT
        - APPRAISAL_REPORT_PROPERTY_CONDITION_REPORT
        - APPRAISAL_REPORT_DESK_REVIEW
        - SETTLEMENT_STATEMENT_HUD1
        - VISA
        - PASSPORT
        - NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT
        - DD_214
        - VA_STATEMENT_OF_SERVICE
        - VA_CERTIFICATE_OF_ELIGIBILITY
        - CREDIT_AUTHORIZATION
        - CREDIT_CARD_AUTHORIZATION
        - BIRTH_CERTIFICATE
        - INVOICE_UTILITY_BILL
        - ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION_NAME_VARIATION
        - POWER_OF_ATTORNEY
        - RENTAL_AGREEMENT
        - RENTAL_SECURITY_DEPOSIT
        - VERIFICATION_OF_EMPLOYMENT_WRITTEN
        - BUSINESS_LICENSE
        - IRS1099
        - K1
        - IRS1065
        - SOCIAL_SECURITY_PROOF_OF_RECEIPT
        - EMPLOYMENT_OFFER_LETTER
        - RENTAL_INCOME_PROOF_OF_RECEIPT
        - RETIREMENT_AWARD_LETTER
        - VA_AWARD_LETTER
        - BONUS_AND_COMMISSION_DOCUMENTATION
        - CHILD_SUPPORT_INCOME
        - ALIMONY_INCOME
        - CHILD_SUPPORT_LIABILITY
        - ALIMONY_LIABILITY
        - GENERATED_ASSET_STATEMENT
        - PROVIDER_BANK_STATEMENT
        - QA_GAS
        - VALIDATION_ERROR_GAS
        - ACHDEBIT_AUTHORIZATION
        - GIFT_LETTER
        - PROOF_OF_LIQUIDATION
        - CREDIT_REPORT_NON_TRADITIONAL
        - CREDIT_SUPPLEMENT
        - BANKRUPTCY_DISCHARGE_NOTICE
        - BANKRUPTCY_FILING
        - SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE
        - FRAUD_ALERT
        - STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT
        - JUDGMENT
        - COSIGNED_LIABILITY
        - PURCHASE_AGREEMENT_ADDENDUM
        - HOME_INSPECTION_REPORT
        - PEST_INSPECTION_REPORT
        - ROOF_INSPECTION_REPORT
        - POOL_INSPECTION_REPORT
        - EARNEST_MONEY_DEPOSIT
        - FLOOD_HAZARD_NOTICE
        - FLOOD_CERTIFICATION
        - TAX_CERTIFICATE
        - AMENDATORY_CLAUSE
        - PAYOFF_STATEMENT
        - CLOSING_PROTECTION_LETTER
        - SCHEDULE_OF_REAL_ESTATE
        - BORROWER_CERTIFICATION
        - OCCUPANCY_CERTIFICATION
        - TRUTH_IN_LENDING
        - GOOD_FAITH_ESTIMATE
        - ESCROW_WAIVER
        - LOAN_ESTIMATE
        - CLOSING_DISCLOSURE
        - GENERAL_LOAN_ACKNOWLEDGMENT
        - HUD_VA_ADDENDUM
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT
        - MORTGAGE_INSURANCE
        - NET_TANGIBLE_BENEFIT
        - NOTE
        - HOA_BILL
        - ARTICLES_OF_INCORPORATION
        - BYLAWS_OPERATING_AGREEMENT
        - AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE
        - DISCLOSURES_AUDIT_REPORT
        - DOCUMENT_PACKAGE_AUDIT_REPORT
        - DISCLOSURES_TRACKING_REPORT
        - ENERGY_EFFICIENT_MORTGAGE_WORKSHEET
        - IMPORTANT_NOTICE_TO_HOMEBUYER
        - FAIR_LENDING_NOTICE
        - FOR_YOUR_PROTECTION_HOME_INSPECTION
        - RATE_LOCK_AGREEMENT
        - BOND_CERTIFICATE
        - CUSTOMER_IDENTIFICATION_VERIFICATION
        - VERIFICATION_OF_SSN
        - RESIDUAL_INCOME_LETTER
        - OTHER
        - DU_UNDERWRITING_FINDINGS
        - DU_UNDERWRITING_LOG
        - DU_UNDERWRITING_DEFAULTS
        - LPA_UNDERWRITING_FINDINGS
        - OTHER_APPLICATION
        - PRE_QUALIFICATION_LETTER
        - APPRAISAL
        - PRE_APPROVAL_LETTER_DU
        - PRE_APPROVAL_LETTER_LPA
        - PRE_APPROVAL_LETTER
        - PRE_APPROVAL_LETTER:_PREVIEW
        - BUYING_POWER_AUDIT_LOG
        - COMPLIANCE_REPORT
        - ECONSENT_REPORT
        - LOAN_SNAPSHOT
        - HMDA_REPORT
        - ATTACHMENT
        - LETTER_OF_EXPLANATION:_GENERATED_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_GENERATED_ADDRESS_VERIFICATION
        - GENERATED_GIFT_LETTER
        - LETTER_OF_EXPLANATION:_GENERATED_LATE_PAYMENT
        - LETTER_OF_EXPLANATION:_GENERATED_PUBLIC_RECORD
        - LETTER_OF_EXPLANATION:_GENERATED_LARGE_DEPOSIT
        - MEDICAL_RESIDENCY_FELLOWSHIP
        - MEDICAL_LICENSE_DIPLOMA
        - NEAREST_LIVING_RELATIVE
        - EMPLOYMENT_CONTRACT
        - GENERATED_COST_WORKSHEET
        - FNMA_NETPAY_REPORT_ASSETS
        - FNMA_NETPAY_REPORT_INCOME
        - FNMA_NETPAY_BORROWERS_REQUEST
        - FMCC_AIM_CHECK_REQUEST
        - FMCC_AIM_CHECK_REPORT
        - FNMA_NETPAY_GSE_API_XML
        - KNOW_YOUR_CUSTOMER
        - BORROWER_AGREEMENT
        - TRANSACTION_RECEIPT
        - GENERATED_DEBT_CONSOLIDATION_LETTER
        - SECONDARY_IDENTIFICATION
        - CLOSING_PACKAGE
        - PROMISSORY_NOTE
        - DEED_OF_TRUST
        - TITLE_DOCUMENT
        - CLOSING_SETTLEMENT_ONLY
        - ADDITIONAL_CLOSING_DOCUMENT
        - PRELIMINARY_CLOSING_DOCUMENTS
        - SIGNED_CLOSING_DOCUMENTS
        - TRAILING_DOCUMENTS
        - OTHER_CLOSING_DOCUMENTS
        - ADVERSE_ACTION_NOTICE
        - NOTICE_OF_INCOMPLETE_APPLICATION
        - LOAN_MODIFICATION_DOCUMENT
        - RATE_CHECK_FCRA_NOTICE
        - RATE_CHECK_ADVERSE_ACTION_NOTICE
        - RATE_CHECK_REGULATION_B
        - RATE_CHECK_DENIAL_NOTICE
        - LOAN_ADVERSE_ACTION_NOTICE
        - TITLE:COMMITMENT
        - TITLE:_CLOSING_PROTECTION_LETTER
        - TITLE:_WIRING_INSTRUCTIONS
        - TITLE:_ERRORS_AND_OMISSIONS
        - TITLE:_LIEN_JUDGMENT_SUPPORTING_DOC
        - TITLE:_TAX_SUPPORTING_DOC
        - TITLE:_CHAIN_OF_TITLE
        - TITLE:OTHER
        - TITLE:_PROPERTY_PREVIEW
        - TITLE:_BORROWER_PROCEEDS
        - TITLE:_PROPERTY_REPORT
        - EO_ELIGIBILITY_REPORT
        - BLEND_INCOME_VERIFICATION
        - BLEND_EMPLOYMENT_VERIFICATION
        - BLEND_PREQUAL_INCOME_VERIFICATION
        - BLEND_PREQUAL_EMPLOYMENT_VERIFICATION
        - BLEND_INCOME_CONSENT
        - MILITARY_LES
        - CONTRACTOR_BID
        - ANNUITY_INCOME
        - PENSION
        - IDV_EVALUATION_AUDIT_LOG
        - DMS_DECISIONING_OUTPUTS
        - APPRAISAL_DISCLOSURE
        - ARTICLES_OF_FORMATION_FOR_ENTITY_FORMATION
        - CERTIFICATE_OF_GOOD_STANDING
        - CERTIFICATE_OF_ORGANIZATION
        - BYLAWS_OPERATING_AGREEMENT_FOR_ENTITY_FORMATION
        - BUSINESS:_CERTIFICATE_OF_ORGANIZATION
        - BUSINESS:_TRADE_NAME_AFFIDAVIT
        - BUSINESS:_CERTIFICATE_OF_GOOD_STANDING
        - BUSINESS:_PARTERNSHIP_AGREEMENT
        - BUSINESS:_DBA_TRADE_NAME_AFFIDAVIT
        - BUSINESS:_LIMITED_PARTNERSHIP_AGREEMENT
        - BUSINESS:_ASSUMED_NAME_CERTIFICATE
        - BUSINESS:_FICTITIOUS_NAME_CERTIFICATE
        - BUSINESS:_BUSINESS_LICENSE
        - BUSINESS:_ORGANIZATION_FORMATION_AGREEMENT
        - BUSINESS:_JOINT_VENTURE_AGREEMENT
        - BUSINESS:_ARTICLES_OF_INCORPORATION
        - >-
          BUSINESS:_FORMATION_DOCUMENT_OF_PRINCIPALS_ACCORDING_TO_ORGANIZATION_STRUCTURE
        - MI_CERTIFICATE
        - APPLICATION_DISCLOSURE
        - ARM_DISCLOSURE
        - CHARM_BOOKLET
        - COLLATERAL_PROTECTION_INSURANCE
        - COUNSELING_CHECKLIST
        - HOME_EQUITY_NOTICE
        - VA_COUNSELING_CHECKLIST
        - HEL_CREDIT_DISCLOSURE
        - HI_FORECLOSURE_DISCLOSURE
        - HOUSING_COUNSELING_NOTICE
        - KY_FAIR_HOUSING_PAMPHLET
        - LOAN_AGREEMENT_ADDENDUM
        - NM_ANTICOERCION_NOTICE
        - NON_PRIME_COUNSEL_NOTICE
        - NOTIFICATION_TO_BORROWERS
        - NOTIFICATION_VIRGINIA_MORTGAGE_APPLICANTS
        - REQ_MTG_DOCUMENTATION
        - RIGHT_TO_ATTORNEY_DISCL
        - SETTLEMENT_SERVICE_PROVIDER_LIST
        - LOAN_APPROVAL_LETTER
        - NOTICE_TO_PURCHASER
        - EARTHQUAKE_INSURANCE_NOTICE
        - AMORTIZATION_DISCLOSURE
        - CD_COVER_LETTER
        - HOME_LOAN_TOOLKIT
        - JUNIOR_LIEN_DISCLOSURE_NY
        - VA_COMMON_BORROWER_CERT
        - REF_AND_TIMING_NOTICE
        - TITLE_PROTECTION_NOTICE
        - WI_TAX_ESCROW_NOTICE
        - CASH_OUT_COMPARISON_DISCLOSURE
        - BUSINESS:_PARTNERSHIP_AGREEMENT
        - GOVERNMENT_ISSUED_ID
        - DISABILITY_STATEMENT
        - REQUEST_FOR_COE
        - VA_CONTRACT_ADDENDUM
        - CONSENT_TAX_RETURN_INFO
        - BUSINESS:_EIN_ASSIGNMENT_LETTER
        - ALTA_SETTLEMENT_STATEMENT
        - LENDER_TITLE_PACKAGE
        - TITLE_CEMA_BENEFIT_ANALYSIS_ATTORNEY
        - TITLE_CLEAR_TO_CLOSE_CERTIFICATE
        - TITLE_CLEAR_TO_FUND
        - TITLE_DISBURSEMENT_LEDGER_FINAL
        - TITLE_DISBURSEMENT_LEDGER_INITIAL
        - TITLE_RECORDED_MORTGAGE
        - TITLE_REFUND_CHECKS
        - TITLE_SIGNED_DOCS
        - TITLE_SUBORDINATION
        - BORROWER_AUTHORIZATION
        - ADDENDUM_TO_LOAN_APPLICATION
        - LENDER_LOAN_INFORMATION
        - BUSINESS:_CERTIFICATE_OF_LIMITED_PARTNERSHIP
        - CLOSING_ENOTE_AUDIT_TRAIL
        - PRE_FLOOD_REPORT
        - USPS_ADDRESS_VERIFICATION
        - AD_HOC_UPLOAD
        - CLOSING_DISCLOSURE_ADDENDUM
        - HEL_BROCHURE
        - CHILD_CARE_EXPENSE_LETTER
        - CBR_FEE_RECEIPT
        - VERIFIED_PREAPPROVAL_LETTER
        - DEBT_EXCLUSION_RESERVE
        - SSN_VERIFICATION_REPORT
        - SELFIE_WITH_ID
        - VEHICLE_INSURANCE
        - TAX_EXTENSION_LETTER
        - ODOMETER_READING
        - ALTERNATIVE_TRADE_LINES
        - I797_EXTENSION_LETTER
        - ITIN_CARD
        - AIM_CHECK_INCOME_VERIFICATION
        - AIM_CHECK_PREQUAL_INCOME_VERIFICATION
        - AIM_CHECK_EMPLOYMENT_VERIFICATION
        - AIM_CHECK_PREQUAL_EMPLOYMENT_VERIFICATION
        - FEES_REPORT
        - RENTAL_INCOME
        - TRUST_INCOME
        - DISABILITY_INCOME
        - CAPITAL_GAINS_INCOME
        - DIVIDENDS_OR_INTEREST_INCOME
        - INVESTMENT_INCOME
        - VEHICLE_LEASE
        - VEHICLE_CONDITION_REPORT
    DocumentTypeNoOther:
      type: string
      description: Blend document type
      enum:
        - '1003'
        - VA_CHILD_CARE_CERTIFICATE
        - LOE_PUBLIC_RECORD:BANKRUPTCY
        - LOE_PUBLIC_RECORD:TAX_LIEN
        - LOE_PUBLIC_RECORD:JUDGMENT
        - LOE_LARGE_DEPOSITS:TRANSFER
        - LOE_LARGE_DEPOSITS:SALE_OF_ASSET
        - LOE_LARGE_DEPOSITS:INCOME
        - LOE_LARGE_DEPOSITS:GIFT
        - LOE_LARGE_DEPOSITS:OTHER
        - LETTER_OF_EXPLANATION:SHORT_SALE
        - BANK_STATEMENT
        - BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT
        - BANK_STATEMENT:_STOCK_ACCOUNT
        - FINANCIAL_STATEMENT:_BALANCE_SHEET
        - FINANCIAL_STATEMENT:_INCOME
        - IRS1040
        - IRS1041
        - IRS1120
        - IRS1120_S
        - LLC_BTR_DOC
        - IRSW2
        - CRAT4
        - 4506t
        - TAX_TRANSCRIPT
        - DOCUSIGN_CERT_OF_COMP
        - DOCUSIGN_ENVELOPE_HISTORY
        - PAY_STUB
        - PROPERTY_INSURANCE_POLICY:_GENERAL
        - PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE
        - PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION
        - PROPERTY_INSURANCE_POLICY:_HOMEOWNERS
        - PROPERTY_INSURANCE_POLICY:_VOLCANO
        - PROPERTY_INSURANCE_POLICY:_FLOOD
        - PROPERTY_INSURANCE_POLICY:_HAZARD
        - INSURANCE_AGENT_CONTACT_INFO
        - ESIGNATURE_CARD
        - DEPOSIT_ACCOUNT_DISCLOSURE
        - DEPOSIT_ACCOUNT_ADVERSE_ACTION_NOTICE
        - PURCHASE_AGREEMENT
        - OTHER_DISCLOSURES
        - REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T
        - RETIREMENT_ACCOUNT_STATEMENT
        - SOCIAL_SECURITY_AWARD_LETTER
        - TRUST_AGREEMENT
        - VERIFICATION_OF_EMPLOYMENT_LETTER
        - VERIFICATION_OF_EMPLOYMENT
        - VERIFICATION_OF_EMPLOYMENT_REVERIFY
        - VERIFICATION_OF_EMPLOYMENT_RETRIEVED
        - VERIFICATION_OF_INCOME
        - PENSION_AWARD_LETTER
        - ANNUITY_AWARD_LETTER
        - DEFERRED_COMPENSATION_AWARD_LETTER
        - VERIFICATION_OF_MORTGAGE_OR_RENT
        - VERIFICATION_OF_RENT
        - VERIFICATION_OF_MORTGAGE
        - RETIREMENT_LIQUIDITY_TERMS
        - LETTER_OF_EXPLANATION:_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT
        - LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION:_JOB_GAP
        - LETTER_OF_EXPLANATION:_LARGE_DEPOSITS
        - PROPERTY_TAX_BILL
        - MORTGAGE_STATEMENT
        - BORROWER_CONSENT_FORM
        - BORROWER_INCOME_VERIFICATION_CONSENT_FORM
        - APPRAISAL_WAIVER
        - INTENT_TO_PROCEED
        - NATIONAL_IDENTIFICATION
        - BORROWER_PHOTO
        - PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN
        - MARRIAGE_CERTIFICATE
        - DEATH_CERTIFICATE
        - DIVORCE_DECREE
        - NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD
        - CONDOMINIUM_OCCUPANCY_CERTIFICATE
        - HOMEOWNERS_ASSOCIATION_CERTIFICATION
        - BANK_DEPOSIT_SLIP
        - PROPERTY_INSURANCE_POLICY:_HURRICANE
        - PROPERTY_INSURANCE_POLICY:_LEASEHOLD
        - PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY
        - PROPERTY_INSURANCE_POLICY:_STORM
        - PROPERTY_INSURANCE_POLICY:_TORNADO
        - PROPERTY_INSURANCE_POLICY:_WIND
        - CREDIT_REPORT
        - CREDIT_REPORT_SOFT
        - PERMANENT_RESIDENT_IDENTIFICATION
        - PROPERTY_INSURANCE_POLICY:_CONDOMINIUM
        - APPRAISAL_REPORT_SINGLE FAMILY
        - APPRAISAL_REPORT_2_-_4_UNIT
        - APPRAISAL_REPORT_MANUFACTURED_HOME
        - APPRAISAL_REPORT_COOP
        - APPRAISAL_REPORT_EXTERIOR_ONLY
        - APPRAISAL_REPORT_AVM
        - APPRAISAL_REPORT_RENT_SURVEY
        - APPRAISAL_REPORT_OPERATING_INCOME_SCHEDULE
        - APPRAISAL_REPORT_MARKET_CONDITIONS_ADDENDUM
        - APPRAISAL_REPORT_UPDATE_AND_OR_COMPLETION_REPORT
        - APPRAISAL_REPORT_PROPERTY_CONDITION_REPORT
        - APPRAISAL_REPORT_DESK_REVIEW
        - SETTLEMENT_STATEMENT_HUD1
        - VISA
        - PASSPORT
        - NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT
        - DD_214
        - VA_STATEMENT_OF_SERVICE
        - VA_CERTIFICATE_OF_ELIGIBILITY
        - CREDIT_AUTHORIZATION
        - CREDIT_CARD_AUTHORIZATION
        - BIRTH_CERTIFICATE
        - INVOICE_UTILITY_BILL
        - ADDRESS_VERIFICATION
        - LETTER_OF_EXPLANATION_NAME_VARIATION
        - POWER_OF_ATTORNEY
        - RENTAL_AGREEMENT
        - RENTAL_SECURITY_DEPOSIT
        - VERIFICATION_OF_EMPLOYMENT_WRITTEN
        - BUSINESS_LICENSE
        - IRS1099
        - K1
        - IRS1065
        - SOCIAL_SECURITY_PROOF_OF_RECEIPT
        - EMPLOYMENT_OFFER_LETTER
        - RENTAL_INCOME_PROOF_OF_RECEIPT
        - RETIREMENT_AWARD_LETTER
        - VA_AWARD_LETTER
        - BONUS_AND_COMMISSION_DOCUMENTATION
        - CHILD_SUPPORT_INCOME
        - ALIMONY_INCOME
        - CHILD_SUPPORT_LIABILITY
        - ALIMONY_LIABILITY
        - GENERATED_ASSET_STATEMENT
        - PROVIDER_BANK_STATEMENT
        - QA_GAS
        - VALIDATION_ERROR_GAS
        - ACHDEBIT_AUTHORIZATION
        - GIFT_LETTER
        - PROOF_OF_LIQUIDATION
        - CREDIT_REPORT_NON_TRADITIONAL
        - CREDIT_SUPPLEMENT
        - BANKRUPTCY_DISCHARGE_NOTICE
        - BANKRUPTCY_FILING
        - SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE
        - FRAUD_ALERT
        - STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT
        - JUDGMENT
        - COSIGNED_LIABILITY
        - PURCHASE_AGREEMENT_ADDENDUM
        - HOME_INSPECTION_REPORT
        - PEST_INSPECTION_REPORT
        - ROOF_INSPECTION_REPORT
        - POOL_INSPECTION_REPORT
        - EARNEST_MONEY_DEPOSIT
        - FLOOD_HAZARD_NOTICE
        - FLOOD_CERTIFICATION
        - TAX_CERTIFICATE
        - AMENDATORY_CLAUSE
        - PAYOFF_STATEMENT
        - CLOSING_PROTECTION_LETTER
        - SCHEDULE_OF_REAL_ESTATE
        - BORROWER_CERTIFICATION
        - OCCUPANCY_CERTIFICATION
        - TRUTH_IN_LENDING
        - GOOD_FAITH_ESTIMATE
        - ESCROW_WAIVER
        - LOAN_ESTIMATE
        - CLOSING_DISCLOSURE
        - GENERAL_LOAN_ACKNOWLEDGMENT
        - HUD_VA_ADDENDUM
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT
        - MORTGAGE_INSURANCE
        - NET_TANGIBLE_BENEFIT
        - NOTE
        - HOA_BILL
        - ARTICLES_OF_INCORPORATION
        - BYLAWS_OPERATING_AGREEMENT
        - AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE
        - DISCLOSURES_AUDIT_REPORT
        - DOCUMENT_PACKAGE_AUDIT_REPORT
        - DISCLOSURES_TRACKING_REPORT
        - ENERGY_EFFICIENT_MORTGAGE_WORKSHEET
        - IMPORTANT_NOTICE_TO_HOMEBUYER
        - FAIR_LENDING_NOTICE
        - FOR_YOUR_PROTECTION_HOME_INSPECTION
        - RATE_LOCK_AGREEMENT
        - BOND_CERTIFICATE
        - CUSTOMER_IDENTIFICATION_VERIFICATION
        - VERIFICATION_OF_SSN
        - RESIDUAL_INCOME_LETTER
        - DU_UNDERWRITING_FINDINGS
        - DU_UNDERWRITING_LOG
        - DU_UNDERWRITING_DEFAULTS
        - LPA_UNDERWRITING_FINDINGS
        - OTHER_APPLICATION
        - PRE_QUALIFICATION_LETTER
        - APPRAISAL
        - PRE_APPROVAL_LETTER_DU
        - PRE_APPROVAL_LETTER_LPA
        - PRE_APPROVAL_LETTER
        - PRE_APPROVAL_LETTER:_PREVIEW
        - BUYING_POWER_AUDIT_LOG
        - COMPLIANCE_REPORT
        - ECONSENT_REPORT
        - LOAN_SNAPSHOT
        - HMDA_REPORT
        - ATTACHMENT
        - LETTER_OF_EXPLANATION:_GENERATED_CREDIT_INQUIRY
        - LETTER_OF_EXPLANATION:_GENERATED_ADDRESS_VERIFICATION
        - GENERATED_GIFT_LETTER
        - LETTER_OF_EXPLANATION:_GENERATED_LATE_PAYMENT
        - LETTER_OF_EXPLANATION:_GENERATED_PUBLIC_RECORD
        - LETTER_OF_EXPLANATION:_GENERATED_LARGE_DEPOSIT
        - MEDICAL_RESIDENCY_FELLOWSHIP
        - MEDICAL_LICENSE_DIPLOMA
        - NEAREST_LIVING_RELATIVE
        - EMPLOYMENT_CONTRACT
        - GENERATED_COST_WORKSHEET
        - FNMA_NETPAY_REPORT_ASSETS
        - FNMA_NETPAY_REPORT_INCOME
        - FNMA_NETPAY_BORROWERS_REQUEST
        - FMCC_AIM_CHECK_REQUEST
        - FMCC_AIM_CHECK_REPORT
        - FNMA_NETPAY_GSE_API_XML
        - KNOW_YOUR_CUSTOMER
        - BORROWER_AGREEMENT
        - TRANSACTION_RECEIPT
        - GENERATED_DEBT_CONSOLIDATION_LETTER
        - SECONDARY_IDENTIFICATION
        - CLOSING_PACKAGE
        - PROMISSORY_NOTE
        - DEED_OF_TRUST
        - TITLE_DOCUMENT
        - CLOSING_SETTLEMENT_ONLY
        - ADDITIONAL_CLOSING_DOCUMENT
        - PRELIMINARY_CLOSING_DOCUMENTS
        - SIGNED_CLOSING_DOCUMENTS
        - TRAILING_DOCUMENTS
        - OTHER_CLOSING_DOCUMENTS
        - ADVERSE_ACTION_NOTICE
        - NOTICE_OF_INCOMPLETE_APPLICATION
        - LOAN_MODIFICATION_DOCUMENT
        - RATE_CHECK_FCRA_NOTICE
        - RATE_CHECK_ADVERSE_ACTION_NOTICE
        - RATE_CHECK_REGULATION_B
        - RATE_CHECK_DENIAL_NOTICE
        - LOAN_ADVERSE_ACTION_NOTICE
        - TITLE:COMMITMENT
        - TITLE:_CLOSING_PROTECTION_LETTER
        - TITLE:_WIRING_INSTRUCTIONS
        - TITLE:_ERRORS_AND_OMISSIONS
        - TITLE:_LIEN_JUDGMENT_SUPPORTING_DOC
        - TITLE:_TAX_SUPPORTING_DOC
        - TITLE:_CHAIN_OF_TITLE
        - TITLE:OTHER
        - TITLE:_PROPERTY_PREVIEW
        - TITLE:_BORROWER_PROCEEDS
        - TITLE:_PROPERTY_REPORT
        - EO_ELIGIBILITY_REPORT
        - BLEND_INCOME_VERIFICATION
        - BLEND_EMPLOYMENT_VERIFICATION
        - BLEND_PREQUAL_INCOME_VERIFICATION
        - BLEND_PREQUAL_EMPLOYMENT_VERIFICATION
        - BLEND_INCOME_CONSENT
        - MILITARY_LES
        - CONTRACTOR_BID
        - ANNUITY_INCOME
        - PENSION
        - IDV_EVALUATION_AUDIT_LOG
        - DMS_DECISIONING_OUTPUTS
        - APPRAISAL_DISCLOSURE
        - ARTICLES_OF_FORMATION_FOR_ENTITY_FORMATION
        - CERTIFICATE_OF_GOOD_STANDING
        - CERTIFICATE_OF_ORGANIZATION
        - BYLAWS_OPERATING_AGREEMENT_FOR_ENTITY_FORMATION
        - BUSINESS:_CERTIFICATE_OF_ORGANIZATION
        - BUSINESS:_TRADE_NAME_AFFIDAVIT
        - BUSINESS:_CERTIFICATE_OF_GOOD_STANDING
        - BUSINESS:_PARTERNSHIP_AGREEMENT
        - BUSINESS:_DBA_TRADE_NAME_AFFIDAVIT
        - BUSINESS:_LIMITED_PARTNERSHIP_AGREEMENT
        - BUSINESS:_ASSUMED_NAME_CERTIFICATE
        - BUSINESS:_FICTITIOUS_NAME_CERTIFICATE
        - BUSINESS:_BUSINESS_LICENSE
        - BUSINESS:_ORGANIZATION_FORMATION_AGREEMENT
        - BUSINESS:_JOINT_VENTURE_AGREEMENT
        - BUSINESS:_ARTICLES_OF_INCORPORATION
        - >-
          BUSINESS:_FORMATION_DOCUMENT_OF_PRINCIPALS_ACCORDING_TO_ORGANIZATION_STRUCTURE
        - MI_CERTIFICATE
        - APPLICATION_DISCLOSURE
        - ARM_DISCLOSURE
        - CHARM_BOOKLET
        - COLLATERAL_PROTECTION_INSURANCE
        - COUNSELING_CHECKLIST
        - HOME_EQUITY_NOTICE
        - VA_COUNSELING_CHECKLIST
        - HEL_CREDIT_DISCLOSURE
        - HI_FORECLOSURE_DISCLOSURE
        - HOUSING_COUNSELING_NOTICE
        - KY_FAIR_HOUSING_PAMPHLET
        - LOAN_AGREEMENT_ADDENDUM
        - NM_ANTICOERCION_NOTICE
        - NON_PRIME_COUNSEL_NOTICE
        - NOTIFICATION_TO_BORROWERS
        - NOTIFICATION_VIRGINIA_MORTGAGE_APPLICANTS
        - REQ_MTG_DOCUMENTATION
        - RIGHT_TO_ATTORNEY_DISCL
        - SETTLEMENT_SERVICE_PROVIDER_LIST
        - LOAN_APPROVAL_LETTER
        - NOTICE_TO_PURCHASER
        - EARTHQUAKE_INSURANCE_NOTICE
        - AMORTIZATION_DISCLOSURE
        - CD_COVER_LETTER
        - HOME_LOAN_TOOLKIT
        - JUNIOR_LIEN_DISCLOSURE_NY
        - VA_COMMON_BORROWER_CERT
        - REF_AND_TIMING_NOTICE
        - TITLE_PROTECTION_NOTICE
        - WI_TAX_ESCROW_NOTICE
        - CASH_OUT_COMPARISON_DISCLOSURE
        - BUSINESS:_PARTNERSHIP_AGREEMENT
        - GOVERNMENT_ISSUED_ID
        - DISABILITY_STATEMENT
        - REQUEST_FOR_COE
        - VA_CONTRACT_ADDENDUM
        - CONSENT_TAX_RETURN_INFO
        - BUSINESS:_EIN_ASSIGNMENT_LETTER
        - ALTA_SETTLEMENT_STATEMENT
        - LENDER_TITLE_PACKAGE
        - TITLE_CEMA_BENEFIT_ANALYSIS_ATTORNEY
        - TITLE_CLEAR_TO_CLOSE_CERTIFICATE
        - TITLE_CLEAR_TO_FUND
        - TITLE_DISBURSEMENT_LEDGER_FINAL
        - TITLE_DISBURSEMENT_LEDGER_INITIAL
        - TITLE_RECORDED_MORTGAGE
        - TITLE_REFUND_CHECKS
        - TITLE_SIGNED_DOCS
        - TITLE_SUBORDINATION
        - BORROWER_AUTHORIZATION
        - ADDENDUM_TO_LOAN_APPLICATION
        - LENDER_LOAN_INFORMATION
        - BUSINESS:_CERTIFICATE_OF_LIMITED_PARTNERSHIP
        - CLOSING_ENOTE_AUDIT_TRAIL
        - PRE_FLOOD_REPORT
        - USPS_ADDRESS_VERIFICATION
        - AD_HOC_UPLOAD
        - CLOSING_DISCLOSURE_ADDENDUM
        - HEL_BROCHURE
        - CHILD_CARE_EXPENSE_LETTER
        - CBR_FEE_RECEIPT
        - VERIFIED_PREAPPROVAL_LETTER
        - DEBT_EXCLUSION_RESERVE
        - SSN_VERIFICATION_REPORT
        - SELFIE_WITH_ID
        - VEHICLE_INSURANCE
        - TAX_EXTENSION_LETTER
        - ODOMETER_READING
        - ALTERNATIVE_TRADE_LINES
        - I797_EXTENSION_LETTER
        - ITIN_CARD
        - AIM_CHECK_INCOME_VERIFICATION
        - AIM_CHECK_PREQUAL_INCOME_VERIFICATION
        - AIM_CHECK_EMPLOYMENT_VERIFICATION
        - AIM_CHECK_PREQUAL_EMPLOYMENT_VERIFICATION
        - FEES_REPORT
        - RENTAL_INCOME
        - TRUST_INCOME
        - DISABILITY_INCOME
        - CAPITAL_GAINS_INCOME
        - DIVIDENDS_OR_INTEREST_INCOME
        - INVESTMENT_INCOME
        - VEHICLE_LEASE
        - VEHICLE_CONDITION_REPORT
    AddableDocumentType:
      type: string
      description: Document types that can be added in follow ups
      enum:
        - '1003'
        - BANK_STATEMENT
        - PROPERTY_INSURANCE_POLICY:_HOMEOWNERS
        - LETTER_OF_EXPLANATION:_CREDIT_INQUIRY
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION
        - NATIONAL_IDENTIFICATION
        - EARNEST_MONEY_DEPOSIT
        - MORTGAGE_STATEMENT
        - 4506t
        - LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION
        - PROPERTY_INSURANCE_POLICY:_HAZARD
        - BORROWER_CERTIFICATION
        - NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD
        - GIFT_LETTER
        - LETTER_OF_EXPLANATION:_LARGE_DEPOSITS
        - PURCHASE_AGREEMENT
        - HOA_BILL
        - RETIREMENT_AWARD_LETTER
        - DIVORCE_DECREE
        - PROPERTY_TAX_BILL
        - LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT
        - BORROWER_CONSENT_FORM
        - CLOSING_DISCLOSURE
        - IRS1099
        - RETIREMENT_ACCOUNT_STATEMENT
        - LETTER_OF_EXPLANATION_NAME_VARIATION
        - APPRAISAL
        - FINANCIAL_STATEMENT:_INCOME
        - RENTAL_AGREEMENT
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT
        - RETIREMENT_LIQUIDITY_TERMS
        - STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT
        - EMPLOYMENT_OFFER_LETTER
        - K1
        - CREDIT_REPORT
        - CREDIT_REPORT_SOFT
        - VERIFICATION_OF_SSN
        - BORROWER_INCOME_VERIFICATION_CONSENT_FORM
        - DD_214
        - SETTLEMENT_STATEMENT_HUD1
        - PERMANENT_RESIDENT_IDENTIFICATION
        - APPRAISAL_WAIVER
        - CHILD_SUPPORT_LIABILITY
        - CHILD_SUPPORT_INCOME
        - VERIFICATION_OF_RENT
        - PURCHASE_AGREEMENT_ADDENDUM
        - LETTER_OF_EXPLANATION:_JOB_GAP
        - GENERATED_ASSET_STATEMENT
        - VA_CERTIFICATE_OF_ELIGIBILITY
        - PAYOFF_STATEMENT
        - OCCUPANCY_CERTIFICATION
        - SOCIAL_SECURITY_PROOF_OF_RECEIPT
        - BANKRUPTCY_DISCHARGE_NOTICE
        - BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY
        - PRE_QUALIFICATION_LETTER
        - CREDIT_CARD_AUTHORIZATION
        - IRS1120
        - EMPLOYMENT_CONTRACT
        - LLC_BTR_DOC
        - ADDRESS_VERIFICATION
        - FINANCIAL_STATEMENT:_BALANCE_SHEET
        - LOAN_ESTIMATE
        - PROPERTY_INSURANCE_POLICY:_TORNADO
        - PROPERTY_INSURANCE_POLICY:_GENERAL
        - VERIFICATION_OF_MORTGAGE
        - PROOF_OF_LIQUIDATION
        - VISA
        - VA_AWARD_LETTER
        - HUD_VA_ADDENDUM
        - BUSINESS_LICENSE
        - BANKRUPTCY_FILING
        - IRS1120_S
        - MEDICAL_LICENSE_DIPLOMA
        - GENERAL_LOAN_ACKNOWLEDGMENT
        - PEST_INSPECTION_REPORT
        - RATE_LOCK_AGREEMENT
        - BANK_STATEMENT:_STOCK_ACCOUNT
        - FLOOD_CERTIFICATION
        - NOTE
        - NEAREST_LIVING_RELATIVE
        - VA_STATEMENT_OF_SERVICE
        - BONUS_AND_COMMISSION_DOCUMENTATION
        - NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT
        - FLOOD_HAZARD_NOTICE
        - PROPERTY_INSURANCE_POLICY:_CONDOMINIUM
        - PROPERTY_INSURANCE_POLICY:_FLOOD
        - TAX_TRANSCRIPT
        - MARRIAGE_CERTIFICATE
        - REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T
        - PASSPORT
        - MEDICAL_RESIDENCY_FELLOWSHIP
        - INVOICE_UTILITY_BILL
        - AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE
        - BANK_DEPOSIT_SLIP
        - ALIMONY_INCOME
        - HOMEOWNERS_ASSOCIATION_CERTIFICATION
        - IRS1065
        - COSIGNED_LIABILITY
        - PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN
        - IRS1041
        - JUDGMENT
        - POWER_OF_ATTORNEY
        - BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT
        - BIRTH_CERTIFICATE
        - IMPORTANT_NOTICE_TO_HOMEBUYER
        - RENTAL_INCOME_PROOF_OF_RECEIPT
        - ESCROW_WAIVER
        - ALIMONY_LIABILITY
        - RENTAL_SECURITY_DEPOSIT
        - DEATH_CERTIFICATE
        - GOOD_FAITH_ESTIMATE
        - ACHDEBIT_AUTHORIZATION
        - HOME_INSPECTION_REPORT
        - ARTICLES_OF_INCORPORATION
        - PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY
        - FOR_YOUR_PROTECTION_HOME_INSPECTION
        - FAIR_LENDING_NOTICE
        - PROPERTY_INSURANCE_POLICY:_HURRICANE
        - BYLAWS_OPERATING_AGREEMENT
        - PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE
        - TRUST_AGREEMENT
        - PROPERTY_INSURANCE_POLICY:_LEASEHOLD
        - PROPERTY_INSURANCE_POLICY:_WIND
        - RESIDUAL_INCOME_LETTER
        - PROPERTY_INSURANCE_POLICY:_VOLCANO
        - PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION
        - ROOF_INSPECTION_REPORT
        - PROPERTY_INSURANCE_POLICY:_STORM
        - SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE
        - POOL_INSPECTION_REPORT
        - PRE_APPROVAL_LETTER
        - PRE_APPROVAL_LETTER:_PREVIEW
        - DISCLOSURES_TRACKING_REPORT
        - INSURANCE_AGENT_CONTACT_INFO
        - SECONDARY_IDENTIFICATION
        - CLOSING_PACKAGE
        - CONTRACTOR_BID
        - VA_CHILD_CARE_CERTIFICATE
        - LETTER_OF_EXPLANATION:SHORT_SALE
        - VERIFICATION_OF_EMPLOYMENT_LETTER
        - APPRAISAL_DISCLOSURE
        - PENSION
        - ANNUITY_INCOME
        - ADDENDUM_TO_LOAN_APPLICATION
        - LENDER_LOAN_INFORMATION
        - CLOSING_ENOTE_AUDIT_TRAIL
        - CHILD_CARE_EXPENSE_LETTER
        - DEBT_EXCLUSION_RESERVE
    LendingLosMilestoneName:
      type: string
      description: >-
        ENUM describing that status of the application. The following milestones
        can be configured to be displayed to the Borrower on their landing page
        after submitting their application in Blend (SUBMITTED, PROCESSING,
        UNDERWRITING, CONDITIONAL APPROVAL, APPROVED, CLOSING, CLOSED, FUNDED).
        The other milestones are only visible to the lender application.
      enum:
        - SUBMITTED
        - PROCESSING
        - UNDERWRITING
        - CONDITIONAL_APPROVAL
        - APPROVED
        - CLOSING
        - CLOSED
        - FUNDED
        - PREQUALIFIED
        - PREAPPROVED
        - LOAN_ESTIMATE_SENT
        - APPRAISAL_ORDERED
        - APPRAISAL_RECEIVED
        - CLEAR_TO_CLOSE
        - DOCS_SENT
        - SET_UP
        - DECISIONED
        - CONDITIONS_SUBMITTED
        - APPRAISAL_APPROVED
        - RATE_LOCKED
        - CLOSING_DISCLOSURE_SENT
        - DENIED
    LendingAuthenticationRequiredErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Authentication required
        display:
          type: string
          example: Your credentials are invalid.
        trackingId:
          type: string
          example: cbd15fc4-a8cc-45db-ac87-f90802ebbcc3
    LendingConflictErrorSchema:
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Conflict
        display:
          type: string
          example: >-
            The loan that you are trying to access is in an invalid state.
            Please validate the loan details in your Blend lending account
            before retrying this action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LockedErrorSchema:
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Locked
        display:
          type: string
          example: >-
            The resource you are trying to access is locked. Please try again in
            a few minutes.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LendingRateLimitedErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Rate Limited
        display:
          type: string
          example: >-
            There have been too many requests for this resource. Please try
            again later.
        trackingId:
          type: string
          example: a62e8b59-5ac7-40a5-a6f8-a0e34a7f2705
    LendingInternalServerErrorSchema:
      type: object
      required:
        - error
        - display
      properties:
        error:
          type: string
          example: Internal Server Error
        display:
          type: string
          example: Something went wrong. Please try again later.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LendingInvalidRequestErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Invalid Request.
        display:
          type: string
          example: The action you're trying to take is invalid.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LendingNotAuthorizedErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Forbidden.
        display:
          type: string
          example: You do not have the appropriate permissions to take this action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    NotFoundErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Not Found
        display:
          type: string
          example: >-
            The action you're trying to take is invalid. Please validate the
            loan details in your Blend lending portal before retrying this
            action.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    GoneErrorSchema:
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: Gone
        display:
          type: string
          example: The resource you are trying to access no longer exists.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LendingInvalidUpdateErrorSchema:
      type: object
      required:
        - error
        - display
        - trackingId
      properties:
        error:
          type: string
          example: The requested update is invalid
        display:
          type: string
          example: Please provide a valid fieldName.
        trackingId:
          type: string
          example: 2559635c-6a0b-406a-85b2-e0e8e23c35ab
    LoginMethod:
      type: string
      description: Login Method
      enum:
        - email
        - SSO
        - borrowerSAML
        - anonymousBorrower
    PullType:
      type: string
      description: Pull type
      enum:
        - Hard
        - Soft
        - PreQual
    SolutionSubType:
      type: string
      description: Solution Sub Type
      enum:
        - HELOAN
        - HELOC
        - MORTGAGE
        - CANADA_MORTGAGE
        - ACCOUNT_OPENING
        - AUTO
        - SPECIALTY_VEHICLE
        - PERSONAL_LOAN
        - PROGRAM_LOAN
        - PERSONAL_LOC
        - CREDIT_CARD
        - CONFIGURABLE_PRODUCTS
        - MORTGAGE_MODIFICATION
        - OTHER
      example: MORTGAGE
    UserState:
      type: string
      description: The user's status in Blend
      enum:
        - active
        - activationRequired
        - dormant
        - deleted
        - provisional
        - lockedOut
    ApplicationStatus:
      type: string
      description: An ENUM for the status of the application
      enum:
        - Pending Email Invitation
        - Email Invitation Sent
        - Email Invitations Sent
        - Application Ready to Start
        - Application in Progress
        - Application Completed
        - Underwriting
        - Application Ready to Start
        - 1/2 in Progress
        - 2/2 in Progress
        - 1/2 Submitted
        - Closing
        - Closed
      example: Application Completed
    PartyType:
      type: string
      description: Party type
      enum:
        - BORROWER
        - COBORROWER
        - LENDER
        - APPRAISER
        - ATTORNEY_IN_FACT
        - AUTHORIZED_REPRESENTATIVE
        - AUTHORIZED_THIRD_PARTY
        - BUILDER
        - GIFT_DONOR
        - HAZARD_INSURANCE_AGENT
        - LANDLORD
        - NON_APPLICANT_USER
        - NON_TITLE_NON_SPOUSE_OWNERSHIP_INTEREST
        - NON_TITLE_SPOUSE
        - OTHER
        - PROPERTY_SELLER
        - REAL_ESTATE_AGENT
        - REAL_ESTATE_LISTING_AGENT
        - REAL_ESTATE_SELLING_AGENT
        - SETTLOR
        - SETTLOR_TRUSTEE
        - SPOUSE
        - TITLE_HOLDER
        - TITLE_HOLDER_SETTLOR_TRUSTEE
        - TITLE_HOLDER_TRUSTEE
        - TRUSTEE
        - UNSPECIFIED
    GetExportRequestResponse:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          description: The uuid of the export request.
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED
            - REQUESTED
            - TRANSMITTED
          description: A string detailing the status of the export request.
        exportType:
          type: string
          enum:
            - APPLICATION
            - PRICING
          description: The type of export.
        exportTrigger:
          type: string
          description: The action that triggered the export.
        requestedDate:
          type: string
          description: The timestamp that the export was requested.
        message:
          type: string
          description: Information about the export.
        exportedDate:
          type: string
          description: The timestamp that the export completed.
        conflicts:
          $ref: '#/components/schemas/ConflictError/properties/conflicts'
    PostExportRequestResponse:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          description: The uuid of the export request.
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED
            - REQUESTED
            - TRANSMITTED
          description: A string detailing the status of the export request.
        exportType:
          type: string
          enum:
            - APPLICATION
            - PRICING
          description: The type of export.
        exportTrigger:
          type: string
          description: The action that triggered the export.
        requestedDate:
          type: string
          description: The timestamp that the export was requested.
        message:
          type: string
          description: Information about the export.
        exportedDate:
          type: string
          description: The timestamp that the export completed.
    InvalidRequestError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    AuthRequiredError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    NotAuthorizedError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    NotFoundError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    ConflictError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
        conflicts:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              fieldPath:
                type: string
              fieldDisplayName:
                type: string
            required:
              - description
              - fieldPath
              - fieldDisplayName
          description: Information about data conflicts between the LOS and Blend.
    InternalServerError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    GenericError:
      type: object
      required:
        - trackingId
        - error
        - display
      properties:
        trackingId:
          type: string
        error:
          type: string
        display:
          type: string
    Activity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verb:
          $ref: '#/components/schemas/Verb'
        createdAt:
          type: string
          format: date-time
          example: '2022-08-03T20:07:27+00:00'
        actor:
          type: object
          properties:
            email:
              type: string
              format: email
            IP:
              type: string
              format: ipv4
      required:
        - id
        - verb
        - createdAt
        - actor
    Verb:
      type: string
      enum:
        - ADDED_TO_ENCOMPASS
        - ADD_NOTE
        - ADVERSE_ACTION
        - AIM_CHECK_ACTIVITY
        - AO_APPLICANT_UPDATED
        - AO_APPLICATION_WITHDRAWN
        - AO_AUTO_APPROVAL
        - AO_AUTO_REJECTION
        - AO_CONSUMER_REPORT_PULLED
        - AO_CUSTOMER_LOOKUP
        - AO_MANUAL_DECISION
        - AO_PROCEEDED_WITHOUT_COAPPLICANT
        - AO_SUBMITTED_FOR_VERIFICATION
        - APPLICATION_COMPLETED
        - APPLICATION_EXPORT_ATTEMPTED
        - APPLICATION_TEMPLATE_MODIFIED
        - ARCHIVED
        - AUTO_ASSIGNED_LOAN
        - BLEND_INCOME_ACTIVITY
        - BLEND_INCOME_MANUAL_QC
        - BORROWERS_MOVED
        - BORROWER_ACTIVATE
        - BORROWER_ADDED
        - BORROWER_BULK_EMAIL_UPDATE
        - BORROWER_LOAN_SCENARIOS_NOTIFIED
        - BORROWER_REMOVED
        - BORROWER_SIGNUP
        - BORROWER_UPDATED
        - CALCULATED_BUYING_POWER
        - CALLED_NETPAY
        - CALLED_NETPAY_REPORTS
        - CALLED_THE_WORK_NUMBER
        - CLOSE_FLOW_SURVEY_COMPLETED
        - COBORROWER_GAVE_CONSENT_TO_LENDER_CONTACT
        - COBORROWER_INFORMATION_CHANGED
        - COBORROWER_INVITATION_EMAIL
        - COMPLETE_APPLICATION_REMINDER
        - COPILOT_ACTIVITY
        - CREATED_DISCLOSURE
        - CREDIT_V2
        - DECISION_UPDATE
        - DECLINED_ESIGN_DOCS
        - DECLINE_SOFT_CREDIT_CONSENT
        - DECRYPTED_SSN
        - DISCLOSURES_FAILED_TO_ISSUE
        - DISCLOSURES_ISSUED
        - DISCLOSURES_STATUS_CHANGED
        - DOCUMENT_EXPORTED
        - DOCUMENT_SCREENSHOT_TAKEN
        - DOWNLOAD_APPLICATION_PACKAGE
        - DOWNLOAD_DOCUMENT
        - ECOA_UPDATED
        - EMAIL_FOLLOWUP_REMINDER
        - EXPORTED_TO_LOS
        - FEES_PULLED
        - FEES_REPORT_DOCUMENT_UPLOADED
        - FOLLOW_UP_ACCEPTED
        - FOLLOW_UP_ADDED
        - FOLLOW_UP_ADDED_TO_DRAFT
        - FOLLOW_UP_CANCELLED
        - FOLLOW_UP_COMPLETED
        - FOLLOW_UP_EMAIL_SENT
        - FOLLOW_UP_REJECTED
        - FOLLOW_UP_SMS_SENT
        - FOLLOW_UP_UNREJECTED
        - FOLLOW_UP_WAIVED
        - FORCED_APPLICATION_COMPLETE
        - GAS_GENERATION
        - GENERATE_PREAPPROVAL_LETTER
        - GET_ACCOUNT_OPENING_APPLICATIONS
        - GIFT_LETTER_SENT
        - IDV_EVALUATION_COMPLETED
        - IDV_EVALUATION_UPDATED
        - INITIATED_AUS
        - INITIATED_PRECLOSE
        - INTEGRATION_CREATED_LOAN
        - INVALIDATED_DISCLOSURE
        - INVITED_BORROWERS
        - IVES_REQ_STATUS_ACTIVITY
        - LENDER_CREATED_LOAN
        - LENDER_EMAIL_CHANGED
        - LENDER_FEEDBACK_COMPLETED
        - LENDER_TAKE_OVER
        - LIST_DISCLOSURES
        - LOAN_ADD_DOC
        - LOAN_ASSIGNED
        - LOAN_DOWNLOADED
        - LOAN_EDITED
        - LOAN_REASSIGNED
        - LOAN_REFRESH_BANK_ACCOUNTS
        - LOAN_REMOVE_ASSET
        - LOAN_REMOVE_DOC
        - LOAN_SKIP_DOC
        - LOAN_TEAM_DELETED
        - LOAN_TEAM_UPDATED
        - LOAN_VIEWED_DOCS
        - LOCKED_USER_ACTIVATION_ATTEMPT
        - LOS_MILESTONE_UPDATED
        - MILESTONE_COMPLETED
        - MULTI_SENT_TO_LOS
        - NPS_COMPLETED
        - ONE_TAP_INELIGIBLE
        - ONE_TAP_OFF_RAMP
        - OPENED_ESIGN_ENVELOPE
        - PACKAGE_CREATED
        - PACKAGE_FAILED_TO_CREATE
        - PACKAGE_STATUS_UPDATED
        - PARTY_ADDED
        - PARTY_REMOVED
        - PARTY_UPDATED
        - PERSONAL_LOANS_RATE_CHECK
        - PRIMARY_ASSIGNEE_SET
        - PROCESS_APPLY
        - PROCESS_BACK
        - PROCESS_COMPLETED
        - PROCESS_REMOVE
        - PROCESS_RESET
        - PULLED_CREDIT
        - QUERIED_LOANS
        - RAN_DESKTOP_UNDERWRITER
        - RATE_LOCK_INITIAL_REQUEST
        - RATE_LOCK_REQUEST_FAILED
        - RATE_LOCK_STATUS_CHECK
        - REFRESHED_ASSETS
        - REINVITED_BORROWERS
        - REMOVE_AGENCY_CASE_NUMBER
        - REMOVE_CRM_KEY
        - REMOVE_LOS_KEY
        - REMOVE_RATE_LOCK_LOAN
        - REMOVE_REFERENCE_NUMBER
        - REQUESTED_CATEGORIES
        - SELECTED_PRODUCT
        - SENT_LOAN_COST_WORKSHEET
        - SENT_PREAPPROVAL_LETTER
        - SENT_QUOTE
        - SET_AGENCY_CASE_NUMBER
        - SET_CRM_KEY
        - SET_LOS_KEY
        - SET_RATE_LOCK_LOAN
        - SET_REFERENCE_NUMBER
        - SIGNED_ESIGN_DOCS
        - SIGNED_ESIGN_DOCS_THIRD_PARTY
        - SKIPPED_NETPAY
        - SKIPPED_THE_WORK_NUMBER
        - SMS_BORROWER_PREAPPROVED_SENT
        - SMS_CLOSE_REMINDER_SENT
        - SMS_CLOSE_REVIEW_DOCS_SENT
        - SMS_CONSENT_STATUS_UPDATED
        - SMS_DISCLOSURES_READY_SENT
        - SMS_DISCLOSURES_REMINDER_SENT
        - SMS_FOLLOWUP_REMINDER_SENT
        - SMS_INVITE_BORROWER_SENT
        - STATUS_UPDATED
        - TASK_COMPLETED
        - TASK_DOCUMENTS
        - TITLE_CANCELLED
        - TITLE_ORDERED
        - TRANSITION_APPLICATIONS
        - TRID_TRIGGERED
        - UNARCHIVED
        - UPLOADED_DOCUMENT
        - USER_ACCEPTED_TERMS
        - USER_ACCOUNT_UNLOCKED
        - USER_GAVE_CONSENT_TO_LENDER_CONTACT
        - USER_GAVE_ECONSENT
        - USER_GAVE_ECONSENT_ON_BEHALF_OF_COBORROWER
        - USER_GAVE_HARD_CREDIT_CONSENT
        - USER_GAVE_SOFT_CREDIT_CONSENT
        - USER_GAVE_SOFT_CREDIT_CONSENT_ON_BEHALF_OF_COBORROWER
        - USER_GAVE_VOI_CONSENT
        - USER_GAVE_VOI_CONSENT_ON_BEHALF_OF_COBORROWER
        - USER_LOGIN
        - VIEWED_ALL_ESIGN_DOCS
        - VIEWED_LOAN
    SessionsListResponse:
      properties:
        fileId:
          type: string
        size:
          type: number
        duration:
          type: number
      required:
        - fileId
        - size
        - duration
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    TargetInstance:
      type: apiKey
      in: header
      name: blend-target-instance
x-headers:
  - key: blend-api-version
    value: 7.0.0
  - key: cache-control
    value: no-cache
  - key: Content-Type
    value: application/json
